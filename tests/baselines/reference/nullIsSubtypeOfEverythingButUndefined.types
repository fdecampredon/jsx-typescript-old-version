=== tests/cases/compiler/nullIsSubtypeOfEverythingButUndefined.ts ===
Line 2 col 4 IdentifierName "r0" = any
Line 2 col 9 ConditionalExpression "true ? null : null" = any
Line 3 col 4 IdentifierName "r0" = any
Line 3 col 9 ConditionalExpression "true ? null : null" = any
Line 5 col 4 IdentifierName "u" = any
Line 5 col 14 IdentifierName "undefined" = any
Line 6 col 4 IdentifierName "r0b" = any
Line 6 col 10 ConditionalExpression "true ? u : null" = any
Line 6 col 17 IdentifierName "u" = any
Line 7 col 4 IdentifierName "r0b" = any
Line 7 col 10 ConditionalExpression "true ? null : u" = any
Line 7 col 24 IdentifierName "u" = any
Line 9 col 4 IdentifierName "r1" = number
Line 9 col 9 ConditionalExpression "true ? 1 : null" = number
Line 10 col 4 IdentifierName "r1" = number
Line 10 col 9 ConditionalExpression "true ? null : 1" = number
Line 12 col 4 IdentifierName "r2" = string
Line 12 col 9 ConditionalExpression "true ? '' : null" = string
Line 13 col 4 IdentifierName "r2" = string
Line 13 col 9 ConditionalExpression "true ? null : ''" = string
Line 15 col 4 IdentifierName "r3" = boolean
Line 15 col 9 ConditionalExpression "true ? true : null" = boolean
Line 16 col 4 IdentifierName "r3" = boolean
Line 16 col 9 ConditionalExpression "true ? null : true" = boolean
Line 18 col 4 IdentifierName "r4" = Date
Line 18 col 9 ConditionalExpression "true ? new Date() : null" = Date
Line 18 col 16 ObjectCreationExpression "new Date()" = Date
Line 18 col 20 IdentifierName "Date" = { prototype: Date; parse(s: string): number; UTC(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): number; now(): number; (): string; new(): Date; new(value: number): Date; new(value: string): Date; new(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): Date; }
Line 19 col 4 IdentifierName "r4" = Date
Line 19 col 9 ConditionalExpression "true ? null : new Date()" = Date
Line 19 col 23 ObjectCreationExpression "new Date()" = Date
Line 19 col 27 IdentifierName "Date" = { prototype: Date; parse(s: string): number; UTC(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): number; now(): number; (): string; new(): Date; new(value: number): Date; new(value: string): Date; new(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): Date; }
Line 21 col 4 IdentifierName "r5" = RegExp
Line 21 col 9 ConditionalExpression "true ? /1/ : null" = RegExp
Line 22 col 4 IdentifierName "r5" = RegExp
Line 22 col 9 ConditionalExpression "true ? null : /1/" = RegExp
Line 24 col 4 IdentifierName "r6" = { foo: number; }
Line 24 col 9 ConditionalExpression "true ? { foo: 1 } : null" = { foo: number; }
Line 24 col 16 ObjectLiteralExpression "{ foo: 1 }" = { foo: number; }
Line 24 col 18 IdentifierName "foo" = number
Line 25 col 4 IdentifierName "r6" = { foo: number; }
Line 25 col 9 ConditionalExpression "true ? null : { foo: 1 }" = { foo: number; }
Line 25 col 23 ObjectLiteralExpression "{ foo: 1 }" = { foo: number; }
Line 25 col 25 IdentifierName "foo" = number
Line 27 col 4 IdentifierName "r7" = () => void
Line 27 col 9 ConditionalExpression "true ? () => { } : null" = () => void
Line 27 col 16 ParenthesizedArrowFunctionExpression "() => { }" = () => void
Line 28 col 4 IdentifierName "r7" = () => void
Line 28 col 9 ConditionalExpression "true ? null : () => { }" = () => void
Line 28 col 23 ParenthesizedArrowFunctionExpression "() => { }" = () => void
Line 30 col 4 IdentifierName "r8" = <T>(x: T) => T
Line 30 col 9 ConditionalExpression "true ? <T>(x: T) => { return x } : null" = <T>(x: T) => T
Line 30 col 16 ParenthesizedArrowFunctionExpression "<T>(x: T) => { return x }" = <T>(x: T) => T
Line 30 col 17 IdentifierName "T" = T
Line 30 col 20 IdentifierName "x" = T
Line 30 col 23 IdentifierName "T" = T
Line 30 col 38 IdentifierName "x" = T
Line 31 col 4 IdentifierName "r8b" = <T>(x: T) => T
Line 31 col 10 ConditionalExpression "true ? null : <T>(x: T) => { return x }" = <T>(x: T) => T
Line 31 col 24 ParenthesizedArrowFunctionExpression "<T>(x: T) => { return x }" = <T>(x: T) => T
Line 31 col 25 IdentifierName "T" = T
Line 31 col 28 IdentifierName "x" = T
Line 31 col 31 IdentifierName "T" = T
Line 31 col 46 IdentifierName "x" = T
Line 33 col 10 IdentifierName "I1" = I1
Line 33 col 15 IdentifierName "foo" = number
Line 34 col 4 IdentifierName "i1" = I1
Line 34 col 8 IdentifierName "I1" = I1
Line 35 col 4 IdentifierName "r9" = I1
Line 35 col 9 ConditionalExpression "true ? i1 : null" = I1
Line 35 col 16 IdentifierName "i1" = I1
Line 36 col 4 IdentifierName "r9" = I1
Line 36 col 9 ConditionalExpression "true ? null : i1" = I1
Line 36 col 23 IdentifierName "i1" = I1
Line 38 col 6 IdentifierName "C1" = C1
Line 38 col 11 IdentifierName "foo" = number
Line 39 col 4 IdentifierName "c1" = C1
Line 39 col 8 IdentifierName "C1" = C1
Line 40 col 4 IdentifierName "r10" = C1
Line 40 col 10 ConditionalExpression "true ? c1 : null" = C1
Line 40 col 17 IdentifierName "c1" = C1
Line 41 col 4 IdentifierName "r10" = C1
Line 41 col 10 ConditionalExpression "true ? null : c1" = C1
Line 41 col 24 IdentifierName "c1" = C1
Line 43 col 6 IdentifierName "C2" = C2<T>
Line 43 col 9 IdentifierName "T" = T
Line 43 col 14 IdentifierName "foo" = T
Line 43 col 19 IdentifierName "T" = T
Line 44 col 4 IdentifierName "c2" = C2<number>
Line 44 col 8 IdentifierName "C2" = C2<T>
Line 45 col 4 IdentifierName "r12" = C2<number>
Line 45 col 10 ConditionalExpression "true ? c2 : null" = C2<number>
Line 45 col 17 IdentifierName "c2" = C2<number>
Line 46 col 4 IdentifierName "r12" = C2<number>
Line 46 col 10 ConditionalExpression "true ? null : c2" = C2<number>
Line 46 col 24 IdentifierName "c2" = C2<number>
Line 48 col 5 IdentifierName "E" = E
Line 48 col 9 IdentifierName "A" = E
Line 49 col 4 IdentifierName "r13" = typeof E
Line 49 col 10 ConditionalExpression "true ? E : null" = typeof E
Line 49 col 17 IdentifierName "E" = typeof E
Line 50 col 4 IdentifierName "r13" = typeof E
Line 50 col 10 ConditionalExpression "true ? null : E" = typeof E
Line 50 col 24 IdentifierName "E" = typeof E
Line 52 col 4 IdentifierName "r14" = E
Line 52 col 10 ConditionalExpression "true ? E.A : null" = E
Line 52 col 17 MemberAccessExpression "E.A" = E
Line 52 col 17 IdentifierName "E" = typeof E
Line 52 col 19 IdentifierName "A" = E
Line 53 col 4 IdentifierName "r14" = E
Line 53 col 10 ConditionalExpression "true ? null : E.A" = E
Line 53 col 24 MemberAccessExpression "E.A" = E
Line 53 col 24 IdentifierName "E" = typeof E
Line 53 col 26 IdentifierName "A" = E
Line 55 col 9 IdentifierName "f" = typeof f
Line 56 col 7 IdentifierName "f" = f
Line 57 col 15 IdentifierName "bar" = number
Line 59 col 4 IdentifierName "af" = typeof f
Line 59 col 15 IdentifierName "f" = typeof f
Line 60 col 4 IdentifierName "r15" = typeof f
Line 60 col 10 ConditionalExpression "true ? af : null" = typeof f
Line 60 col 17 IdentifierName "af" = typeof f
Line 61 col 4 IdentifierName "r15" = typeof f
Line 61 col 10 ConditionalExpression "true ? null : af" = typeof f
Line 61 col 24 IdentifierName "af" = typeof f
Line 63 col 6 IdentifierName "c" = c
Line 63 col 10 IdentifierName "baz" = string
Line 64 col 7 IdentifierName "c" = c
Line 65 col 15 IdentifierName "bar" = number
Line 67 col 4 IdentifierName "ac" = typeof c
Line 67 col 15 IdentifierName "c" = typeof c
Line 68 col 4 IdentifierName "r16" = typeof c
Line 68 col 10 ConditionalExpression "true ? ac : null" = typeof c
Line 68 col 17 IdentifierName "ac" = typeof c
Line 69 col 4 IdentifierName "r16" = typeof c
Line 69 col 10 ConditionalExpression "true ? null : ac" = typeof c
Line 69 col 24 IdentifierName "ac" = typeof c
Line 71 col 9 IdentifierName "f17" = typeof f17
Line 71 col 13 IdentifierName "T" = T
Line 71 col 16 IdentifierName "x" = T
Line 71 col 19 IdentifierName "T" = T
Line 72 col 8 IdentifierName "r17" = T
Line 72 col 14 ConditionalExpression "true ? x : null" = T
Line 72 col 21 IdentifierName "x" = T
Line 73 col 8 IdentifierName "r17" = T
Line 73 col 14 ConditionalExpression "true ? null : x" = T
Line 73 col 28 IdentifierName "x" = T
Line 76 col 9 IdentifierName "f18" = typeof f18
Line 76 col 13 IdentifierName "T" = T
Line 76 col 16 IdentifierName "U" = U
Line 76 col 19 IdentifierName "x" = U
Line 76 col 22 IdentifierName "U" = U
Line 77 col 8 IdentifierName "r18" = U
Line 77 col 14 ConditionalExpression "true ? x : null" = U
Line 77 col 21 IdentifierName "x" = U
Line 78 col 8 IdentifierName "r18" = U
Line 78 col 14 ConditionalExpression "true ? null : x" = U
Line 78 col 28 IdentifierName "x" = U
Line 85 col 4 IdentifierName "r19" = Object
Line 85 col 10 ConditionalExpression "true ? new Object() : null" = Object
Line 85 col 17 ObjectCreationExpression "new Object()" = Object
Line 85 col 21 IdentifierName "Object" = { prototype: Object; getPrototypeOf(o: any): any; getOwnPropertyDescriptor(o: any, p: string): PropertyDescriptor; getOwnPropertyNames(o: any): string[]; create(o: any, properties?: PropertyDescriptorMap): any; defineProperty(o: any, p: string, attributes: PropertyDescriptor): any; defineProperties(o: any, properties: PropertyDescriptorMap): any; seal(o: any): any; freeze(o: any): any; preventExtensions(o: any): any; isSealed(o: any): boolean; isFrozen(o: any): boolean; isExtensible(o: any): boolean; keys(o: any): string[]; (): any; (value: any): any; new(value?: any): Object; }
Line 86 col 4 IdentifierName "r19" = Object
Line 86 col 10 ConditionalExpression "true ? null : new Object()" = Object
Line 86 col 24 ObjectCreationExpression "new Object()" = Object
Line 86 col 28 IdentifierName "Object" = { prototype: Object; getPrototypeOf(o: any): any; getOwnPropertyDescriptor(o: any, p: string): PropertyDescriptor; getOwnPropertyNames(o: any): string[]; create(o: any, properties?: PropertyDescriptorMap): any; defineProperty(o: any, p: string, attributes: PropertyDescriptor): any; defineProperties(o: any, properties: PropertyDescriptorMap): any; seal(o: any): any; freeze(o: any): any; preventExtensions(o: any): any; isSealed(o: any): boolean; isFrozen(o: any): boolean; isExtensible(o: any): boolean; keys(o: any): string[]; (): any; (value: any): any; new(value?: any): Object; }
Line 88 col 4 IdentifierName "r20" = {}
Line 88 col 10 ConditionalExpression "true ? {} : null" = {}
Line 88 col 17 ObjectLiteralExpression "{}" = {}
Line 89 col 4 IdentifierName "r20" = {}
Line 89 col 10 ConditionalExpression "true ? null : {}" = {}
Line 89 col 24 ObjectLiteralExpression "{}" = {}