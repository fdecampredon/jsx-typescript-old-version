=== tests/cases/compiler/genericTypeParameterEquivalence1.ts ===
Line 0 col 4 IdentifierName "a" = { x: <T>(y: T) => T; }
Line 0 col 8 ObjectLiteralExpression "{
   x: function <T>(y: T): T { return null; }
}" = { x: <T>(y: T) => T; }
Line 1 col 0 IdentifierName "x" = <T>(y: T) => T
Line 1 col 6 FunctionExpression "function <T>(y: T): T { return null; }" = <T>(y: T) => T
Line 1 col 16 IdentifierName "T" = any
Line 1 col 19 IdentifierName "y" = T
Line 1 col 22 IdentifierName "T" = T
Line 1 col 26 IdentifierName "T" = T
Line 3 col 4 IdentifierName "a2" = { x: (y: any) => any; }
Line 3 col 9 ObjectLiteralExpression "{
   x: function (y: any): any { return null; }
}" = { x: (y: any) => any; }
Line 4 col 0 IdentifierName "x" = (y: any) => any
Line 4 col 6 FunctionExpression "function (y: any): any { return null; }" = (y: any) => any
Line 4 col 16 IdentifierName "y" = any
Line 6 col 17 IdentifierName "I" = I
Line 7 col 0 IdentifierName "x" = <T>(y: T) => T
Line 7 col 5 IdentifierName "T" = any
Line 7 col 8 IdentifierName "y" = T
Line 7 col 11 IdentifierName "T" = T
Line 7 col 15 IdentifierName "T" = T
Line 9 col 17 IdentifierName "I2" = I2
Line 10 col 0 IdentifierName "x" = (y: any) => any
Line 10 col 5 IdentifierName "y" = any
Line 13 col 4 IdentifierName "i" = I
Line 13 col 7 IdentifierName "I" = I
Line 14 col 4 IdentifierName "i2" = I2
Line 14 col 8 IdentifierName "I2" = I2
Line 15 col 0 AssignmentExpression "// no error since the type parameters come from different declarations, considered assignment compatible 
a = i" = I
Line 15 col 0 IdentifierName "// no error since the type parameters come from different declarations, considered assignment compatible 
a" = { x: <T>(y: T) => T; }
Line 17 col 4 IdentifierName "i" = I
Line 18 col 0 AssignmentExpression "i = a" = { x: <T>(y: T) => T; }
Line 18 col 0 IdentifierName "i" = I
Line 18 col 4 IdentifierName "a" = { x: <T>(y: T) => T; }
Line 19 col 0 AssignmentExpression "a2 = i2" = I2
Line 19 col 0 IdentifierName "a2" = { x: (y: any) => any; }
Line 20 col 5 IdentifierName "i2" = I2
Line 21 col 0 AssignmentExpression "i2 = a2" = { x: (y: any) => any; }
Line 21 col 0 IdentifierName "i2" = I2
Line 21 col 5 IdentifierName "a2" = { x: (y: any) => any; }