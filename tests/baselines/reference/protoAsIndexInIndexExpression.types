=== tests/cases/compiler/protoAsIndexInIndexExpression_1.ts ===
Line 1 col 4 IdentifierName "EntityPrototype" = any
Line 1 col 22 IdentifierName "undefined" = undefined
Line 2 col 4 IdentifierName "WorkspacePrototype" = { serialize: () => any; }
Line 2 col 25 ObjectLiteralExpression "{
    serialize: function (): any {
    }
}" = { serialize: () => any; }
Line 3 col 0 IdentifierName "serialize" = () => any
Line 3 col 15 FunctionExpression "function (): any {
    }" = () => any
Line 6 col 0 AssignmentExpression "WorkspacePrototype['__proto__'] = EntityPrototype" = any
Line 6 col 0 ElementAccessExpression "WorkspacePrototype['__proto__']" = any
Line 6 col 0 IdentifierName "WorkspacePrototype" = { serialize: () => any; }
Line 6 col 34 IdentifierName "EntityPrototype" = any
Line 8 col 4 IdentifierName "o" = { "__proto__": number; }
Line 8 col 8 ObjectLiteralExpression "{
    "__proto__": 0
}" = { "__proto__": number; }
Line 11 col 6 IdentifierName "C" = C
<<<<<<< HEAD
=======
Line 14 col 7 IdentifierName "p" = p
Line 15 col 0 MemberAccessExpression "p.x" = any
Line 15 col 0 IdentifierName "p" = p
Line 15 col 2 IdentifierName "x" = any
>>>>>>> Fix issues that was causing the Type-Writer to emit 'any' for lots of expression *not* of the 'any' type.
=== tests/cases/compiler/protoAsIndexInIndexExpression_0.ts ===
Line 0 col 11 IdentifierName "x" = any
