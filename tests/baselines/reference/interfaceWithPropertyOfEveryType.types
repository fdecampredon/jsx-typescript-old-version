=== tests/cases/compiler/interfaceWithPropertyOfEveryType.ts ===
Line 0 col 6 IdentifierName "C" = C
Line 0 col 10 IdentifierName "foo" = string
Line 1 col 9 IdentifierName "f1" = typeof f1
Line 2 col 7 IdentifierName "M" = M
Line 3 col 15 IdentifierName "y" = number
Line 5 col 5 IdentifierName "E" = E
Line 5 col 9 IdentifierName "A" = E
Line 7 col 10 IdentifierName "Foo" = Foo
Line 8 col 0 IdentifierName "a" = number
Line 9 col 0 IdentifierName "b" = string
Line 10 col 0 IdentifierName "c" = boolean
Line 11 col 0 IdentifierName "d" = any
Line 12 col 0 IdentifierName "e" = void
Line 13 col 0 IdentifierName "f" = number[]
Line 14 col 0 IdentifierName "g" = Object
Line 14 col 7 IdentifierName "Object" = Object
Line 15 col 0 IdentifierName "h" = (x: number) => number
Line 15 col 8 IdentifierName "x" = number
Line 16 col 0 IdentifierName "i" = <T>(x: T) => T
Line 16 col 8 IdentifierName "T" = T
Line 16 col 11 IdentifierName "x" = T
Line 16 col 14 IdentifierName "T" = T
Line 16 col 20 IdentifierName "T" = T
Line 17 col 0 IdentifierName "j" = Foo
Line 17 col 7 IdentifierName "Foo" = Foo
Line 18 col 0 IdentifierName "k" = C
Line 18 col 7 IdentifierName "C" = C
Line 19 col 0 IdentifierName "l" = typeof f1
Line 19 col 14 IdentifierName "f1" = typeof f1
Line 20 col 0 IdentifierName "m" = typeof M
Line 20 col 14 IdentifierName "M" = typeof M
Line 21 col 0 IdentifierName "n" = {}
Line 22 col 0 IdentifierName "o" = E
Line 22 col 7 IdentifierName "E" = E
Line 25 col 4 IdentifierName "a" = Foo
Line 25 col 7 IdentifierName "Foo" = Foo
Line 25 col 13 ObjectLiteralExpression "{
    a: 1,
    b: '',
    c: true,
    d: {},
    e: null ,
    f: [1],
    g: {},
    h: (x: number) => 1,
    i: <T>(x: T) => x,
    j: <Foo>null,
    k: new C(),
    l: f1,
    m: M,
    n: {},
    o: E.A
}" = { a: number; b: string; c: boolean; d: {}; e: any; f: number[]; g: {}; h: (x: number) => number; i: <T>(x: T) => T; j: Foo; k: C; l: typeof f1; m: typeof M; n: {}; o: E; }
Line 26 col 0 IdentifierName "a" = number
Line 27 col 0 IdentifierName "b" = string
Line 28 col 0 IdentifierName "c" = boolean
Line 29 col 0 IdentifierName "d" = {}
Line 29 col 7 ObjectLiteralExpression "{}" = {}
Line 30 col 0 IdentifierName "e" = any
Line 31 col 0 IdentifierName "f" = number[]
Line 31 col 7 ArrayLiteralExpression "[1]" = number[]
Line 32 col 0 IdentifierName "g" = {}
Line 32 col 7 ObjectLiteralExpression "{}" = {}
Line 33 col 0 IdentifierName "h" = (x: number) => number
Line 33 col 7 ParenthesizedArrowFunctionExpression "(x: number) => 1" = (x: number) => number
Line 33 col 8 IdentifierName "x" = number
Line 34 col 0 IdentifierName "i" = <T>(x: T) => T
Line 34 col 7 ParenthesizedArrowFunctionExpression "<T>(x: T) => x" = <T>(x: T) => T
Line 34 col 8 IdentifierName "T" = T
Line 34 col 11 IdentifierName "x" = T
Line 34 col 14 IdentifierName "T" = T
Line 34 col 20 IdentifierName "x" = T
Line 35 col 0 IdentifierName "j" = Foo
Line 35 col 7 CastExpression "<Foo>null" = Foo
Line 35 col 8 IdentifierName "Foo" = Foo
Line 36 col 0 IdentifierName "k" = C
Line 36 col 7 ObjectCreationExpression "new C()" = C
Line 36 col 11 IdentifierName "C" = typeof C
Line 37 col 0 IdentifierName "l" = typeof f1
Line 37 col 7 IdentifierName "f1" = typeof f1
Line 38 col 0 IdentifierName "m" = typeof M
Line 38 col 7 IdentifierName "M" = typeof M
Line 39 col 0 IdentifierName "n" = {}
Line 39 col 7 ObjectLiteralExpression "{}" = {}
Line 40 col 0 IdentifierName "o" = E
Line 40 col 7 MemberAccessExpression "E.A" = E
Line 40 col 7 IdentifierName "E" = typeof E
Line 40 col 9 IdentifierName "A" = E