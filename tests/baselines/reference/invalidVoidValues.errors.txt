==== tests/cases/compiler/invalidVoidValues.ts (11 errors) ====
    var x: void;
    x = 1;
    ~
!!! invalidVoidValues.ts(2,1): error TS2011: Type 'number' is not assignable to type 'void'.
    x = '';
    ~
!!! invalidVoidValues.ts(3,1): error TS2011: Type 'string' is not assignable to type 'void'.
    x = true;
    ~
!!! invalidVoidValues.ts(4,1): error TS2011: Type 'boolean' is not assignable to type 'void'.
    
    enum E { A }
    x = E;
    ~
!!! invalidVoidValues.ts(7,1): error TS2011: Type 'typeof E' is not assignable to type 'void'.
    x = E.A;
    ~
!!! invalidVoidValues.ts(8,1): error TS2011: Type 'E' is not assignable to type 'void'.
    
    class C { foo: string }
    var a: C;
    x = a;
    ~
!!! invalidVoidValues.ts(12,1): error TS2011: Type 'C' is not assignable to type 'void'.
    
    interface I { foo: string }
    var b: I;
    x = b;
    ~
!!! invalidVoidValues.ts(16,1): error TS2011: Type 'I' is not assignable to type 'void'.
    
    x = { f() {} }
    ~
!!! invalidVoidValues.ts(18,1): error TS2011: Type '{ f(): void; }' is not assignable to type 'void'.
    
    module M { export var x = 1; }
    x = M;
    ~
!!! invalidVoidValues.ts(21,1): error TS2011: Type 'typeof M' is not assignable to type 'void'.
    
    function f<T>(a: T) {
        x = a;
        ~
!!! invalidVoidValues.ts(24,5): error TS2011: Type 'T' is not assignable to type 'void'.
    }
    x = f;
    ~
!!! invalidVoidValues.ts(26,1): error TS2011: Type 'typeof f' is not assignable to type 'void'.