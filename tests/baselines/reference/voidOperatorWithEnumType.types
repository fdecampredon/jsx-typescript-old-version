=== tests/cases/compiler/voidOperatorWithEnumType.ts ===
Line 2 col 5 IdentifierName "ENUM" = ENUM
Line 3 col 5 IdentifierName "ENUM1" = ENUM1
Line 6 col 4 IdentifierName "ResultIsAny1" = any
Line 6 col 19 VoidExpression "void ENUM" = any
Line 6 col 24 IdentifierName "ENUM" = typeof ENUM
Line 7 col 4 IdentifierName "ResultIsAny2" = any
Line 7 col 19 VoidExpression "void ENUM1" = any
Line 7 col 24 IdentifierName "ENUM1" = typeof ENUM1
Line 10 col 4 IdentifierName "ResultIsAny3" = any
Line 10 col 19 VoidExpression "void ENUM1[0]" = any
Line 10 col 24 ElementAccessExpression "ENUM1[0]" = string
Line 10 col 24 IdentifierName "ENUM1" = typeof ENUM1
Line 11 col 4 IdentifierName "ResultIsAny4" = any
Line 11 col 19 VoidExpression "void (ENUM[0] + ENUM1[1])" = any
Line 11 col 24 ParenthesizedExpression "(ENUM[0] + ENUM1[1])" = string
Line 11 col 25 AddExpression "ENUM[0] + ENUM1[1]" = string
Line 11 col 25 ElementAccessExpression "ENUM[0]" = string
Line 11 col 25 IdentifierName "ENUM" = typeof ENUM
Line 11 col 35 ElementAccessExpression "ENUM1[1]" = ENUM1
Line 11 col 35 IdentifierName "ENUM1" = typeof ENUM1
Line 14 col 4 IdentifierName "ResultIsAny5" = any
Line 14 col 19 VoidExpression "void void ENUM" = any
Line 14 col 24 VoidExpression "void ENUM" = any
Line 14 col 29 IdentifierName "ENUM" = typeof ENUM
Line 15 col 4 IdentifierName "ResultIsAny6" = any
Line 15 col 19 VoidExpression "void void void (ENUM[0] + ENUM1[1])" = any
Line 15 col 24 VoidExpression "void void (ENUM[0] + ENUM1[1])" = any
Line 15 col 29 VoidExpression "void (ENUM[0] + ENUM1[1])" = any
Line 15 col 34 ParenthesizedExpression "(ENUM[0] + ENUM1[1])" = string
Line 15 col 35 AddExpression "ENUM[0] + ENUM1[1]" = string
Line 15 col 35 ElementAccessExpression "ENUM[0]" = string
Line 15 col 35 IdentifierName "ENUM" = typeof ENUM
Line 15 col 45 ElementAccessExpression "ENUM1[1]" = ENUM1
Line 15 col 45 IdentifierName "ENUM1" = typeof ENUM1
Line 16 col 0 VoidExpression "// miss assignment operators
void ENUM" = any
Line 18 col 5 IdentifierName "ENUM" = typeof ENUM
Line 19 col 0 VoidExpression "void ENUM1" = any
Line 19 col 5 IdentifierName "ENUM1" = typeof ENUM1
Line 20 col 0 VoidExpression "void ENUM1[1]" = any
Line 20 col 5 ElementAccessExpression "ENUM1[1]" = ENUM1
Line 20 col 5 IdentifierName "ENUM1" = typeof ENUM1
Line 21 col 0 CommaExpression "void ENUM, ENUM1" = typeof ENUM1
Line 21 col 0 VoidExpression "void ENUM" = any
Line 21 col 5 IdentifierName "ENUM" = typeof ENUM
Line 21 col 11 IdentifierName "ENUM1" = typeof ENUM1