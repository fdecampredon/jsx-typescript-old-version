=== tests/cases/compiler/getAccessorWithImpliedReturnTypeAndFunctionClassMerge.ts ===
Line 0 col 17 IdentifierName "_" = { prototype: _<any>; each<T>(context?: any): void; <T>(value: T[]): _<T>; <T>(value: T): _<T>; new<T>(): _<T>; }
Line 0 col 19 IdentifierName "T" = T
Line 0 col 22 IdentifierName "value" = T[]
Line 0 col 29 IdentifierName "Array" = Array<T>
Line 0 col 35 IdentifierName "T" = T
Line 0 col 40 IdentifierName "_" = _<T>
Line 0 col 42 IdentifierName "T" = T
Line 1 col 17 IdentifierName "_" = { prototype: _<any>; each<T>(context?: any): void; <T>(value: T[]): _<T>; <T>(value: T): _<T>; new<T>(): _<T>; }
Line 1 col 19 IdentifierName "T" = T
Line 1 col 22 IdentifierName "value" = T
Line 1 col 29 IdentifierName "T" = T
Line 1 col 33 IdentifierName "_" = _<T>
Line 1 col 35 IdentifierName "T" = T
Line 3 col 15 IdentifierName "_" = _
Line 4 col 20 IdentifierName "each" = <T>(context?: any) => void
Line 4 col 25 IdentifierName "T" = T
Line 5 col 0 IdentifierName "//list: List<T>,
        //iterator: ListIterator<T, void>,
        context" = any
Line 9 col 14 IdentifierName "ListIterator" = _.ListIterator<T, TResult>
Line 9 col 27 IdentifierName "T" = T
Line 9 col 30 IdentifierName "TResult" = TResult
Line 10 col 9 IdentifierName "value" = T
Line 10 col 16 IdentifierName "T" = T
Line 10 col 19 IdentifierName "index" = number
Line 10 col 34 IdentifierName "list" = T[]
Line 10 col 40 IdentifierName "T" = T
Line 10 col 46 IdentifierName "TResult" = TResult
Line 14 col 14 IdentifierName "_" = _<T>
Line 14 col 16 IdentifierName "T" = T
Line 15 col 0 IdentifierName "each" = (iterator: _.ListIterator<T, void>, context?: any) => void
Line 15 col 9 IdentifierName "iterator" = _.ListIterator<T, void>
Line 15 col 19 IdentifierName "_" = _
Line 15 col 21 IdentifierName "ListIterator" = _.ListIterator<T, TResult>
Line 15 col 34 IdentifierName "T" = T
Line 15 col 44 IdentifierName "context" = any
Line 18 col 7 IdentifierName "MyModule" = MyModule
Line 19 col 17 IdentifierName "MyClass" = MyModule.MyClass
Line 20 col 19 IdentifierName "myGetter" = any
Line 21 col 16 IdentifierName "obj" = any
Line 21 col 26 ObjectLiteralExpression "{}" = {}
Line 23 col 19 IdentifierName "obj" = any