=== tests/cases/compiler/library_ObjectPrototypeProperties.ts ===
Line 0 col 0 MemberAccessExpression "// Properties of the Object Prototype Object as per ES5 spec
// http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4
Object.prototype.constructor" = Function
Line 0 col 0 MemberAccessExpression "// Properties of the Object Prototype Object as per ES5 spec
// http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4
Object.prototype" = Object
Line 0 col 0 IdentifierName "// Properties of the Object Prototype Object as per ES5 spec
// http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4
Object" = { prototype: Object; getPrototypeOf(o: any): any; getOwnPropertyDescriptor(o: any, p: string): PropertyDescriptor; getOwnPropertyNames(o: any): string[]; create(o: any, properties?: PropertyDescriptorMap): any; defineProperty(o: any, p: string, attributes: PropertyDescriptor): any; defineProperties(o: any, properties: PropertyDescriptorMap): any; seal(o: any): any; freeze(o: any): any; preventExtensions(o: any): any; isSealed(o: any): boolean; isFrozen(o: any): boolean; isExtensible(o: any): boolean; keys(o: any): string[]; (): any; (value: any): any; new(value?: any): Object; }
Line 2 col 7 IdentifierName "prototype" = Object
Line 2 col 17 IdentifierName "constructor" = Function
Line 3 col 0 InvocationExpression "Object.prototype.toString()" = string
Line 3 col 0 MemberAccessExpression "Object.prototype.toString" = () => string
Line 3 col 0 MemberAccessExpression "Object.prototype" = Object
Line 3 col 0 IdentifierName "Object" = { prototype: Object; getPrototypeOf(o: any): any; getOwnPropertyDescriptor(o: any, p: string): PropertyDescriptor; getOwnPropertyNames(o: any): string[]; create(o: any, properties?: PropertyDescriptorMap): any; defineProperty(o: any, p: string, attributes: PropertyDescriptor): any; defineProperties(o: any, properties: PropertyDescriptorMap): any; seal(o: any): any; freeze(o: any): any; preventExtensions(o: any): any; isSealed(o: any): boolean; isFrozen(o: any): boolean; isExtensible(o: any): boolean; keys(o: any): string[]; (): any; (value: any): any; new(value?: any): Object; }
Line 3 col 7 IdentifierName "prototype" = Object
Line 3 col 17 IdentifierName "toString" = () => string
Line 4 col 0 InvocationExpression "Object.prototype.toLocaleString()" = string
Line 4 col 0 MemberAccessExpression "Object.prototype.toLocaleString" = () => string
Line 4 col 0 MemberAccessExpression "Object.prototype" = Object
Line 4 col 0 IdentifierName "Object" = { prototype: Object; getPrototypeOf(o: any): any; getOwnPropertyDescriptor(o: any, p: string): PropertyDescriptor; getOwnPropertyNames(o: any): string[]; create(o: any, properties?: PropertyDescriptorMap): any; defineProperty(o: any, p: string, attributes: PropertyDescriptor): any; defineProperties(o: any, properties: PropertyDescriptorMap): any; seal(o: any): any; freeze(o: any): any; preventExtensions(o: any): any; isSealed(o: any): boolean; isFrozen(o: any): boolean; isExtensible(o: any): boolean; keys(o: any): string[]; (): any; (value: any): any; new(value?: any): Object; }
Line 4 col 7 IdentifierName "prototype" = Object
Line 4 col 17 IdentifierName "toLocaleString" = () => string
Line 5 col 0 InvocationExpression "Object.prototype.valueOf()" = Object
Line 5 col 0 MemberAccessExpression "Object.prototype.valueOf" = () => Object
Line 5 col 0 MemberAccessExpression "Object.prototype" = Object
Line 5 col 0 IdentifierName "Object" = { prototype: Object; getPrototypeOf(o: any): any; getOwnPropertyDescriptor(o: any, p: string): PropertyDescriptor; getOwnPropertyNames(o: any): string[]; create(o: any, properties?: PropertyDescriptorMap): any; defineProperty(o: any, p: string, attributes: PropertyDescriptor): any; defineProperties(o: any, properties: PropertyDescriptorMap): any; seal(o: any): any; freeze(o: any): any; preventExtensions(o: any): any; isSealed(o: any): boolean; isFrozen(o: any): boolean; isExtensible(o: any): boolean; keys(o: any): string[]; (): any; (value: any): any; new(value?: any): Object; }
Line 5 col 7 IdentifierName "prototype" = Object
Line 5 col 17 IdentifierName "valueOf" = () => Object
Line 6 col 0 InvocationExpression "Object.prototype.hasOwnProperty("string")" = boolean
Line 6 col 0 MemberAccessExpression "Object.prototype.hasOwnProperty" = (v: string) => boolean
Line 6 col 0 MemberAccessExpression "Object.prototype" = Object
Line 6 col 0 IdentifierName "Object" = { prototype: Object; getPrototypeOf(o: any): any; getOwnPropertyDescriptor(o: any, p: string): PropertyDescriptor; getOwnPropertyNames(o: any): string[]; create(o: any, properties?: PropertyDescriptorMap): any; defineProperty(o: any, p: string, attributes: PropertyDescriptor): any; defineProperties(o: any, properties: PropertyDescriptorMap): any; seal(o: any): any; freeze(o: any): any; preventExtensions(o: any): any; isSealed(o: any): boolean; isFrozen(o: any): boolean; isExtensible(o: any): boolean; keys(o: any): string[]; (): any; (value: any): any; new(value?: any): Object; }
Line 6 col 7 IdentifierName "prototype" = Object
Line 6 col 17 IdentifierName "hasOwnProperty" = (v: string) => boolean
Line 7 col 0 InvocationExpression "Object.prototype.isPrototypeOf(Object)" = boolean
Line 7 col 0 MemberAccessExpression "Object.prototype.isPrototypeOf" = (v: Object) => boolean
Line 7 col 0 MemberAccessExpression "Object.prototype" = Object
Line 7 col 0 IdentifierName "Object" = { prototype: Object; getPrototypeOf(o: any): any; getOwnPropertyDescriptor(o: any, p: string): PropertyDescriptor; getOwnPropertyNames(o: any): string[]; create(o: any, properties?: PropertyDescriptorMap): any; defineProperty(o: any, p: string, attributes: PropertyDescriptor): any; defineProperties(o: any, properties: PropertyDescriptorMap): any; seal(o: any): any; freeze(o: any): any; preventExtensions(o: any): any; isSealed(o: any): boolean; isFrozen(o: any): boolean; isExtensible(o: any): boolean; keys(o: any): string[]; (): any; (value: any): any; new(value?: any): Object; }
Line 7 col 7 IdentifierName "prototype" = Object
Line 7 col 17 IdentifierName "isPrototypeOf" = (v: Object) => boolean
Line 7 col 31 IdentifierName "Object" = { prototype: Object; getPrototypeOf(o: any): any; getOwnPropertyDescriptor(o: any, p: string): PropertyDescriptor; getOwnPropertyNames(o: any): string[]; create(o: any, properties?: PropertyDescriptorMap): any; defineProperty(o: any, p: string, attributes: PropertyDescriptor): any; defineProperties(o: any, properties: PropertyDescriptorMap): any; seal(o: any): any; freeze(o: any): any; preventExtensions(o: any): any; isSealed(o: any): boolean; isFrozen(o: any): boolean; isExtensible(o: any): boolean; keys(o: any): string[]; (): any; (value: any): any; new(value?: any): Object; }
Line 8 col 0 InvocationExpression "Object.prototype.propertyIsEnumerable("string")" = boolean
Line 8 col 0 MemberAccessExpression "Object.prototype.propertyIsEnumerable" = (v: string) => boolean
Line 8 col 0 MemberAccessExpression "Object.prototype" = Object
Line 8 col 0 IdentifierName "Object" = { prototype: Object; getPrototypeOf(o: any): any; getOwnPropertyDescriptor(o: any, p: string): PropertyDescriptor; getOwnPropertyNames(o: any): string[]; create(o: any, properties?: PropertyDescriptorMap): any; defineProperty(o: any, p: string, attributes: PropertyDescriptor): any; defineProperties(o: any, properties: PropertyDescriptorMap): any; seal(o: any): any; freeze(o: any): any; preventExtensions(o: any): any; isSealed(o: any): boolean; isFrozen(o: any): boolean; isExtensible(o: any): boolean; keys(o: any): string[]; (): any; (value: any): any; new(value?: any): Object; }
Line 8 col 7 IdentifierName "prototype" = Object
Line 8 col 17 IdentifierName "propertyIsEnumerable" = (v: string) => boolean