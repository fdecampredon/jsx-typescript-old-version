==== tests/cases/compiler/enumAssignmentCompat.ts (5 errors) ====
    module W {
        export class D { }
    }
    
    enum W {
    
        a, b, c,
    
    }
    
    
    interface WStatic {
    
        a: W;
    
        b: W;
    
        c: W;
    
    }
    
    
    
    var x: WStatic = W;
    var y: typeof W = W;
    var z: number = W; // error
        ~~~~~~~~~~~~~
!!! enumAssignmentCompat.ts(26,5): error TS2011: Type 'typeof W' is not assignable to type 'number'.
    var a: number = W.a;
    var b: typeof W = W.a; // error
        ~~~~~~~~~~~~~~~~~
!!! enumAssignmentCompat.ts(28,5): error TS2011: Type 'W' is not assignable to type 'typeof W'.
    var c: typeof W.a = W.a;
    var d: typeof W = 3; // error
        ~~~~~~~~~~~~~~~
!!! enumAssignmentCompat.ts(30,5): error TS2012: Type 'number' is not assignable to type 'typeof W':
!!! 	Type 'Number' is missing property 'W.D' from type 'typeof W'.
    var e: typeof W.a = 4;
    var f: WStatic = W.a; // error
        ~~~~~~~~~~~~~~~~
!!! enumAssignmentCompat.ts(32,5): error TS2011: Type 'W' is not assignable to type 'WStatic'.
    var g: WStatic = 5; // error
        ~~~~~~~~~~~~~~
!!! enumAssignmentCompat.ts(33,5): error TS2012: Type 'number' is not assignable to type 'WStatic':
!!! 	Type 'Number' is missing property 'a' from type 'WStatic'.
    var h: W = 3;
    var i: W = W.a;
    i = W.a;
    W.D;
    var p: W.D;