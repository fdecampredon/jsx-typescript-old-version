==== tests/cases/compiler/propertyAccessOnTypeParameterWithConstraints4.ts (4 errors) ====
    class C<T extends Date> {
        f() {
            var x: T;
            var a = x['notHere'](); // should be string
            return a + x.notHere();
                         ~~~~~~~
!!! error TS2094: The property 'notHere' does not exist on value of type 'T'.
        }
    }
    
    var r = (new C<Date>()).f();
    
    interface I<T extends Date> {
        foo: T;
    }
    var i: I<Date>;
    var r2 = i.foo.notHere();
                   ~~~~~~~
!!! error TS2094: The property 'notHere' does not exist on value of type 'Date'.
    var r2b = i.foo['notHere']();
    
    var a: {
        <T extends Date>(): T;
    }
    var r3: string = a().notHere();
                         ~~~~~~~
!!! error TS2094: The property 'notHere' does not exist on value of type 'Date'.
    var r3b: string = a()['notHere']();
    
    var b = {
        foo: <T extends Date>(x: T): T => {
            var a = x['notHere'](); // should be string
            return a + x.notHere();
                         ~~~~~~~
!!! error TS2094: The property 'notHere' does not exist on value of type 'T'.
        },
        bar: b.foo().notHere()
    }
    
    var r4 = b.foo(new Date());