=== tests/cases/compiler/assignmentCompatWithConstructSignatures6.ts ===
Line 2 col 6 IdentifierName "Base" = Base
Line 2 col 13 IdentifierName "foo" = string
Line 3 col 6 IdentifierName "Derived" = Derived
Line 3 col 22 IdentifierName "Base" = Base
Line 3 col 29 IdentifierName "bar" = string
Line 4 col 6 IdentifierName "Derived2" = Derived2
Line 4 col 23 IdentifierName "Derived" = Derived
Line 4 col 33 IdentifierName "baz" = string
Line 5 col 6 IdentifierName "OtherDerived" = OtherDerived
Line 5 col 27 IdentifierName "Base" = Base
Line 5 col 34 IdentifierName "bing" = string
Line 7 col 10 IdentifierName "A" = A
Line 8 col 0 IdentifierName "a" = new<T>(x: T) => T[]
Line 8 col 12 IdentifierName "T" = T
Line 8 col 15 IdentifierName "x" = T
Line 8 col 18 IdentifierName "T" = T
Line 8 col 24 IdentifierName "T" = T
Line 9 col 0 IdentifierName "a2" = new<T>(x: T) => string[]
Line 9 col 13 IdentifierName "T" = T
Line 9 col 16 IdentifierName "x" = T
Line 9 col 19 IdentifierName "T" = T
Line 10 col 0 IdentifierName "a3" = new<T>(x: T) => void
Line 10 col 13 IdentifierName "T" = T
Line 10 col 16 IdentifierName "x" = T
Line 10 col 19 IdentifierName "T" = T
Line 11 col 0 IdentifierName "a4" = new<T, U>(x: T, y: U) => string
Line 11 col 13 IdentifierName "T" = T
Line 11 col 16 IdentifierName "U" = U
Line 11 col 19 IdentifierName "x" = T
Line 11 col 22 IdentifierName "T" = T
Line 11 col 25 IdentifierName "y" = U
Line 11 col 28 IdentifierName "U" = U
Line 12 col 0 IdentifierName "a5" = new<T, U>(x: (arg: T) => U) => T
Line 12 col 13 IdentifierName "T" = T
Line 12 col 16 IdentifierName "U" = U
Line 12 col 19 IdentifierName "x" = (arg: T) => U
Line 12 col 23 IdentifierName "arg" = T
Line 12 col 28 IdentifierName "T" = T
Line 12 col 34 IdentifierName "U" = U
Line 12 col 40 IdentifierName "T" = T
Line 13 col 0 IdentifierName "a6" = new<T extends Base>(x: (arg: T) => Derived) => T
Line 13 col 13 IdentifierName "T" = T
Line 13 col 23 IdentifierName "Base" = Base
Line 13 col 29 IdentifierName "x" = (arg: T) => Derived
Line 13 col 33 IdentifierName "arg" = T
Line 13 col 38 IdentifierName "T" = T
Line 13 col 44 IdentifierName "Derived" = Derived
Line 13 col 56 IdentifierName "T" = T
Line 14 col 0 IdentifierName "a11" = new<T>(x: { foo: T; }, y: { foo: T; bar: T; }) => Base
Line 14 col 14 IdentifierName "T" = T
Line 14 col 17 IdentifierName "x" = { foo: T; }
Line 14 col 22 IdentifierName "foo" = T
Line 14 col 27 IdentifierName "T" = T
Line 14 col 32 IdentifierName "y" = { foo: T; bar: T; }
Line 14 col 37 IdentifierName "foo" = T
Line 14 col 42 IdentifierName "T" = T
Line 14 col 45 IdentifierName "bar" = T
Line 14 col 50 IdentifierName "T" = T
Line 14 col 58 IdentifierName "Base" = Base
Line 15 col 0 IdentifierName "a15" = new<T>(x: { a: T; b: T; }) => T[]
Line 15 col 14 IdentifierName "T" = T
Line 15 col 17 IdentifierName "x" = { a: T; b: T; }
Line 15 col 22 IdentifierName "a" = T
Line 15 col 25 IdentifierName "T" = T
Line 15 col 28 IdentifierName "b" = T
Line 15 col 31 IdentifierName "T" = T
Line 15 col 39 IdentifierName "T" = T
Line 16 col 0 IdentifierName "a16" = new<T extends Base>(x: { a: T; b: T; }) => T[]
Line 16 col 14 IdentifierName "T" = T
Line 16 col 24 IdentifierName "Base" = Base
Line 16 col 30 IdentifierName "x" = { a: T; b: T; }
Line 16 col 35 IdentifierName "a" = T
Line 16 col 38 IdentifierName "T" = T
Line 16 col 41 IdentifierName "b" = T
Line 16 col 44 IdentifierName "T" = T
Line 16 col 52 IdentifierName "T" = T
Line 19 col 4 IdentifierName "x" = A
Line 19 col 7 IdentifierName "A" = A
Line 21 col 4 IdentifierName "b" = new<T>(x: T) => T[]
Line 21 col 12 IdentifierName "T" = T
Line 21 col 15 IdentifierName "x" = T
Line 21 col 18 IdentifierName "T" = T
Line 21 col 24 IdentifierName "T" = T
Line 22 col 0 AssignmentExpression "x.a = b" = new<T>(x: T) => T[]
Line 22 col 0 MemberAccessExpression "x.a" = new<T>(x: T) => T[]
Line 22 col 0 IdentifierName "x" = A
Line 22 col 2 IdentifierName "a" = new<T>(x: T) => T[]
Line 22 col 6 IdentifierName "b" = new<T>(x: T) => T[]
Line 23 col 0 AssignmentExpression "b = x.a" = new<T>(x: T) => T[]
Line 23 col 0 IdentifierName "b" = new<T>(x: T) => T[]
Line 23 col 4 MemberAccessExpression "x.a" = new<T>(x: T) => T[]
Line 23 col 4 IdentifierName "x" = A
Line 23 col 6 IdentifierName "a" = new<T>(x: T) => T[]
Line 24 col 4 IdentifierName "b2" = new<T>(x: T) => string[]
Line 24 col 13 IdentifierName "T" = T
Line 24 col 16 IdentifierName "x" = T
Line 24 col 19 IdentifierName "T" = T
Line 25 col 0 AssignmentExpression "x.a2 = b2" = new<T>(x: T) => string[]
Line 25 col 0 MemberAccessExpression "x.a2" = new<T>(x: T) => string[]
Line 25 col 0 IdentifierName "x" = A
Line 25 col 2 IdentifierName "a2" = new<T>(x: T) => string[]
Line 25 col 7 IdentifierName "b2" = new<T>(x: T) => string[]
Line 26 col 0 AssignmentExpression "b2 = x.a2" = new<T>(x: T) => string[]
Line 26 col 0 IdentifierName "b2" = new<T>(x: T) => string[]
Line 26 col 5 MemberAccessExpression "x.a2" = new<T>(x: T) => string[]
Line 26 col 5 IdentifierName "x" = A
Line 26 col 7 IdentifierName "a2" = new<T>(x: T) => string[]
Line 27 col 4 IdentifierName "b3" = new<T>(x: T) => T
Line 27 col 13 IdentifierName "T" = T
Line 27 col 16 IdentifierName "x" = T
Line 27 col 19 IdentifierName "T" = T
Line 27 col 25 IdentifierName "T" = T
Line 28 col 0 AssignmentExpression "x.a3 = b3" = new<T>(x: T) => T
Line 28 col 0 MemberAccessExpression "x.a3" = new<T>(x: T) => void
Line 28 col 0 IdentifierName "x" = A
Line 28 col 2 IdentifierName "a3" = new<T>(x: T) => void
Line 28 col 7 IdentifierName "b3" = new<T>(x: T) => T
Line 29 col 0 AssignmentExpression "b3 = x.a3" = new<T>(x: T) => void
Line 29 col 0 IdentifierName "b3" = new<T>(x: T) => T
Line 29 col 5 MemberAccessExpression "x.a3" = new<T>(x: T) => void
Line 29 col 5 IdentifierName "x" = A
Line 29 col 7 IdentifierName "a3" = new<T>(x: T) => void
Line 30 col 4 IdentifierName "b4" = new<T, U>(x: T, y: U) => string
Line 30 col 13 IdentifierName "T" = T
Line 30 col 16 IdentifierName "U" = U
Line 30 col 19 IdentifierName "x" = T
Line 30 col 22 IdentifierName "T" = T
Line 30 col 25 IdentifierName "y" = U
Line 30 col 28 IdentifierName "U" = U
Line 31 col 0 AssignmentExpression "x.a4 = b4" = new<T, U>(x: T, y: U) => string
Line 31 col 0 MemberAccessExpression "x.a4" = new<T, U>(x: T, y: U) => string
Line 31 col 0 IdentifierName "x" = A
Line 31 col 2 IdentifierName "a4" = new<T, U>(x: T, y: U) => string
Line 31 col 7 IdentifierName "b4" = new<T, U>(x: T, y: U) => string
Line 32 col 0 AssignmentExpression "b4 = x.a4" = new<T, U>(x: T, y: U) => string
Line 32 col 0 IdentifierName "b4" = new<T, U>(x: T, y: U) => string
Line 32 col 5 MemberAccessExpression "x.a4" = new<T, U>(x: T, y: U) => string
Line 32 col 5 IdentifierName "x" = A
Line 32 col 7 IdentifierName "a4" = new<T, U>(x: T, y: U) => string
Line 33 col 4 IdentifierName "b5" = new<T, U>(x: (arg: T) => U) => T
Line 33 col 13 IdentifierName "T" = T
Line 33 col 16 IdentifierName "U" = U
Line 33 col 19 IdentifierName "x" = (arg: T) => U
Line 33 col 23 IdentifierName "arg" = T
Line 33 col 28 IdentifierName "T" = T
Line 33 col 34 IdentifierName "U" = U
Line 33 col 40 IdentifierName "T" = T
Line 34 col 0 AssignmentExpression "x.a5 = b5" = new<T, U>(x: (arg: T) => U) => T
Line 34 col 0 MemberAccessExpression "x.a5" = new<T, U>(x: (arg: T) => U) => T
Line 34 col 0 IdentifierName "x" = A
Line 34 col 2 IdentifierName "a5" = new<T, U>(x: (arg: T) => U) => T
Line 34 col 7 IdentifierName "b5" = new<T, U>(x: (arg: T) => U) => T
Line 35 col 0 AssignmentExpression "b5 = x.a5" = new<T, U>(x: (arg: T) => U) => T
Line 35 col 0 IdentifierName "b5" = new<T, U>(x: (arg: T) => U) => T
Line 35 col 5 MemberAccessExpression "x.a5" = new<T, U>(x: (arg: T) => U) => T
Line 35 col 5 IdentifierName "x" = A
Line 35 col 7 IdentifierName "a5" = new<T, U>(x: (arg: T) => U) => T
Line 36 col 4 IdentifierName "b11" = new<T, U>(x: { foo: T; }, y: { foo: U; bar: U; }) => Base
Line 36 col 14 IdentifierName "T" = T
Line 36 col 17 IdentifierName "U" = U
Line 36 col 20 IdentifierName "x" = { foo: T; }
Line 36 col 25 IdentifierName "foo" = T
Line 36 col 30 IdentifierName "T" = T
Line 36 col 35 IdentifierName "y" = { foo: U; bar: U; }
Line 36 col 40 IdentifierName "foo" = U
Line 36 col 45 IdentifierName "U" = U
Line 36 col 48 IdentifierName "bar" = U
Line 36 col 53 IdentifierName "U" = U
Line 36 col 61 IdentifierName "Base" = Base
Line 37 col 0 AssignmentExpression "x.a11 = b11" = new<T, U>(x: { foo: T; }, y: { foo: U; bar: U; }) => Base
Line 37 col 0 MemberAccessExpression "x.a11" = new<T>(x: { foo: T; }, y: { foo: T; bar: T; }) => Base
Line 37 col 0 IdentifierName "x" = A
Line 37 col 2 IdentifierName "a11" = new<T>(x: { foo: T; }, y: { foo: T; bar: T; }) => Base
Line 37 col 8 IdentifierName "b11" = new<T, U>(x: { foo: T; }, y: { foo: U; bar: U; }) => Base
Line 38 col 0 AssignmentExpression "b11 = x.a11" = new<T>(x: { foo: T; }, y: { foo: T; bar: T; }) => Base
Line 38 col 0 IdentifierName "b11" = new<T, U>(x: { foo: T; }, y: { foo: U; bar: U; }) => Base
Line 38 col 6 MemberAccessExpression "x.a11" = new<T>(x: { foo: T; }, y: { foo: T; bar: T; }) => Base
Line 38 col 6 IdentifierName "x" = A
Line 38 col 8 IdentifierName "a11" = new<T>(x: { foo: T; }, y: { foo: T; bar: T; }) => Base
Line 39 col 4 IdentifierName "b16" = new<T>(x: { a: T; b: T; }) => T[]
Line 39 col 14 IdentifierName "T" = T
Line 39 col 17 IdentifierName "x" = { a: T; b: T; }
Line 39 col 22 IdentifierName "a" = T
Line 39 col 25 IdentifierName "T" = T
Line 39 col 28 IdentifierName "b" = T
Line 39 col 31 IdentifierName "T" = T
Line 39 col 39 IdentifierName "T" = T
Line 40 col 0 AssignmentExpression "x.a16 = b16" = new<T>(x: { a: T; b: T; }) => T[]
Line 40 col 0 MemberAccessExpression "x.a16" = new<T extends Base>(x: { a: T; b: T; }) => T[]
Line 40 col 0 IdentifierName "x" = A
Line 40 col 2 IdentifierName "a16" = new<T extends Base>(x: { a: T; b: T; }) => T[]
Line 40 col 8 IdentifierName "b16" = new<T>(x: { a: T; b: T; }) => T[]
Line 41 col 0 AssignmentExpression "b16 = x.a16" = new<T extends Base>(x: { a: T; b: T; }) => T[]
Line 41 col 0 IdentifierName "b16" = new<T>(x: { a: T; b: T; }) => T[]
Line 41 col 6 MemberAccessExpression "x.a16" = new<T extends Base>(x: { a: T; b: T; }) => T[]
Line 41 col 6 IdentifierName "x" = A
Line 41 col 8 IdentifierName "a16" = new<T extends Base>(x: { a: T; b: T; }) => T[]