==== tests/cases/compiler/derivedClassConstructorWithoutSuperCall.ts (5 errors) ====
    // derived class constructors must contain a super call
    
    class Base {
        x: string;
    }
    
    class Derived extends Base {
        constructor() { // error
        ~~~~~~~~~~~
!!! derivedClassConstructorWithoutSuperCall.ts(8,5): error TS2105: Constructors for derived classes must contain a 'super' call.
        }
    }
    
    class Base2<T> {
        x: T;
    }
    
    class Derived2<T> extends Base2<T> {
        constructor() { // error for no super call (nested scopes don't count)
        ~~~~~~~~~~~
!!! derivedClassConstructorWithoutSuperCall.ts(17,5): error TS2105: Constructors for derived classes must contain a 'super' call.
            var r2 = () => super(); // error for misplaced super call (nested function)
                           ~~~~~
!!! derivedClassConstructorWithoutSuperCall.ts(18,24): error TS2106: Super calls are not permitted outside constructors or in nested functions inside constructors.
        }
    }
    
    class Derived3<T> extends Base2<T> {
        constructor() { // error
        ~~~~~~~~~~~
!!! derivedClassConstructorWithoutSuperCall.ts(23,5): error TS2105: Constructors for derived classes must contain a 'super' call.
            var r = function () { super() } // error
                                  ~~~~~
!!! derivedClassConstructorWithoutSuperCall.ts(24,31): error TS2106: Super calls are not permitted outside constructors or in nested functions inside constructors.
        }
    }
    
    class Derived4<T> extends Base2<T> {
        constructor() {
            var r = super(); // ok
        }
    }