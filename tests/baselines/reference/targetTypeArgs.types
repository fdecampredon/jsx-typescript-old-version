=== tests/cases/compiler/targetTypeArgs.ts ===
Line 0 col 9 IdentifierName "foo" = typeof foo
Line 0 col 13 IdentifierName "callback" = (x: string) => void
Line 0 col 24 IdentifierName "x" = string
Line 1 col 0 InvocationExpression "callback("hello")" = void
Line 1 col 0 IdentifierName "callback" = (x: string) => void
Line 3 col 0 InvocationExpression "foo(function(x) { x })" = void
Line 3 col 0 IdentifierName "foo" = typeof foo
Line 4 col 4 FunctionExpression "function(x) { x }" = (x: string) => void
Line 4 col 13 IdentifierName "x" = string
Line 4 col 18 IdentifierName "x" = string
Line 5 col 0 InvocationExpression "[1].forEach(function(v,i,a) { v })" = void
Line 5 col 0 MemberAccessExpression "[1].forEach" = (callbackfn: (value: number, index: number, array: number[]) => void, thisArg?: any) => void
Line 5 col 0 ArrayLiteralExpression "[1]" = number[]
Line 6 col 4 IdentifierName "forEach" = (callbackfn: (value: number, index: number, array: number[]) => void, thisArg?: any) => void
Line 6 col 12 FunctionExpression "function(v,i,a) { v }" = (v: number, i: number, a: number[]) => void
Line 6 col 21 IdentifierName "v" = number
Line 6 col 23 IdentifierName "i" = number
Line 6 col 25 IdentifierName "a" = number[]
Line 6 col 30 IdentifierName "v" = number
Line 7 col 0 InvocationExpression "["hello"].every(function(v,i,a) {return true;})" = boolean
Line 7 col 0 MemberAccessExpression "["hello"].every" = (callbackfn: (value: string, index: number, array: string[]) => boolean, thisArg?: any) => boolean
Line 7 col 0 ArrayLiteralExpression "["hello"]" = string[]
Line 7 col 10 IdentifierName "every" = (callbackfn: (value: string, index: number, array: string[]) => boolean, thisArg?: any) => boolean
Line 7 col 16 FunctionExpression "function(v,i,a) {return true;}" = (v: string, i: number, a: string[]) => boolean
Line 7 col 25 IdentifierName "v" = string
Line 7 col 27 IdentifierName "i" = number
Line 7 col 29 IdentifierName "a" = string[]
Line 8 col 0 InvocationExpression "[1].every(function(v,i,a) {return true;})" = boolean
Line 8 col 0 MemberAccessExpression "[1].every" = (callbackfn: (value: number, index: number, array: number[]) => boolean, thisArg?: any) => boolean
Line 8 col 0 ArrayLiteralExpression "[1]" = number[]
Line 8 col 4 IdentifierName "every" = (callbackfn: (value: number, index: number, array: number[]) => boolean, thisArg?: any) => boolean
Line 8 col 10 FunctionExpression "function(v,i,a) {return true;}" = (v: number, i: number, a: number[]) => boolean
Line 8 col 19 IdentifierName "v" = number
Line 8 col 21 IdentifierName "i" = number
Line 8 col 23 IdentifierName "a" = number[]
Line 9 col 0 InvocationExpression "[1].every(function(v,i,a) {return true;})" = boolean
Line 9 col 0 MemberAccessExpression "[1].every" = (callbackfn: (value: number, index: number, array: number[]) => boolean, thisArg?: any) => boolean
Line 9 col 0 ArrayLiteralExpression "[1]" = number[]
Line 9 col 4 IdentifierName "every" = (callbackfn: (value: number, index: number, array: number[]) => boolean, thisArg?: any) => boolean
Line 9 col 10 FunctionExpression "function(v,i,a) {return true;}" = (v: number, i: number, a: number[]) => boolean
Line 9 col 19 IdentifierName "v" = number
Line 9 col 21 IdentifierName "i" = number
Line 9 col 23 IdentifierName "a" = number[]
Line 10 col 0 InvocationExpression "["s"].every(function(v,i,a) {return true;})" = boolean
Line 10 col 0 MemberAccessExpression "["s"].every" = (callbackfn: (value: string, index: number, array: string[]) => boolean, thisArg?: any) => boolean
Line 10 col 0 ArrayLiteralExpression "["s"]" = string[]
Line 10 col 6 IdentifierName "every" = (callbackfn: (value: string, index: number, array: string[]) => boolean, thisArg?: any) => boolean
Line 10 col 12 FunctionExpression "function(v,i,a) {return true;}" = (v: string, i: number, a: string[]) => boolean
Line 10 col 21 IdentifierName "v" = string
Line 10 col 23 IdentifierName "i" = number
Line 10 col 25 IdentifierName "a" = string[]
Line 11 col 0 InvocationExpression "["s"].forEach(function(v,i,a) { v })" = void
Line 11 col 0 MemberAccessExpression "["s"].forEach" = (callbackfn: (value: string, index: number, array: string[]) => void, thisArg?: any) => void
Line 11 col 0 ArrayLiteralExpression "["s"]" = string[]
Line 11 col 6 IdentifierName "forEach" = (callbackfn: (value: string, index: number, array: string[]) => void, thisArg?: any) => void
Line 11 col 14 FunctionExpression "function(v,i,a) { v }" = (v: string, i: number, a: string[]) => void
Line 11 col 23 IdentifierName "v" = string
Line 11 col 25 IdentifierName "i" = number
Line 11 col 27 IdentifierName "a" = string[]
Line 11 col 32 IdentifierName "v" = string