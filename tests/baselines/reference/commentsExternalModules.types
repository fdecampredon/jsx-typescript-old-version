=== tests/cases/compiler/commentsExternalModules_1.ts ===
Line 1 col 7 IdentifierName "extMod" = extMod
Line 2 col 0 InvocationExpression "extMod.m1.fooExport()" = number
Line 2 col 0 MemberAccessExpression "extMod.m1.fooExport" = () => number
Line 2 col 0 MemberAccessExpression "extMod.m1" = { b: number; m2: { c: { prototype: m1.m2.c; new(): m1.m2.c; }; i: m1.m2.c; }; fooExport(): number; }
Line 2 col 0 IdentifierName "extMod" = extMod
Line 2 col 7 IdentifierName "m1" = { b: number; m2: { c: { prototype: m1.m2.c; new(): m1.m2.c; }; i: m1.m2.c; }; fooExport(): number; }
Line 2 col 10 IdentifierName "fooExport" = () => number
Line 3 col 4 IdentifierName "newVar" = m1.m2.c
Line 3 col 13 ObjectCreationExpression "new extMod.m1.m2.c()" = m1.m2.c
Line 3 col 17 MemberAccessExpression "extMod.m1.m2.c" = { prototype: m1.m2.c; new(): m1.m2.c; }
Line 3 col 17 MemberAccessExpression "extMod.m1.m2" = { c: { prototype: m1.m2.c; new(): m1.m2.c; }; i: m1.m2.c; }
Line 3 col 17 MemberAccessExpression "extMod.m1" = { b: number; m2: { c: { prototype: m1.m2.c; new(): m1.m2.c; }; i: m1.m2.c; }; fooExport(): number; }
Line 3 col 17 IdentifierName "extMod" = extMod
Line 3 col 24 IdentifierName "m1" = { b: number; m2: { c: { prototype: m1.m2.c; new(): m1.m2.c; }; i: m1.m2.c; }; fooExport(): number; }
Line 3 col 27 IdentifierName "m2" = { c: { prototype: m1.m2.c; new(): m1.m2.c; }; i: m1.m2.c; }
Line 3 col 30 IdentifierName "c" = { prototype: m1.m2.c; new(): m1.m2.c; }
Line 4 col 0 InvocationExpression "extMod.m4.fooExport()" = number
Line 4 col 0 MemberAccessExpression "extMod.m4.fooExport" = () => number
Line 4 col 0 MemberAccessExpression "extMod.m4" = { b: number; m2: { c: { prototype: m4.m2.c; new(): m4.m2.c; }; i: m4.m2.c; }; fooExport(): number; }
Line 4 col 0 IdentifierName "extMod" = extMod
Line 4 col 7 IdentifierName "m4" = { b: number; m2: { c: { prototype: m4.m2.c; new(): m4.m2.c; }; i: m4.m2.c; }; fooExport(): number; }
Line 4 col 10 IdentifierName "fooExport" = () => number
Line 5 col 4 IdentifierName "newVar2" = m4.m2.c
Line 5 col 14 ObjectCreationExpression "new extMod.m4.m2.c()" = m4.m2.c
Line 5 col 18 MemberAccessExpression "extMod.m4.m2.c" = { prototype: m4.m2.c; new(): m4.m2.c; }
Line 5 col 18 MemberAccessExpression "extMod.m4.m2" = { c: { prototype: m4.m2.c; new(): m4.m2.c; }; i: m4.m2.c; }
Line 5 col 18 MemberAccessExpression "extMod.m4" = { b: number; m2: { c: { prototype: m4.m2.c; new(): m4.m2.c; }; i: m4.m2.c; }; fooExport(): number; }
Line 5 col 18 IdentifierName "extMod" = extMod
Line 5 col 25 IdentifierName "m4" = { b: number; m2: { c: { prototype: m4.m2.c; new(): m4.m2.c; }; i: m4.m2.c; }; fooExport(): number; }
Line 5 col 28 IdentifierName "m2" = { c: { prototype: m4.m2.c; new(): m4.m2.c; }; i: m4.m2.c; }
Line 5 col 31 IdentifierName "c" = { prototype: m4.m2.c; new(): m4.m2.c; }
=== tests/cases/compiler/commentsExternalModules_0.ts ===
Line 2 col 14 IdentifierName "m1" = m1
Line 4 col 15 IdentifierName "b" = number
Line 6 col 13 IdentifierName "foo" = () => number
Line 7 col 15 IdentifierName "b" = number
Line 10 col 18 IdentifierName "m2" = m1.m2
Line 12 col 21 IdentifierName "c" = m1.m2.c
Line 15 col 19 IdentifierName "i" = m1.m2.c
Line 15 col 23 ObjectCreationExpression "new c()" = m1.m2.c
Line 15 col 27 IdentifierName "c" = { prototype: m1.m2.c; new(): m1.m2.c; }
Line 18 col 20 IdentifierName "fooExport" = () => number
Line 19 col 15 InvocationExpression "foo()" = number
Line 19 col 15 IdentifierName "foo" = () => number
Line 22 col 0 InvocationExpression "m1.fooExport()" = number
Line 22 col 0 MemberAccessExpression "m1.fooExport" = () => number
Line 22 col 0 IdentifierName "m1" = { b: number; m2: { c: { prototype: m1.m2.c; new(): m1.m2.c; }; i: m1.m2.c; }; fooExport(): number; }
Line 22 col 3 IdentifierName "fooExport" = () => number
Line 23 col 4 IdentifierName "myvar" = m1.m2.c
Line 23 col 12 ObjectCreationExpression "new m1.m2.c()" = m1.m2.c
Line 23 col 16 MemberAccessExpression "m1.m2.c" = { prototype: m1.m2.c; new(): m1.m2.c; }
Line 23 col 16 MemberAccessExpression "m1.m2" = { c: { prototype: m1.m2.c; new(): m1.m2.c; }; i: m1.m2.c; }
Line 23 col 16 IdentifierName "m1" = { b: number; m2: { c: { prototype: m1.m2.c; new(): m1.m2.c; }; i: m1.m2.c; }; fooExport(): number; }
Line 23 col 19 IdentifierName "m2" = { c: { prototype: m1.m2.c; new(): m1.m2.c; }; i: m1.m2.c; }
Line 23 col 22 IdentifierName "c" = { prototype: m1.m2.c; new(): m1.m2.c; }
Line 26 col 14 IdentifierName "m4" = m4
Line 28 col 15 IdentifierName "b" = number
Line 31 col 13 IdentifierName "foo" = () => number
Line 32 col 15 IdentifierName "b" = number
Line 36 col 18 IdentifierName "m2" = m4.m2
Line 38 col 21 IdentifierName "c" = m4.m2.c
Line 41 col 19 IdentifierName "i" = m4.m2.c
Line 41 col 23 ObjectCreationExpression "new c()" = m4.m2.c
Line 41 col 27 IdentifierName "c" = { prototype: m4.m2.c; new(): m4.m2.c; }
Line 44 col 20 IdentifierName "fooExport" = () => number
Line 45 col 15 InvocationExpression "foo()" = number
Line 45 col 15 IdentifierName "foo" = () => number
Line 48 col 0 InvocationExpression "m4.fooExport()" = number
Line 48 col 0 MemberAccessExpression "m4.fooExport" = () => number
Line 48 col 0 IdentifierName "m4" = { b: number; m2: { c: { prototype: m4.m2.c; new(): m4.m2.c; }; i: m4.m2.c; }; fooExport(): number; }
Line 48 col 3 IdentifierName "fooExport" = () => number
Line 49 col 4 IdentifierName "myvar2" = m4.m2.c
Line 49 col 13 ObjectCreationExpression "new m4.m2.c()" = m4.m2.c
Line 49 col 17 MemberAccessExpression "m4.m2.c" = { prototype: m4.m2.c; new(): m4.m2.c; }
Line 49 col 17 MemberAccessExpression "m4.m2" = { c: { prototype: m4.m2.c; new(): m4.m2.c; }; i: m4.m2.c; }
Line 49 col 17 IdentifierName "m4" = { b: number; m2: { c: { prototype: m4.m2.c; new(): m4.m2.c; }; i: m4.m2.c; }; fooExport(): number; }
Line 49 col 20 IdentifierName "m2" = { c: { prototype: m4.m2.c; new(): m4.m2.c; }; i: m4.m2.c; }
Line 49 col 23 IdentifierName "c" = { prototype: m4.m2.c; new(): m4.m2.c; }