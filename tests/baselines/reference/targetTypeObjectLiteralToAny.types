=== tests/cases/compiler/targetTypeObjectLiteralToAny.ts ===
Line 0 col 9 IdentifierName "suggest" = typeof suggest
Line 1 col 5 IdentifierName "TypeScriptKeywords" = string[]
Line 2 col 5 IdentifierName "result" = any
Line 3 col 0 InvocationExpression "TypeScriptKeywords.forEach(function(keyword) {						
		result.push({text:keyword, type:"keyword"}); // this should not cause a crash - push should be typed to any
	})" = void
Line 3 col 0 MemberAccessExpression "TypeScriptKeywords.forEach" = (callbackfn: (value: string, index: number, array: string[]) => void, thisArg?: any) => void
Line 3 col 0 IdentifierName "TypeScriptKeywords" = string[]
Line 4 col 20 IdentifierName "forEach" = (callbackfn: (value: string, index: number, array: string[]) => void, thisArg?: any) => void
Line 4 col 28 FunctionExpression "function(keyword) {						
		result.push({text:keyword, type:"keyword"}); // this should not cause a crash - push should be typed to any
	}" = (keyword: string) => void
Line 4 col 37 IdentifierName "keyword" = string
Line 5 col 0 InvocationExpression "result.push({text:keyword, type:"keyword"})" = any
Line 5 col 0 MemberAccessExpression "result.push" = any
Line 5 col 0 IdentifierName "result" = any
Line 5 col 9 IdentifierName "push" = any
Line 5 col 14 ObjectLiteralExpression "{text:keyword, type:"keyword"}" = { text: string; type: string; }
Line 5 col 15 IdentifierName "text" = string
Line 5 col 20 IdentifierName "keyword" = string
Line 5 col 29 IdentifierName "type" = string