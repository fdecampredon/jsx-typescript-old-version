==== tests/cases/compiler/assignmentCompatWithCallSignaturesWithRestParameters.ts (9 errors) ====
    // call signatures in derived types must have the same or fewer optional parameters as the target for assignment
    
    interface Base { 
        a: (...args: number[]) => number;
        a2: (x: number, ...z: number[]) => number;
        a3: (x: number, y?: string, ...z: number[]) => number;
        a4: (x?: number, y?: string, ...z: number[]) => number;
    }
    
    var a: (...args: number[]) => number; // ok, same number of required params
        a = () => 1; // ok, same number of required params
        a = (...args: number[]) => 1; // ok, same number of required params
        a = (...args: string[]) => 1; // error, type mismatch
        ~
!!! assignmentCompatWithCallSignaturesWithRestParameters.ts(13,5): error TS2012: Type '(...args: string[]) => number' is not assignable to type '(...args: number[]) => number':
!!! 	Call signatures of types '(...args: string[]) => number' and '(...args: number[]) => number' are incompatible.
        a = (x?: number) => 1; // ok, same number of required params
        a = (x?: number, y?: number, z?: number) => 1; // ok, same number of required params
        a = (x: number) => 1; // ok, rest param corresponds to infinite number of params
        a = (x?: string) => 1; // error, incompatible type
        ~
!!! assignmentCompatWithCallSignaturesWithRestParameters.ts(17,5): error TS2012: Type '(x?: string) => number' is not assignable to type '(...args: number[]) => number':
!!! 	Call signatures of types '(x?: string) => number' and '(...args: number[]) => number' are incompatible.
    
    
    var a2: (x: number, ...z: number[]) => number;
        a2 = () => 1; // ok, fewer required params
        a2 = (...args: number[]) => 1; // ok, fewer required params
        a2 = (x?: number) => 1; // ok, fewer required params
        a2 = (x: number) => 1; // ok, same number of required params
        a2 = (x: number, ...args: number[]) => 1; // ok, same number of required params
        a2 = (x: number, ...args: string[]) => 1; // should be type mismatch error
        ~~
!!! assignmentCompatWithCallSignaturesWithRestParameters.ts(26,5): error TS2012: Type '(x: number, ...args: string[]) => number' is not assignable to type '(x: number, ...z: number[]) => number':
!!! 	Call signatures of types '(x: number, ...args: string[]) => number' and '(x: number, ...z: number[]) => number' are incompatible.
        a2 = (x: number, y: number) => 1; // ok, rest param corresponds to infinite number of params
        a2 = (x: number, y?: number) => 1; // ok, same number of required params
    
    var a3: (x: number, y?: string, ...z: number[]) => number;
        a3 = () => 1; // ok, fewer required params
        a3 = (x?: number) => 1; // ok, fewer required params
        a3 = (x: number) => 1; // ok, same number of required params
        a3 = (x: number, y: string) => 1;  // ok, all present params match
        a3 = (x: number, y?: number, z?: number) => 1;  // error
        ~~
!!! assignmentCompatWithCallSignaturesWithRestParameters.ts(35,5): error TS2012: Type '(x: number, y?: number, z?: number) => number' is not assignable to type '(x: number, y?: string, ...z: number[]) => number':
!!! 	Call signatures of types '(x: number, y?: number, z?: number) => number' and '(x: number, y?: string, ...z: number[]) => number' are incompatible.
        a3 = (x: number, ...z: number[]) => 1;  // error
        ~~
!!! assignmentCompatWithCallSignaturesWithRestParameters.ts(36,5): error TS2012: Type '(x: number, ...z: number[]) => number' is not assignable to type '(x: number, y?: string, ...z: number[]) => number':
!!! 	Call signatures of types '(x: number, ...z: number[]) => number' and '(x: number, y?: string, ...z: number[]) => number' are incompatible.
        a3 = (x: string, y?: string, z?: string) => 1;  // error
        ~~
!!! assignmentCompatWithCallSignaturesWithRestParameters.ts(37,5): error TS2012: Type '(x: string, y?: string, z?: string) => number' is not assignable to type '(x: number, y?: string, ...z: number[]) => number':
!!! 	Call signatures of types '(x: string, y?: string, z?: string) => number' and '(x: number, y?: string, ...z: number[]) => number' are incompatible.
    
    var a4: (x?: number, y?: string, ...z: number[]) => number;
        a4 = () => 1; // ok, fewer required params
        a4 = (x?: number, y?: number) => 1; // error, type mismatch
        ~~
!!! assignmentCompatWithCallSignaturesWithRestParameters.ts(41,5): error TS2012: Type '(x?: number, y?: number) => number' is not assignable to type '(x?: number, y?: string, ...z: number[]) => number':
!!! 	Call signatures of types '(x?: number, y?: number) => number' and '(x?: number, y?: string, ...z: number[]) => number' are incompatible.
        a4 = (x: number) => 1; // ok, all present params match
        a4 = (x: number, y?: number) => 1;  // error, second param has type mismatch
        ~~
!!! assignmentCompatWithCallSignaturesWithRestParameters.ts(43,5): error TS2012: Type '(x: number, y?: number) => number' is not assignable to type '(x?: number, y?: string, ...z: number[]) => number':
!!! 	Call signatures of types '(x: number, y?: number) => number' and '(x?: number, y?: string, ...z: number[]) => number' are incompatible.
        a4 = (x?: number, y?: string) => 1;  // ok, same number of required params with matching types
        a4 = (x: number, ...args: string[]) => 1;  // error, rest params have type mismatch
        ~~
!!! assignmentCompatWithCallSignaturesWithRestParameters.ts(45,5): error TS2012: Type '(x: number, ...args: string[]) => number' is not assignable to type '(x?: number, y?: string, ...z: number[]) => number':
!!! 	Call signatures of types '(x: number, ...args: string[]) => number' and '(x?: number, y?: string, ...z: number[]) => number' are incompatible.