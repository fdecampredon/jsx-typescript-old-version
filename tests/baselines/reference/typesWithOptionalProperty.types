=== tests/cases/compiler/typesWithOptionalProperty.ts ===
Line 0 col 10 IdentifierName "I" = I
Line 1 col 0 IdentifierName "foo" = string
Line 2 col 0 IdentifierName "bar" = number
Line 3 col 0 IdentifierName "baz" = () => string
Line 6 col 4 IdentifierName "a" = { foo: string; bar?: number; baz?(): string; }
Line 7 col 0 IdentifierName "foo" = string
Line 8 col 0 IdentifierName "bar" = number
Line 9 col 0 IdentifierName "baz" = () => string
Line 12 col 4 IdentifierName "b" = { foo: string; }
Line 12 col 8 ObjectLiteralExpression "{ foo: '' }" = { foo: string; }
Line 12 col 10 IdentifierName "foo" = string
Line 13 col 4 IdentifierName "c" = { foo: string; bar: number; }
Line 13 col 8 ObjectLiteralExpression "{ foo: '', bar: 3 }" = { foo: string; bar: number; }
Line 13 col 10 IdentifierName "foo" = string
Line 13 col 19 IdentifierName "bar" = number
Line 14 col 4 IdentifierName "d" = { foo: string; bar: number; baz: () => string; }
Line 14 col 8 ObjectLiteralExpression "{ foo: '', bar: 3, baz: () => '' }" = { foo: string; bar: number; baz: () => string; }
Line 14 col 10 IdentifierName "foo" = string
Line 14 col 19 IdentifierName "bar" = number
Line 14 col 27 IdentifierName "baz" = () => string
Line 14 col 32 ParenthesizedArrowFunctionExpression "() => ''" = () => string
Line 16 col 4 IdentifierName "i" = I
Line 16 col 7 IdentifierName "I" = I
Line 17 col 0 AssignmentExpression "i = b" = { foo: string; }
Line 17 col 0 IdentifierName "i" = I
Line 18 col 4 IdentifierName "b" = { foo: string; }
Line 19 col 0 AssignmentExpression "i = c" = { foo: string; bar: number; }
Line 19 col 0 IdentifierName "i" = I
Line 19 col 4 IdentifierName "c" = { foo: string; bar: number; }
Line 20 col 0 AssignmentExpression "i = d" = { foo: string; bar: number; baz: () => string; }
Line 20 col 0 IdentifierName "i" = I
Line 20 col 4 IdentifierName "d" = { foo: string; bar: number; baz: () => string; }
Line 21 col 0 AssignmentExpression "a = b" = { foo: string; }
Line 21 col 0 IdentifierName "a" = { foo: string; bar?: number; baz?(): string; }
Line 22 col 4 IdentifierName "b" = { foo: string; }
Line 23 col 0 AssignmentExpression "a = c" = { foo: string; bar: number; }
Line 23 col 0 IdentifierName "a" = { foo: string; bar?: number; baz?(): string; }
Line 23 col 4 IdentifierName "c" = { foo: string; bar: number; }
Line 24 col 0 AssignmentExpression "a = d" = { foo: string; bar: number; baz: () => string; }
Line 24 col 0 IdentifierName "a" = { foo: string; bar?: number; baz?(): string; }
Line 24 col 4 IdentifierName "d" = { foo: string; bar: number; baz: () => string; }
Line 25 col 0 AssignmentExpression "i = a" = { foo: string; bar?: number; baz?(): string; }
Line 25 col 0 IdentifierName "i" = I
Line 26 col 4 IdentifierName "a" = { foo: string; bar?: number; baz?(): string; }
Line 27 col 0 AssignmentExpression "a = i" = I
Line 27 col 0 IdentifierName "a" = { foo: string; bar?: number; baz?(): string; }
Line 27 col 4 IdentifierName "i" = I