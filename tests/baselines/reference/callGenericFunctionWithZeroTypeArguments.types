=== tests/cases/compiler/callGenericFunctionWithZeroTypeArguments.ts ===
Line 0 col 9 IdentifierName "f" = <T>(x: T) => T
Line 0 col 11 IdentifierName "T" = any
Line 0 col 14 IdentifierName "x" = T
Line 0 col 17 IdentifierName "T" = T
Line 0 col 21 IdentifierName "T" = T
Line 1 col 4 IdentifierName "r" = number
Line 1 col 8 InvocationExpression "f(1)" = number
Line 1 col 8 IdentifierName "f" = <T>(x: T) => T
Line 3 col 4 IdentifierName "f2" = <T>(x: T) => T
Line 3 col 9 ParenthesizedArrowFunctionExpression "<T>(x: T): T => { return null; }" = <T>(x: T) => T
Line 3 col 10 IdentifierName "T" = any
Line 3 col 13 IdentifierName "x" = T
Line 3 col 16 IdentifierName "T" = T
Line 3 col 20 IdentifierName "T" = T
Line 4 col 4 IdentifierName "r2" = number
Line 4 col 9 InvocationExpression "f2(1)" = number
Line 4 col 9 IdentifierName "f2" = <T>(x: T) => T
Line 6 col 4 IdentifierName "f3" = <T>(x: T) => T
Line 6 col 11 IdentifierName "T" = any
Line 6 col 14 IdentifierName "x" = T
Line 6 col 17 IdentifierName "T" = T
Line 6 col 21 IdentifierName "T" = T
Line 7 col 4 IdentifierName "r3" = number
Line 7 col 9 InvocationExpression "f3(1)" = number
Line 7 col 9 IdentifierName "f3" = <T>(x: T) => T
Line 9 col 6 IdentifierName "C" = C
Line 10 col 0 IdentifierName "f" = <T>(x: T) => T
Line 10 col 6 IdentifierName "T" = any
Line 10 col 9 IdentifierName "x" = T
Line 10 col 12 IdentifierName "T" = T
Line 10 col 16 IdentifierName "T" = T
Line 14 col 4 IdentifierName "r4" = number
Line 14 col 9 InvocationExpression "(new C()).f(1)" = number
Line 14 col 9 MemberAccessExpression "(new C()).f" = <T>(x: T) => T
Line 14 col 9 ParenthesizedExpression "(new C())" = C
Line 14 col 10 ObjectCreationExpression "new C()" = C
Line 14 col 14 IdentifierName "C" = new() => C
Line 14 col 19 IdentifierName "f" = <T>(x: T) => T
Line 16 col 10 IdentifierName "I" = I
Line 17 col 0 IdentifierName "f" = <T>(x: T) => T
Line 17 col 6 IdentifierName "T" = any
Line 17 col 9 IdentifierName "x" = T
Line 17 col 12 IdentifierName "T" = T
Line 17 col 16 IdentifierName "T" = T
Line 19 col 4 IdentifierName "i" = I
Line 19 col 7 IdentifierName "I" = I
Line 20 col 4 IdentifierName "r5" = number
Line 20 col 9 InvocationExpression "i.f(1)" = number
Line 20 col 9 MemberAccessExpression "i.f" = <T>(x: T) => T
Line 20 col 9 IdentifierName "i" = I
Line 20 col 11 IdentifierName "f" = <T>(x: T) => T
Line 22 col 6 IdentifierName "C2" = C2<T>
Line 22 col 9 IdentifierName "T" = any
Line 23 col 0 IdentifierName "f" = (x: T) => T
Line 23 col 6 IdentifierName "x" = T
Line 23 col 9 IdentifierName "T" = T
Line 23 col 13 IdentifierName "T" = T
Line 27 col 4 IdentifierName "r6" = any
Line 27 col 9 InvocationExpression "(new C2()).f(1)" = any
Line 27 col 9 MemberAccessExpression "(new C2()).f" = (x: any) => any
Line 27 col 9 ParenthesizedExpression "(new C2())" = C2<any>
Line 27 col 10 ObjectCreationExpression "new C2()" = C2<any>
Line 27 col 14 IdentifierName "C2" = new<T>() => C2<T>
Line 27 col 20 IdentifierName "f" = (x: any) => any
Line 29 col 10 IdentifierName "I2" = I2<T>
Line 29 col 13 IdentifierName "T" = any
Line 30 col 0 IdentifierName "f" = (x: T) => T
Line 30 col 6 IdentifierName "x" = T
Line 30 col 9 IdentifierName "T" = T
Line 30 col 13 IdentifierName "T" = T
Line 32 col 4 IdentifierName "i2" = I2<number>
Line 32 col 8 IdentifierName "I2" = I2<T>
Line 33 col 4 IdentifierName "r7" = number
Line 33 col 9 InvocationExpression "i2.f(1)" = number
Line 33 col 9 MemberAccessExpression "i2.f" = (x: number) => number
Line 33 col 9 IdentifierName "i2" = I2<number>
Line 33 col 12 IdentifierName "f" = (x: number) => number