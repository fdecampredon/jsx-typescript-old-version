=== tests/cases/compiler/contextualTypingWithGenericAndNonGenericSignature.ts ===
Line 2 col 4 IdentifierName "f2" = { (x: string, y: number): string; <T, U>(x: T, y: U): T; }
Line 3 col 5 IdentifierName "x" = string
Line 3 col 16 IdentifierName "y" = number
Line 4 col 5 IdentifierName "T" = any
Line 4 col 8 IdentifierName "U" = any
Line 4 col 11 IdentifierName "x" = T
Line 4 col 14 IdentifierName "T" = T
Line 4 col 17 IdentifierName "y" = U
Line 4 col 20 IdentifierName "U" = U
Line 4 col 24 IdentifierName "T" = T
Line 6 col 0 AssignmentExpression "f2 = (x, y) => { return x }" = (x: any, y: any) => any
Line 6 col 0 IdentifierName "f2" = { (x: string, y: number): string; <T, U>(x: T, y: U): T; }
Line 7 col 5 ParenthesizedArrowFunctionExpression "(x, y) => { return x }" = (x: any, y: any) => any
Line 7 col 6 IdentifierName "x" = any
Line 7 col 9 IdentifierName "y" = any
Line 7 col 24 IdentifierName "x" = any
Line 9 col 4 IdentifierName "f3" = { <T, U>(x: T, y: U): T; (x: string, y: number): string; }
Line 10 col 5 IdentifierName "T" = any
Line 10 col 8 IdentifierName "U" = any
Line 10 col 11 IdentifierName "x" = T
Line 10 col 14 IdentifierName "T" = T
Line 10 col 17 IdentifierName "y" = U
Line 10 col 20 IdentifierName "U" = U
Line 10 col 24 IdentifierName "T" = T
Line 11 col 5 IdentifierName "x" = string
Line 11 col 16 IdentifierName "y" = number
Line 13 col 0 AssignmentExpression "f3 = (x, y) => { return x }" = (x: any, y: any) => any
Line 13 col 0 IdentifierName "f3" = { <T, U>(x: T, y: U): T; (x: string, y: number): string; }
Line 14 col 5 ParenthesizedArrowFunctionExpression "(x, y) => { return x }" = (x: any, y: any) => any
Line 14 col 6 IdentifierName "x" = any
Line 14 col 9 IdentifierName "y" = any
Line 14 col 24 IdentifierName "x" = any