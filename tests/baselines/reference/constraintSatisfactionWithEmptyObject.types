=== tests/cases/compiler/constraintSatisfactionWithEmptyObject.ts ===
Line 1 col 9 IdentifierName "foo" = <T extends Object>(x: T) => void
Line 1 col 13 IdentifierName "T" = T
Line 1 col 23 IdentifierName "Object" = Object
Line 1 col 31 IdentifierName "x" = T
Line 1 col 34 IdentifierName "T" = T
Line 2 col 4 IdentifierName "r" = void
Line 2 col 8 InvocationExpression "foo({})" = void
Line 2 col 8 IdentifierName "foo" = <T extends Object>(x: T) => void
Line 2 col 12 ObjectLiteralExpression "{}" = {}
Line 3 col 4 IdentifierName "a" = {}
Line 3 col 8 ObjectLiteralExpression "{}" = {}
Line 4 col 4 IdentifierName "r" = void
Line 4 col 8 InvocationExpression "foo({})" = void
Line 4 col 8 IdentifierName "foo" = <T extends Object>(x: T) => void
Line 4 col 12 ObjectLiteralExpression "{}" = {}
Line 6 col 6 IdentifierName "C" = C<T>
Line 6 col 8 IdentifierName "T" = T
Line 6 col 18 IdentifierName "Object" = Object
Line 7 col 23 IdentifierName "x" = T
Line 7 col 26 IdentifierName "T" = T
Line 10 col 4 IdentifierName "r2" = C<{}>
Line 10 col 9 ObjectCreationExpression "new C({})" = C<{}>
Line 10 col 13 IdentifierName "C" = { prototype: C<any>; new<T extends Object>(x: T): C<T>; }
Line 10 col 15 ObjectLiteralExpression "{}" = {}
Line 12 col 10 IdentifierName "I" = I<T>
Line 12 col 12 IdentifierName "T" = T
Line 12 col 22 IdentifierName "Object" = Object
Line 13 col 0 IdentifierName "x" = T
Line 13 col 7 IdentifierName "T" = T
Line 15 col 4 IdentifierName "i" = I<{}>
Line 15 col 7 IdentifierName "I" = I<T>
Line 18 col 9 IdentifierName "foo2" = <T extends {}>(x: T) => void
Line 18 col 14 IdentifierName "T" = T
Line 18 col 28 IdentifierName "x" = T
Line 18 col 31 IdentifierName "T" = T
Line 19 col 4 IdentifierName "r" = void
Line 19 col 8 InvocationExpression "foo2({})" = void
Line 19 col 8 IdentifierName "foo2" = <T extends {}>(x: T) => void
Line 19 col 13 ObjectLiteralExpression "{}" = {}
Line 20 col 4 IdentifierName "a" = {}
Line 20 col 8 ObjectLiteralExpression "{}" = {}
Line 21 col 4 IdentifierName "r" = void
Line 21 col 8 InvocationExpression "foo2({})" = void
Line 21 col 8 IdentifierName "foo2" = <T extends {}>(x: T) => void
Line 21 col 13 ObjectLiteralExpression "{}" = {}
Line 23 col 6 IdentifierName "C2" = C2<T>
Line 23 col 9 IdentifierName "T" = T
Line 24 col 23 IdentifierName "x" = T
Line 24 col 26 IdentifierName "T" = T
Line 27 col 4 IdentifierName "r2" = C2<{}>
Line 27 col 9 ObjectCreationExpression "new C2({})" = C2<{}>
Line 27 col 13 IdentifierName "C2" = { prototype: C2<any>; new<T extends {}>(x: T): C2<T>; }
Line 27 col 16 ObjectLiteralExpression "{}" = {}
Line 29 col 10 IdentifierName "I2" = I2<T>
Line 29 col 13 IdentifierName "T" = T
Line 30 col 0 IdentifierName "x" = T
Line 30 col 7 IdentifierName "T" = T
Line 32 col 4 IdentifierName "i2" = I2<{}>
Line 32 col 8 IdentifierName "I2" = I2<T>