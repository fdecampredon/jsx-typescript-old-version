=== tests/cases/compiler/consumer.ts ===
import Drawing = require('./Drawing');
>Drawing : Drawing

var addr = new Drawing.Math.Adder();
>addr : Adder
>new Drawing.Math.Adder() : Adder
>Drawing.Math.Adder : typeof Adder
>Drawing.Math : { Adder: typeof Adder; }
>Drawing : typeof Drawing
>Math : { Adder: typeof Adder; }
>Adder : typeof Adder

=== tests/cases/compiler/Drawing.ts ===
export import Math = require('Math/Math')
>Math : Math

=== tests/cases/compiler/Math/Math.ts ===
import Adder = require('Math/Adder');
>Adder : Adder

var Math = {
>Math : { Adder: typeof Adder; }
>{
    Adder:Adder
} : { Adder: typeof Adder; }

    Adder:Adder
>Adder : typeof Adder
>Adder : typeof Adder

};

export = Math
>Math : { Adder: typeof Adder; }

=== tests/cases/compiler/Math/Adder.ts ===
class Adder {
>Adder : Adder

    add(a: number, b: number) {
>add : (a: number, b: number) => void
>a : number
>b : number
        
    }
}

export = Adder;
>Adder : typeof Adder

