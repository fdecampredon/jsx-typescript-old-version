=== tests/cases/compiler/conditionalOperatorConditoinIsStringType.ts ===
Line 1 col 4 IdentifierName "condString" = string
Line 3 col 4 IdentifierName "exprAny1" = any
Line 4 col 4 IdentifierName "exprBoolean1" = boolean
Line 5 col 4 IdentifierName "exprNumber1" = number
Line 6 col 4 IdentifierName "exprString1" = string
Line 7 col 4 IdentifierName "exprIsObject1" = Object
Line 7 col 19 IdentifierName "Object" = Object
Line 9 col 4 IdentifierName "exprAny2" = any
Line 10 col 4 IdentifierName "exprBoolean2" = boolean
Line 11 col 4 IdentifierName "exprNumber2" = number
Line 12 col 4 IdentifierName "exprString2" = string
Line 13 col 4 IdentifierName "exprIsObject2" = Object
Line 13 col 19 IdentifierName "Object" = Object
Line 14 col 0 ConditionalExpression "//Cond is a string type variable
condString ? exprAny1 : exprAny2" = any
Line 14 col 0 IdentifierName "//Cond is a string type variable
condString" = string
Line 16 col 13 IdentifierName "exprAny1" = any
Line 16 col 24 IdentifierName "exprAny2" = any
Line 17 col 0 ConditionalExpression "condString ? exprBoolean1 : exprBoolean2" = boolean
Line 17 col 0 IdentifierName "condString" = string
Line 17 col 13 IdentifierName "exprBoolean1" = boolean
Line 17 col 28 IdentifierName "exprBoolean2" = boolean
Line 18 col 0 ConditionalExpression "condString ? exprNumber1 : exprNumber2" = number
Line 18 col 0 IdentifierName "condString" = string
Line 18 col 13 IdentifierName "exprNumber1" = number
Line 18 col 27 IdentifierName "exprNumber2" = number
Line 19 col 0 ConditionalExpression "condString ? exprString1 : exprString2" = string
Line 19 col 0 IdentifierName "condString" = string
Line 19 col 13 IdentifierName "exprString1" = string
Line 19 col 27 IdentifierName "exprString2" = string
Line 20 col 0 ConditionalExpression "condString ? exprIsObject1 : exprIsObject2" = Object
Line 20 col 0 IdentifierName "condString" = string
Line 20 col 13 IdentifierName "exprIsObject1" = Object
Line 20 col 29 IdentifierName "exprIsObject2" = Object
Line 21 col 0 ConditionalExpression "//Cond is a string type literal
"" ? exprAny1 : exprAny2" = any
Line 23 col 5 IdentifierName "exprAny1" = any
Line 23 col 16 IdentifierName "exprAny2" = any
Line 24 col 0 ConditionalExpression ""string" ? exprBoolean1 : exprBoolean2" = boolean
Line 24 col 11 IdentifierName "exprBoolean1" = boolean
Line 24 col 26 IdentifierName "exprBoolean2" = boolean
Line 25 col 0 ConditionalExpression "'c' ? exprNumber1 : exprNumber2" = number
Line 25 col 6 IdentifierName "exprNumber1" = number
Line 25 col 20 IdentifierName "exprNumber2" = number
Line 26 col 0 ConditionalExpression "'string' ? exprString1 : exprString2" = string
Line 26 col 11 IdentifierName "exprString1" = string
Line 26 col 25 IdentifierName "exprString2" = string
Line 27 col 0 ConditionalExpression ""  " ? exprIsObject1 : exprIsObject2" = Object
Line 27 col 7 IdentifierName "exprIsObject1" = Object
Line 27 col 23 IdentifierName "exprIsObject2" = Object
Line 30 col 9 IdentifierName "foo" = typeof foo
Line 31 col 4 IdentifierName "array" = string[]
Line 31 col 12 ArrayLiteralExpression "["1", "2", "3"]" = string[]
Line 32 col 0 ConditionalExpression "typeof condString ? exprAny1 : exprAny2" = any
Line 32 col 0 TypeOfExpression "typeof condString" = string
Line 33 col 7 IdentifierName "condString" = string
Line 33 col 20 IdentifierName "exprAny1" = any
Line 33 col 31 IdentifierName "exprAny2" = any
Line 34 col 0 ConditionalExpression "condString.toUpperCase ? exprBoolean1 : exprBoolean2" = boolean
Line 34 col 0 MemberAccessExpression "condString.toUpperCase" = () => string
Line 34 col 0 IdentifierName "condString" = string
Line 34 col 11 IdentifierName "toUpperCase" = () => string
Line 34 col 25 IdentifierName "exprBoolean1" = boolean
Line 34 col 40 IdentifierName "exprBoolean2" = boolean
Line 35 col 0 ConditionalExpression "condString + "string" ? exprNumber1 : exprNumber2" = number
Line 35 col 0 AddExpression "condString + "string"" = string
Line 35 col 0 IdentifierName "condString" = string
Line 35 col 24 IdentifierName "exprNumber1" = number
Line 35 col 38 IdentifierName "exprNumber2" = number
Line 36 col 0 ConditionalExpression "foo() ? exprString1 : exprString2" = string
Line 36 col 0 InvocationExpression "foo()" = string
Line 36 col 0 IdentifierName "foo" = typeof foo
Line 36 col 8 IdentifierName "exprString1" = string
Line 36 col 22 IdentifierName "exprString2" = string
Line 37 col 0 ConditionalExpression "array[1] ? exprIsObject1 : exprIsObject2" = Object
Line 37 col 0 ElementAccessExpression "array[1]" = string
Line 37 col 0 IdentifierName "array" = string[]
Line 37 col 11 IdentifierName "exprIsObject1" = Object
Line 37 col 27 IdentifierName "exprIsObject2" = Object
Line 40 col 4 IdentifierName "resultIsAny1" = any
Line 40 col 19 ConditionalExpression "condString ? exprAny1 : exprAny2" = any
Line 40 col 19 IdentifierName "condString" = string
Line 40 col 32 IdentifierName "exprAny1" = any
Line 40 col 43 IdentifierName "exprAny2" = any
Line 41 col 4 IdentifierName "resultIsBoolean1" = boolean
Line 41 col 23 ConditionalExpression "condString ? exprBoolean1 : exprBoolean2" = boolean
Line 41 col 23 IdentifierName "condString" = string
Line 41 col 36 IdentifierName "exprBoolean1" = boolean
Line 41 col 51 IdentifierName "exprBoolean2" = boolean
Line 42 col 4 IdentifierName "resultIsNumber1" = number
Line 42 col 22 ConditionalExpression "condString ? exprNumber1 : exprNumber2" = number
Line 42 col 22 IdentifierName "condString" = string
Line 42 col 35 IdentifierName "exprNumber1" = number
Line 42 col 49 IdentifierName "exprNumber2" = number
Line 43 col 4 IdentifierName "resultIsString1" = string
Line 43 col 22 ConditionalExpression "condString ? exprString1 : exprString2" = string
Line 43 col 22 IdentifierName "condString" = string
Line 43 col 35 IdentifierName "exprString1" = string
Line 43 col 49 IdentifierName "exprString2" = string
Line 44 col 4 IdentifierName "resultIsObject1" = Object
Line 44 col 22 ConditionalExpression "condString ? exprIsObject1 : exprIsObject2" = Object
Line 44 col 22 IdentifierName "condString" = string
Line 44 col 35 IdentifierName "exprIsObject1" = Object
Line 44 col 51 IdentifierName "exprIsObject2" = Object
Line 46 col 4 IdentifierName "resultIsAny2" = any
Line 46 col 19 ConditionalExpression """ ? exprAny1 : exprAny2" = any
Line 46 col 24 IdentifierName "exprAny1" = any
Line 46 col 35 IdentifierName "exprAny2" = any
Line 47 col 4 IdentifierName "resultIsBoolean2" = boolean
Line 47 col 23 ConditionalExpression ""string" ? exprBoolean1 : exprBoolean2" = boolean
Line 47 col 34 IdentifierName "exprBoolean1" = boolean
Line 47 col 49 IdentifierName "exprBoolean2" = boolean
Line 48 col 4 IdentifierName "resultIsNumber2" = number
Line 48 col 22 ConditionalExpression "'c' ? exprNumber1 : exprNumber2" = number
Line 48 col 28 IdentifierName "exprNumber1" = number
Line 48 col 42 IdentifierName "exprNumber2" = number
Line 49 col 4 IdentifierName "resultIsString2" = string
Line 49 col 22 ConditionalExpression "'string' ? exprString1 : exprString2" = string
Line 49 col 33 IdentifierName "exprString1" = string
Line 49 col 47 IdentifierName "exprString2" = string
Line 50 col 4 IdentifierName "resultIsObject2" = Object
Line 50 col 22 ConditionalExpression ""  " ? exprIsObject1 : exprIsObject2" = Object
Line 50 col 29 IdentifierName "exprIsObject1" = Object
Line 50 col 45 IdentifierName "exprIsObject2" = Object
Line 52 col 4 IdentifierName "resultIsAny3" = any
Line 52 col 19 ConditionalExpression "typeof condString ? exprAny1 : exprAny2" = any
Line 52 col 19 TypeOfExpression "typeof condString" = string
Line 52 col 26 IdentifierName "condString" = string
Line 52 col 39 IdentifierName "exprAny1" = any
Line 52 col 50 IdentifierName "exprAny2" = any
Line 53 col 4 IdentifierName "resultIsBoolean3" = boolean
Line 53 col 23 ConditionalExpression "condString.toUpperCase ? exprBoolean1 : exprBoolean2" = boolean
Line 53 col 23 MemberAccessExpression "condString.toUpperCase" = () => string
Line 53 col 23 IdentifierName "condString" = string
Line 53 col 34 IdentifierName "toUpperCase" = () => string
Line 53 col 48 IdentifierName "exprBoolean1" = boolean
Line 53 col 63 IdentifierName "exprBoolean2" = boolean
Line 54 col 4 IdentifierName "resultIsNumber3" = number
Line 54 col 22 ConditionalExpression "condString + "string" ? exprNumber1 : exprNumber2" = number
Line 54 col 22 AddExpression "condString + "string"" = string
Line 54 col 22 IdentifierName "condString" = string
Line 54 col 46 IdentifierName "exprNumber1" = number
Line 54 col 60 IdentifierName "exprNumber2" = number
Line 55 col 4 IdentifierName "resultIsString3" = string
Line 55 col 22 ConditionalExpression "foo() ? exprString1 : exprString2" = string
Line 55 col 22 InvocationExpression "foo()" = string
Line 55 col 22 IdentifierName "foo" = typeof foo
Line 55 col 30 IdentifierName "exprString1" = string
Line 55 col 44 IdentifierName "exprString2" = string
Line 56 col 4 IdentifierName "resultIsObject3" = Object
Line 56 col 22 ConditionalExpression "array[1] ? exprIsObject1 : exprIsObject2" = Object
Line 56 col 22 ElementAccessExpression "array[1]" = string
Line 56 col 22 IdentifierName "array" = string[]
Line 56 col 33 IdentifierName "exprIsObject1" = Object
Line 56 col 49 IdentifierName "exprIsObject2" = Object