=== tests/cases/compiler/plusOperatorWithStringType.ts ===
Line 1 col 4 IdentifierName "STRING" = string
Line 2 col 4 IdentifierName "STRING1" = string[]
Line 2 col 24 ArrayLiteralExpression "["", "abc"]" = string[]
Line 4 col 9 IdentifierName "foo" = typeof foo
Line 6 col 6 IdentifierName "A" = A
Line 7 col 11 IdentifierName "a" = string
Line 8 col 11 IdentifierName "foo" = () => string
Line 10 col 7 IdentifierName "M" = M
Line 11 col 15 IdentifierName "n" = string
Line 14 col 4 IdentifierName "objA" = A
Line 14 col 11 ObjectCreationExpression "new A()" = A
Line 14 col 15 IdentifierName "A" = typeof A
Line 17 col 4 IdentifierName "ResultIsNumber1" = number
Line 17 col 22 PlusExpression "+STRING" = number
Line 17 col 23 IdentifierName "STRING" = string
Line 18 col 4 IdentifierName "ResultIsNumber2" = number
Line 18 col 22 PlusExpression "+STRING1" = number
Line 18 col 23 IdentifierName "STRING1" = string[]
Line 21 col 4 IdentifierName "ResultIsNumber3" = number
Line 21 col 22 PlusExpression "+""" = number
Line 22 col 4 IdentifierName "ResultIsNumber4" = number
Line 22 col 22 PlusExpression "+{ x: "", y: "" }" = number
Line 22 col 23 ObjectLiteralExpression "{ x: "", y: "" }" = { x: string; y: string; }
Line 22 col 25 IdentifierName "x" = string
Line 22 col 32 IdentifierName "y" = string
Line 23 col 4 IdentifierName "ResultIsNumber5" = number
Line 23 col 22 PlusExpression "+{ x: "", y: (s: string) => { return s; } }" = number
Line 23 col 23 ObjectLiteralExpression "{ x: "", y: (s: string) => { return s; } }" = { x: string; y: (s: string) => string; }
Line 23 col 25 IdentifierName "x" = string
Line 23 col 32 IdentifierName "y" = (s: string) => string
Line 23 col 35 ParenthesizedArrowFunctionExpression "(s: string) => { return s; }" = (s: string) => string
Line 23 col 36 IdentifierName "s" = string
Line 23 col 59 IdentifierName "s" = string
Line 26 col 4 IdentifierName "ResultIsNumber6" = number
Line 26 col 22 PlusExpression "+objA.a" = number
Line 26 col 23 MemberAccessExpression "objA.a" = string
Line 26 col 23 IdentifierName "objA" = A
Line 26 col 28 IdentifierName "a" = string
Line 27 col 4 IdentifierName "ResultIsNumber7" = number
Line 27 col 22 PlusExpression "+M.n" = number
Line 27 col 23 MemberAccessExpression "M.n" = string
Line 27 col 23 IdentifierName "M" = typeof M
Line 27 col 25 IdentifierName "n" = string
Line 28 col 4 IdentifierName "ResultIsNumber8" = number
Line 28 col 22 PlusExpression "+STRING1[0]" = number
Line 28 col 23 ElementAccessExpression "STRING1[0]" = string
Line 28 col 23 IdentifierName "STRING1" = string[]
Line 29 col 4 IdentifierName "ResultIsNumber9" = number
Line 29 col 22 PlusExpression "+foo()" = number
Line 29 col 23 InvocationExpression "foo()" = string
Line 29 col 23 IdentifierName "foo" = typeof foo
Line 30 col 4 IdentifierName "ResultIsNumber10" = number
Line 30 col 23 PlusExpression "+A.foo()" = number
Line 30 col 24 InvocationExpression "A.foo()" = string
Line 30 col 24 MemberAccessExpression "A.foo" = () => string
Line 30 col 24 IdentifierName "A" = typeof A
Line 30 col 26 IdentifierName "foo" = () => string
Line 31 col 4 IdentifierName "ResultIsNumber11" = number
Line 31 col 23 PlusExpression "+(STRING + STRING)" = number
Line 31 col 24 ParenthesizedExpression "(STRING + STRING)" = string
Line 31 col 25 AddExpression "STRING + STRING" = string
Line 31 col 25 IdentifierName "STRING" = string
Line 31 col 34 IdentifierName "STRING" = string
Line 32 col 4 IdentifierName "ResultIsNumber12" = number
Line 32 col 23 PlusExpression "+STRING.charAt(0)" = number
Line 32 col 24 InvocationExpression "STRING.charAt(0)" = string
Line 32 col 24 MemberAccessExpression "STRING.charAt" = (pos: number) => string
Line 32 col 24 IdentifierName "STRING" = string
Line 32 col 31 IdentifierName "charAt" = (pos: number) => string
Line 33 col 0 PlusExpression "// miss assignment operators
+""" = number
Line 36 col 0 PlusExpression "+STRING" = number
Line 36 col 1 IdentifierName "STRING" = string
Line 37 col 0 PlusExpression "+STRING1" = number
Line 37 col 1 IdentifierName "STRING1" = string[]
Line 38 col 0 PlusExpression "+foo()" = number
Line 38 col 1 InvocationExpression "foo()" = string
Line 38 col 1 IdentifierName "foo" = typeof foo
Line 39 col 0 CommaExpression "+objA.a,M.n" = string
Line 39 col 0 PlusExpression "+objA.a" = number
Line 39 col 1 MemberAccessExpression "objA.a" = string
Line 39 col 1 IdentifierName "objA" = A
Line 39 col 6 IdentifierName "a" = string
Line 39 col 8 MemberAccessExpression "M.n" = string
Line 39 col 8 IdentifierName "M" = typeof M
Line 39 col 10 IdentifierName "n" = string