=== tests/cases/compiler/moduleVisibilityTest1.ts ===
Line 2 col 7 IdentifierName "OuterMod" = OuterMod
Line 3 col 17 IdentifierName "someExportedOuterFunc" = () => number
Line 3 col 50 NegateExpression "-1" = number
Line 5 col 15 IdentifierName "OuterInnerMod" = OuterMod.OuterInnerMod
Line 6 col 18 IdentifierName "someExportedOuterInnerFunc" = () => string
Line 10 col 7 IdentifierName "OuterInnerAlias" = { someExportedOuterInnerFunc(): string; }
Line 10 col 25 IdentifierName "OuterMod" = OuterMod
Line 10 col 34 IdentifierName "OuterInnerMod" = any
Line 12 col 7 IdentifierName "M" = M
Line 14 col 15 IdentifierName "InnerMod" = M.InnerMod
Line 15 col 18 IdentifierName "someExportedInnerFunc" = () => number
Line 15 col 51 NegateExpression "-2" = number
Line 18 col 13 IdentifierName "E" = M.E
Line 19 col 0 IdentifierName "A" = M.E
Line 20 col 0 IdentifierName "B" = M.E
Line 21 col 0 IdentifierName "C" = M.E
Line 24 col 12 IdentifierName "x" = number
Line 25 col 20 IdentifierName "exported_var" = any
Line 27 col 5 IdentifierName "y" = number
Line 27 col 9 AddExpression "x + x" = number
Line 27 col 9 IdentifierName "x" = number
Line 27 col 13 IdentifierName "x" = number
Line 30 col 18 IdentifierName "I" = M.I
Line 31 col 0 IdentifierName "someMethod" = () => number
Line 34 col 8 IdentifierName "B" = M.B
Line 34 col 18 IdentifierName "b" = number
Line 36 col 15 IdentifierName "C" = M.C
Line 36 col 28 IdentifierName "I" = M.I
Line 37 col 9 IdentifierName "someMethodThatCallsAnOuterMethod" = () => string
Line 37 col 52 InvocationExpression "OuterInnerAlias.someExportedOuterInnerFunc()" = string
Line 37 col 52 MemberAccessExpression "OuterInnerAlias.someExportedOuterInnerFunc" = () => string
Line 37 col 52 IdentifierName "OuterInnerAlias" = { someExportedOuterInnerFunc(): string; }
Line 37 col 68 IdentifierName "someExportedOuterInnerFunc" = () => string
Line 38 col 9 IdentifierName "someMethodThatCallsAnInnerMethod" = () => number
Line 38 col 52 InvocationExpression "InnerMod.someExportedInnerFunc()" = number
Line 38 col 52 MemberAccessExpression "InnerMod.someExportedInnerFunc" = () => number
Line 38 col 52 IdentifierName "InnerMod" = { someExportedInnerFunc(): number; }
Line 38 col 61 IdentifierName "someExportedInnerFunc" = () => number
Line 39 col 9 IdentifierName "someMethodThatCallsAnOuterInnerMethod" = () => number
Line 39 col 57 InvocationExpression "OuterMod.someExportedOuterFunc()" = number
Line 39 col 57 MemberAccessExpression "OuterMod.someExportedOuterFunc" = () => number
Line 39 col 57 IdentifierName "OuterMod" = { someExportedOuterFunc(): number; OuterInnerMod: { someExportedOuterInnerFunc(): string; }; }
Line 39 col 66 IdentifierName "someExportedOuterFunc" = () => number
Line 40 col 9 IdentifierName "someMethod" = () => number
Line 41 col 9 IdentifierName "someProp" = number
Line 44 col 15 IdentifierName "someInnerFunc" = () => number
Line 45 col 16 IdentifierName "someInnerVar" = number
Line 49 col 5 IdentifierName "someModuleVar" = number
Line 51 col 10 IdentifierName "someModuleFunction" = () => number
Line 54 col 7 IdentifierName "M" = M
Line 55 col 12 IdentifierName "c" = number
Line 55 col 16 IdentifierName "x" = number
Line 56 col 12 IdentifierName "meb" = M.E
Line 56 col 18 MemberAccessExpression "M.E.B" = M.E
Line 56 col 18 MemberAccessExpression "M.E" = { A: M.E; B: M.E; C: M.E; [x: number]: string; }
Line 56 col 18 IdentifierName "M" = { InnerMod: { someExportedInnerFunc(): number; }; E: { A: M.E; B: M.E; C: M.E; [x: number]: string; }; x: number; exported_var: any; C: new() => M.C; c: number; meb: M.E; }
Line 56 col 20 IdentifierName "E" = { A: M.E; B: M.E; C: M.E; [x: number]: string; }
Line 56 col 22 IdentifierName "B" = M.E
Line 59 col 4 IdentifierName "cprime" = M.I
Line 59 col 13 IdentifierName "M" = M
Line 59 col 15 IdentifierName "I" = M.I
Line 59 col 19 CastExpression "<M.I>null" = M.I
Line 59 col 20 IdentifierName "M" = M
Line 59 col 22 IdentifierName "I" = M.I
Line 61 col 4 IdentifierName "c" = M.C
Line 61 col 8 ObjectCreationExpression "new M.C()" = M.C
Line 61 col 12 MemberAccessExpression "M.C" = new() => M.C
Line 61 col 12 IdentifierName "M" = { InnerMod: { someExportedInnerFunc(): number; }; E: { A: M.E; B: M.E; C: M.E; [x: number]: string; }; x: number; exported_var: any; C: new() => M.C; c: number; meb: M.E; }
Line 61 col 14 IdentifierName "C" = new() => M.C
Line 62 col 4 IdentifierName "z" = number
Line 62 col 8 MemberAccessExpression "M.x" = number
Line 62 col 8 IdentifierName "M" = { InnerMod: { someExportedInnerFunc(): number; }; E: { A: M.E; B: M.E; C: M.E; [x: number]: string; }; x: number; exported_var: any; C: new() => M.C; c: number; meb: M.E; }
Line 62 col 10 IdentifierName "x" = number
Line 63 col 4 IdentifierName "alpha" = M.E
Line 63 col 12 MemberAccessExpression "M.E.A" = M.E
Line 63 col 12 MemberAccessExpression "M.E" = { A: M.E; B: M.E; C: M.E; [x: number]: string; }
Line 63 col 12 IdentifierName "M" = { InnerMod: { someExportedInnerFunc(): number; }; E: { A: M.E; B: M.E; C: M.E; [x: number]: string; }; x: number; exported_var: any; C: new() => M.C; c: number; meb: M.E; }
Line 63 col 14 IdentifierName "E" = { A: M.E; B: M.E; C: M.E; [x: number]: string; }
Line 63 col 16 IdentifierName "A" = M.E
Line 64 col 4 IdentifierName "omega" = any
Line 64 col 12 MemberAccessExpression "M.exported_var" = any
Line 64 col 12 IdentifierName "M" = { InnerMod: { someExportedInnerFunc(): number; }; E: { A: M.E; B: M.E; C: M.E; [x: number]: string; }; x: number; exported_var: any; C: new() => M.C; c: number; meb: M.E; }
Line 64 col 14 IdentifierName "exported_var" = any
Line 65 col 0 InvocationExpression "c.someMethodThatCallsAnOuterMethod()" = string
Line 65 col 0 MemberAccessExpression "c.someMethodThatCallsAnOuterMethod" = () => string
Line 65 col 0 IdentifierName "c" = M.C
Line 65 col 2 IdentifierName "someMethodThatCallsAnOuterMethod" = () => string