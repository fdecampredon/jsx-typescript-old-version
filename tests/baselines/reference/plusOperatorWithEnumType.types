=== tests/cases/compiler/plusOperatorWithEnumType.ts ===
Line 2 col 5 IdentifierName "ENUM" = ENUM
Line 3 col 5 IdentifierName "ENUM1" = ENUM1
Line 6 col 4 IdentifierName "ResultIsNumber1" = number
Line 6 col 22 PlusExpression "+ENUM" = number
Line 6 col 23 IdentifierName "ENUM" = typeof ENUM
Line 7 col 4 IdentifierName "ResultIsNumber2" = number
Line 7 col 22 PlusExpression "+ENUM1" = number
Line 7 col 23 IdentifierName "ENUM1" = typeof ENUM1
Line 10 col 4 IdentifierName "ResultIsNumber3" = number
Line 10 col 22 PlusExpression "+ENUM1[0]" = number
Line 10 col 23 ElementAccessExpression "ENUM1[0]" = string
Line 10 col 23 IdentifierName "ENUM1" = typeof ENUM1
Line 11 col 4 IdentifierName "ResultIsNumber4" = number
Line 11 col 22 PlusExpression "+(ENUM[0] + ENUM1[1])" = number
Line 11 col 23 ParenthesizedExpression "(ENUM[0] + ENUM1[1])" = string
Line 11 col 24 AddExpression "ENUM[0] + ENUM1[1]" = string
Line 11 col 24 ElementAccessExpression "ENUM[0]" = string
Line 11 col 24 IdentifierName "ENUM" = typeof ENUM
Line 11 col 34 ElementAccessExpression "ENUM1[1]" = ENUM1
Line 11 col 34 IdentifierName "ENUM1" = typeof ENUM1
Line 12 col 0 PlusExpression "// miss assignment operators
+ENUM" = number
Line 14 col 1 IdentifierName "ENUM" = typeof ENUM
Line 15 col 0 PlusExpression "+ENUM1" = number
Line 15 col 1 IdentifierName "ENUM1" = typeof ENUM1
Line 16 col 0 PlusExpression "+ENUM1[1]" = number
Line 16 col 1 ElementAccessExpression "ENUM1[1]" = ENUM1
Line 16 col 1 IdentifierName "ENUM1" = typeof ENUM1
Line 17 col 0 CommaExpression "+ENUM, ENUM1" = typeof ENUM1
Line 17 col 0 PlusExpression "+ENUM" = number
Line 17 col 1 IdentifierName "ENUM" = typeof ENUM
Line 17 col 7 IdentifierName "ENUM1" = typeof ENUM1