=== tests/cases/compiler/conditionalExpressions2.ts ===
Line 0 col 4 IdentifierName "a" = number
Line 0 col 8 ConditionalExpression "false ? 1 : null" = number
Line 1 col 4 IdentifierName "b" = number
Line 1 col 8 ConditionalExpression "false ? undefined : 0" = number
Line 1 col 16 IdentifierName "undefined" = undefined
Line 2 col 4 IdentifierName "c" = number
Line 2 col 8 ConditionalExpression "false ? 1 : 0" = number
Line 3 col 4 IdentifierName "d" = boolean
Line 3 col 8 ConditionalExpression "false ? false : true" = boolean
Line 4 col 4 IdentifierName "e" = string
Line 4 col 8 ConditionalExpression "false ? "foo" : "bar"" = string
Line 5 col 4 IdentifierName "f" = any
Line 5 col 8 ConditionalExpression "false ? null : undefined" = undefined
Line 5 col 23 IdentifierName "undefined" = undefined
Line 6 col 4 IdentifierName "g" = { g: number; }
Line 6 col 8 ConditionalExpression "true ? {g:5} : null" = { g: number; }
Line 6 col 15 ObjectLiteralExpression "{g:5}" = { g: number; }
Line 6 col 16 IdentifierName "g" = number
Line 7 col 4 IdentifierName "h" = { h: number; }[]
Line 7 col 8 ArrayLiteralExpression "[{h:5}, null]" = { h: number; }[]
Line 7 col 9 ObjectLiteralExpression "{h:5}" = { h: number; }
Line 7 col 10 IdentifierName "h" = number
Line 8 col 9 IdentifierName "i" = () => { x: number; }
Line 8 col 34 ObjectLiteralExpression "{ x: 5 }" = { x: number; }
Line 8 col 36 IdentifierName "x" = number