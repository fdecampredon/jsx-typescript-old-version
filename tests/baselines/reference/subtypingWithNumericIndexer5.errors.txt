==== tests/cases/compiler/subtypingWithNumericIndexer5.ts (4 errors) ====
    // Derived type indexer must be subtype of base type indexer
    
    interface Base { foo: string; }
    interface Derived extends Base { bar: string; }
    interface Derived2 extends Derived { baz: string; }
    
    interface A {
        [x: number]: Derived;
    }
    
    class B implements A {
          ~
!!! subtypingWithNumericIndexer5.ts(11,7): error TS2137: Class B declares interface A but does not implement it:
!!! 	Index signatures of types 'B' and 'A' are incompatible:
!!! 		Type 'Base' is missing property 'bar' from type 'Derived'.
        [x: string]: Base; // error
    }
    
    class B2 implements A {
        [x: string]: Derived2; // ok
    }
    
    module Generics {
        interface A<T extends Base> {
            [x: number]: T;
        }
    
        class B implements A<Base> {
            [x: string]: Derived; // ok
        }
    
        class B2 implements A<Derived> {
            [x: string]: Derived2; // ok
        }
    
        class B3<T extends Derived> implements A<T> {
              ~~
!!! subtypingWithNumericIndexer5.ts(32,11): error TS2137: Class B3<T> declares interface A<T> but does not implement it:
!!! 	Index signatures of types 'B3<T>' and 'A<T>' are incompatible.
            [x: string]: Base; // error
        }
    
        class B4<T extends Derived> implements A<T> {
              ~~
!!! subtypingWithNumericIndexer5.ts(36,11): error TS2137: Class B4<T> declares interface A<T> but does not implement it:
!!! 	Index signatures of types 'B4<T>' and 'A<T>' are incompatible.
            [x: string]: Derived; // error
        }
    
        class B5<T extends Derived2> implements A<T> {
              ~~
!!! subtypingWithNumericIndexer5.ts(40,11): error TS2137: Class B5<T> declares interface A<T> but does not implement it:
!!! 	Index signatures of types 'B5<T>' and 'A<T>' are incompatible.
            [x: string]: Derived2; // error
        }
    }