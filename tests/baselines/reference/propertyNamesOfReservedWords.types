=== tests/cases/compiler/propertyNamesOfReservedWords.ts ===
Line 0 col 6 IdentifierName "C" = C
Line 1 col 0 IdentifierName "abstract" = any
Line 2 col 0 IdentifierName "as" = any
Line 3 col 0 IdentifierName "boolean" = any
Line 4 col 0 IdentifierName "break" = any
Line 5 col 0 IdentifierName "byte" = any
Line 6 col 0 IdentifierName "case" = any
Line 7 col 0 IdentifierName "catch" = any
Line 8 col 0 IdentifierName "char" = any
Line 9 col 0 IdentifierName "class" = any
Line 10 col 0 IdentifierName "continue" = any
Line 11 col 0 IdentifierName "const" = any
Line 12 col 0 IdentifierName "debugger" = any
Line 13 col 0 IdentifierName "default" = any
Line 14 col 0 IdentifierName "delete" = any
Line 15 col 0 IdentifierName "do" = any
Line 16 col 0 IdentifierName "double" = any
Line 17 col 0 IdentifierName "else" = any
Line 18 col 0 IdentifierName "enum" = any
Line 19 col 0 IdentifierName "export" = any
Line 20 col 0 IdentifierName "extends" = any
Line 21 col 0 IdentifierName "false" = any
Line 22 col 0 IdentifierName "final" = any
Line 23 col 0 IdentifierName "finally" = any
Line 24 col 0 IdentifierName "float" = any
Line 25 col 0 IdentifierName "for" = any
Line 26 col 0 IdentifierName "function" = any
Line 27 col 0 IdentifierName "goto" = any
Line 28 col 0 IdentifierName "if" = any
Line 29 col 0 IdentifierName "implements" = any
Line 30 col 0 IdentifierName "import" = any
Line 31 col 0 IdentifierName "in" = any
Line 32 col 0 IdentifierName "instanceof" = any
Line 33 col 0 IdentifierName "int" = any
Line 34 col 0 IdentifierName "interface" = any
Line 35 col 0 IdentifierName "is" = any
Line 36 col 0 IdentifierName "long" = any
Line 37 col 0 IdentifierName "namespace" = any
Line 38 col 0 IdentifierName "native" = any
Line 39 col 0 IdentifierName "new" = any
Line 40 col 0 IdentifierName "null" = any
Line 41 col 0 IdentifierName "package" = any
Line 42 col 0 IdentifierName "private" = any
Line 43 col 0 IdentifierName "protected" = any
Line 44 col 0 IdentifierName "public" = any
Line 45 col 0 IdentifierName "return" = any
Line 46 col 0 IdentifierName "short" = any
Line 47 col 0 IdentifierName "static" = any
Line 48 col 0 IdentifierName "super" = any
Line 49 col 0 IdentifierName "switch" = any
Line 50 col 0 IdentifierName "synchronized" = any
Line 51 col 0 IdentifierName "this" = any
Line 52 col 0 IdentifierName "throw" = any
Line 53 col 0 IdentifierName "throws" = any
Line 54 col 0 IdentifierName "transient" = any
Line 55 col 0 IdentifierName "true" = any
Line 56 col 0 IdentifierName "try" = any
Line 57 col 0 IdentifierName "typeof" = any
Line 58 col 0 IdentifierName "use" = any
Line 59 col 0 IdentifierName "var" = any
Line 60 col 0 IdentifierName "void" = any
Line 61 col 0 IdentifierName "volatile" = any
Line 62 col 0 IdentifierName "while" = any
Line 63 col 0 IdentifierName "with" = any
Line 65 col 4 IdentifierName "c" = C
Line 65 col 7 IdentifierName "C" = C
Line 66 col 4 IdentifierName "r1" = any
Line 66 col 9 MemberAccessExpression "c.abstract" = any
Line 66 col 9 IdentifierName "c" = C
Line 66 col 11 IdentifierName "abstract" = any
Line 67 col 4 IdentifierName "r2" = any
Line 67 col 9 MemberAccessExpression "c.as" = any
Line 67 col 9 IdentifierName "c" = C
Line 67 col 11 IdentifierName "as" = any
Line 69 col 10 IdentifierName "I" = I
Line 70 col 0 IdentifierName "abstract" = any
Line 71 col 0 IdentifierName "as" = any
Line 72 col 0 IdentifierName "boolean" = any
Line 73 col 0 IdentifierName "break" = any
Line 74 col 0 IdentifierName "byte" = any
Line 75 col 0 IdentifierName "case" = any
Line 76 col 0 IdentifierName "catch" = any
Line 77 col 0 IdentifierName "char" = any
Line 78 col 0 IdentifierName "class" = any
Line 79 col 0 IdentifierName "continue" = any
Line 80 col 0 IdentifierName "const" = any
Line 81 col 0 IdentifierName "debugger" = any
Line 82 col 0 IdentifierName "default" = any
Line 83 col 0 IdentifierName "delete" = any
Line 84 col 0 IdentifierName "do" = any
Line 85 col 0 IdentifierName "double" = any
Line 86 col 0 IdentifierName "else" = any
Line 87 col 0 IdentifierName "enum" = any
Line 88 col 0 IdentifierName "export" = any
Line 89 col 0 IdentifierName "extends" = any
Line 90 col 0 IdentifierName "false" = any
Line 91 col 0 IdentifierName "final" = any
Line 92 col 0 IdentifierName "finally" = any
Line 93 col 0 IdentifierName "float" = any
Line 94 col 0 IdentifierName "for" = any
Line 95 col 0 IdentifierName "function" = any
Line 96 col 0 IdentifierName "goto" = any
Line 97 col 0 IdentifierName "if" = any
Line 98 col 0 IdentifierName "implements" = any
Line 99 col 0 IdentifierName "import" = any
Line 100 col 0 IdentifierName "in" = any
Line 101 col 0 IdentifierName "instanceof" = any
Line 102 col 0 IdentifierName "int" = any
Line 103 col 0 IdentifierName "interface" = any
Line 104 col 0 IdentifierName "is" = any
Line 105 col 0 IdentifierName "long" = any
Line 106 col 0 IdentifierName "namespace" = any
Line 107 col 0 IdentifierName "native" = any
Line 108 col 0 IdentifierName "new" = any
Line 109 col 0 IdentifierName "null" = any
Line 110 col 0 IdentifierName "package" = any
Line 111 col 0 IdentifierName "private" = any
Line 112 col 0 IdentifierName "protected" = any
Line 113 col 0 IdentifierName "public" = any
Line 114 col 0 IdentifierName "return" = any
Line 115 col 0 IdentifierName "short" = any
Line 116 col 0 IdentifierName "static" = any
Line 117 col 0 IdentifierName "super" = any
Line 118 col 0 IdentifierName "switch" = any
Line 119 col 0 IdentifierName "synchronized" = any
Line 120 col 0 IdentifierName "this" = any
Line 121 col 0 IdentifierName "throw" = any
Line 122 col 0 IdentifierName "throws" = any
Line 123 col 0 IdentifierName "transient" = any
Line 124 col 0 IdentifierName "true" = any
Line 125 col 0 IdentifierName "try" = any
Line 126 col 0 IdentifierName "typeof" = any
Line 127 col 0 IdentifierName "use" = any
Line 128 col 0 IdentifierName "var" = any
Line 129 col 0 IdentifierName "void" = any
Line 130 col 0 IdentifierName "volatile" = any
Line 131 col 0 IdentifierName "while" = any
Line 132 col 0 IdentifierName "with" = any
Line 135 col 4 IdentifierName "i" = I
Line 135 col 7 IdentifierName "I" = I
Line 136 col 4 IdentifierName "r3" = any
Line 136 col 9 MemberAccessExpression "i.abstract" = any
Line 136 col 9 IdentifierName "i" = I
Line 136 col 11 IdentifierName "abstract" = any
Line 137 col 4 IdentifierName "r4" = any
Line 137 col 9 MemberAccessExpression "i.as" = any
Line 137 col 9 IdentifierName "i" = I
Line 137 col 11 IdentifierName "as" = any
Line 139 col 4 IdentifierName "a" = { abstract: any; as: any; boolean: any; break: any; byte: any; case: any; catch: any; char: any; class: any; continue: any; const: any; debugger: any; default: any; delete: any; do: any; double: any; else: any; enum: any; export: any; extends: any; false: any; final: any; finally: any; float: any; for: any; function: any; goto: any; if: any; implements: any; import: any; in: any; instanceof: any; int: any; interface: any; is: any; long: any; namespace: any; native: any; new: any; null: any; package: any; private: any; protected: any; public: any; return: any; short: any; static: any; super: any; switch: any; synchronized: any; this: any; throw: any; throws: any; transient: any; true: any; try: any; typeof: any; use: any; var: any; void: any; volatile: any; while: any; with: any; }
Line 140 col 0 IdentifierName "abstract" = any
Line 141 col 0 IdentifierName "as" = any
Line 142 col 0 IdentifierName "boolean" = any
Line 143 col 0 IdentifierName "break" = any
Line 144 col 0 IdentifierName "byte" = any
Line 145 col 0 IdentifierName "case" = any
Line 146 col 0 IdentifierName "catch" = any
Line 147 col 0 IdentifierName "char" = any
Line 148 col 0 IdentifierName "class" = any
Line 149 col 0 IdentifierName "continue" = any
Line 150 col 0 IdentifierName "const" = any
Line 151 col 0 IdentifierName "debugger" = any
Line 152 col 0 IdentifierName "default" = any
Line 153 col 0 IdentifierName "delete" = any
Line 154 col 0 IdentifierName "do" = any
Line 155 col 0 IdentifierName "double" = any
Line 156 col 0 IdentifierName "else" = any
Line 157 col 0 IdentifierName "enum" = any
Line 158 col 0 IdentifierName "export" = any
Line 159 col 0 IdentifierName "extends" = any
Line 160 col 0 IdentifierName "false" = any
Line 161 col 0 IdentifierName "final" = any
Line 162 col 0 IdentifierName "finally" = any
Line 163 col 0 IdentifierName "float" = any
Line 164 col 0 IdentifierName "for" = any
Line 165 col 0 IdentifierName "function" = any
Line 166 col 0 IdentifierName "goto" = any
Line 167 col 0 IdentifierName "if" = any
Line 168 col 0 IdentifierName "implements" = any
Line 169 col 0 IdentifierName "import" = any
Line 170 col 0 IdentifierName "in" = any
Line 171 col 0 IdentifierName "instanceof" = any
Line 172 col 0 IdentifierName "int" = any
Line 173 col 0 IdentifierName "interface" = any
Line 174 col 0 IdentifierName "is" = any
Line 175 col 0 IdentifierName "long" = any
Line 176 col 0 IdentifierName "namespace" = any
Line 177 col 0 IdentifierName "native" = any
Line 178 col 0 IdentifierName "new" = any
Line 179 col 0 IdentifierName "null" = any
Line 180 col 0 IdentifierName "package" = any
Line 181 col 0 IdentifierName "private" = any
Line 182 col 0 IdentifierName "protected" = any
Line 183 col 0 IdentifierName "public" = any
Line 184 col 0 IdentifierName "return" = any
Line 185 col 0 IdentifierName "short" = any
Line 186 col 0 IdentifierName "static" = any
Line 187 col 0 IdentifierName "super" = any
Line 188 col 0 IdentifierName "switch" = any
Line 189 col 0 IdentifierName "synchronized" = any
Line 190 col 0 IdentifierName "this" = any
Line 191 col 0 IdentifierName "throw" = any
Line 192 col 0 IdentifierName "throws" = any
Line 193 col 0 IdentifierName "transient" = any
Line 194 col 0 IdentifierName "true" = any
Line 195 col 0 IdentifierName "try" = any
Line 196 col 0 IdentifierName "typeof" = any
Line 197 col 0 IdentifierName "use" = any
Line 198 col 0 IdentifierName "var" = any
Line 199 col 0 IdentifierName "void" = any
Line 200 col 0 IdentifierName "volatile" = any
Line 201 col 0 IdentifierName "while" = any
Line 202 col 0 IdentifierName "with" = any
Line 205 col 4 IdentifierName "r5" = any
Line 205 col 9 MemberAccessExpression "a.abstract" = any
Line 205 col 9 IdentifierName "a" = { abstract: any; as: any; boolean: any; break: any; byte: any; case: any; catch: any; char: any; class: any; continue: any; const: any; debugger: any; default: any; delete: any; do: any; double: any; else: any; enum: any; export: any; extends: any; false: any; final: any; finally: any; float: any; for: any; function: any; goto: any; if: any; implements: any; import: any; in: any; instanceof: any; int: any; interface: any; is: any; long: any; namespace: any; native: any; new: any; null: any; package: any; private: any; protected: any; public: any; return: any; short: any; static: any; super: any; switch: any; synchronized: any; this: any; throw: any; throws: any; transient: any; true: any; try: any; typeof: any; use: any; var: any; void: any; volatile: any; while: any; with: any; }
Line 205 col 11 IdentifierName "abstract" = any
Line 206 col 4 IdentifierName "r6" = any
Line 206 col 9 MemberAccessExpression "a.as" = any
Line 206 col 9 IdentifierName "a" = { abstract: any; as: any; boolean: any; break: any; byte: any; case: any; catch: any; char: any; class: any; continue: any; const: any; debugger: any; default: any; delete: any; do: any; double: any; else: any; enum: any; export: any; extends: any; false: any; final: any; finally: any; float: any; for: any; function: any; goto: any; if: any; implements: any; import: any; in: any; instanceof: any; int: any; interface: any; is: any; long: any; namespace: any; native: any; new: any; null: any; package: any; private: any; protected: any; public: any; return: any; short: any; static: any; super: any; switch: any; synchronized: any; this: any; throw: any; throws: any; transient: any; true: any; try: any; typeof: any; use: any; var: any; void: any; volatile: any; while: any; with: any; }
Line 206 col 11 IdentifierName "as" = any
Line 208 col 5 IdentifierName "E" = E
Line 209 col 0 IdentifierName "abstract" = E
Line 210 col 0 IdentifierName "as" = E
Line 211 col 0 IdentifierName "boolean" = E
Line 212 col 0 IdentifierName "break" = E
Line 213 col 0 IdentifierName "byte" = E
Line 214 col 0 IdentifierName "case" = E
Line 215 col 0 IdentifierName "catch" = E
Line 216 col 0 IdentifierName "char" = E
Line 217 col 0 IdentifierName "class" = E
Line 218 col 0 IdentifierName "continue" = E
Line 219 col 0 IdentifierName "const" = E
Line 220 col 0 IdentifierName "debugger" = E
Line 221 col 0 IdentifierName "default" = E
Line 222 col 0 IdentifierName "delete" = E
Line 223 col 0 IdentifierName "do" = E
Line 224 col 0 IdentifierName "double" = E
Line 225 col 0 IdentifierName "else" = E
Line 226 col 0 IdentifierName "enum" = E
Line 227 col 0 IdentifierName "export" = E
Line 228 col 0 IdentifierName "extends" = E
Line 229 col 0 IdentifierName "false" = E
Line 230 col 0 IdentifierName "final" = E
Line 231 col 0 IdentifierName "finally" = E
Line 232 col 0 IdentifierName "float" = E
Line 233 col 0 IdentifierName "for" = E
Line 234 col 0 IdentifierName "function" = E
Line 235 col 0 IdentifierName "goto" = E
Line 236 col 0 IdentifierName "if" = E
Line 237 col 0 IdentifierName "implements" = E
Line 238 col 0 IdentifierName "import" = E
Line 239 col 0 IdentifierName "in" = E
Line 240 col 0 IdentifierName "instanceof" = E
Line 241 col 0 IdentifierName "int" = E
Line 242 col 0 IdentifierName "interface" = E
Line 243 col 0 IdentifierName "is" = E
Line 244 col 0 IdentifierName "long" = E
Line 245 col 0 IdentifierName "namespace" = E
Line 246 col 0 IdentifierName "native" = E
Line 247 col 0 IdentifierName "new" = E
Line 248 col 0 IdentifierName "null" = E
Line 249 col 0 IdentifierName "package" = E
Line 250 col 0 IdentifierName "private" = E
Line 251 col 0 IdentifierName "protected" = E
Line 252 col 0 IdentifierName "public" = E
Line 253 col 0 IdentifierName "return" = E
Line 254 col 0 IdentifierName "short" = E
Line 255 col 0 IdentifierName "static" = E
Line 256 col 0 IdentifierName "super" = E
Line 257 col 0 IdentifierName "switch" = E
Line 258 col 0 IdentifierName "synchronized" = E
Line 259 col 0 IdentifierName "this" = E
Line 260 col 0 IdentifierName "throw" = E
Line 261 col 0 IdentifierName "throws" = E
Line 262 col 0 IdentifierName "transient" = E
Line 263 col 0 IdentifierName "true" = E
Line 264 col 0 IdentifierName "try" = E
Line 265 col 0 IdentifierName "typeof" = E
Line 266 col 0 IdentifierName "use" = E
Line 267 col 0 IdentifierName "var" = E
Line 268 col 0 IdentifierName "void" = E
Line 269 col 0 IdentifierName "volatile" = E
Line 270 col 0 IdentifierName "while" = E
Line 271 col 0 IdentifierName "with" = E
Line 274 col 4 IdentifierName "r7" = E
Line 274 col 9 MemberAccessExpression "E.abstract" = E
Line 274 col 9 IdentifierName "E" = { abstract: E; as: E; boolean: E; break: E; byte: E; case: E; catch: E; char: E; class: E; continue: E; const: E; debugger: E; default: E; delete: E; do: E; double: E; else: E; enum: E; export: E; extends: E; false: E; final: E; finally: E; float: E; for: E; function: E; goto: E; if: E; implements: E; import: E; in: E; instanceof: E; int: E; interface: E; is: E; long: E; namespace: E; native: E; new: E; null: E; package: E; private: E; protected: E; public: E; return: E; short: E; static: E; super: E; switch: E; synchronized: E; this: E; throw: E; throws: E; transient: E; true: E; try: E; typeof: E; use: E; var: E; void: E; volatile: E; while: E; with: E; [x: number]: string; }
Line 274 col 11 IdentifierName "abstract" = E
Line 275 col 4 IdentifierName "r8" = E
Line 275 col 9 MemberAccessExpression "E.as" = E
Line 275 col 9 IdentifierName "E" = { abstract: E; as: E; boolean: E; break: E; byte: E; case: E; catch: E; char: E; class: E; continue: E; const: E; debugger: E; default: E; delete: E; do: E; double: E; else: E; enum: E; export: E; extends: E; false: E; final: E; finally: E; float: E; for: E; function: E; goto: E; if: E; implements: E; import: E; in: E; instanceof: E; int: E; interface: E; is: E; long: E; namespace: E; native: E; new: E; null: E; package: E; private: E; protected: E; public: E; return: E; short: E; static: E; super: E; switch: E; synchronized: E; this: E; throw: E; throws: E; transient: E; true: E; try: E; typeof: E; use: E; var: E; void: E; volatile: E; while: E; with: E; [x: number]: string; }
Line 275 col 11 IdentifierName "as" = E