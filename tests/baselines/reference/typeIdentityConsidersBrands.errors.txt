==== tests/cases/compiler/typeIdentityConsidersBrands.ts (3 errors) ====
    class X{
          name: string;
    }
    
    class Y{
          name: string;
    }
    
    class X_1 {
        private name: string;
    }
    
    class Y_1 {
        private name: string;
    }
    
    function foo(arg: X){}
     
    var a = new Y();
    var b = new X();
     
    a = b; // ok
    foo(a); // ok
    
    var a2 = new Y_1();
    var b2 = new X_1();
    
    function foo2(arg: X_1) { }
    
    a2 = b2; // should error
    ~~
!!! typeIdentityConsidersBrands.ts(30,1): error TS2012: Type 'X_1' is not assignable to type 'Y_1':
!!! 	Types 'X_1' and 'Y_1' define property 'name' as private.
    foo2(a2); // should error
    ~~~~
!!! typeIdentityConsidersBrands.ts(31,1): error TS2082: Supplied parameters do not match any signature of call target:
!!! 	Types 'Y_1' and 'X_1' define property 'name' as private.
    ~~~~
!!! typeIdentityConsidersBrands.ts(31,1): error TS2087: Could not select overload for 'call' expression.
    