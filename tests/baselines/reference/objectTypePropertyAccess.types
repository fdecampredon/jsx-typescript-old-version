=== tests/cases/compiler/objectTypePropertyAccess.ts ===
Line 1 col 6 IdentifierName "C" = C
Line 2 col 0 IdentifierName "foo" = string
Line 5 col 4 IdentifierName "c" = C
Line 5 col 7 IdentifierName "C" = C
Line 6 col 4 IdentifierName "r1" = string
Line 6 col 9 InvocationExpression "c.toString()" = string
Line 6 col 9 MemberAccessExpression "c.toString" = () => string
Line 6 col 9 IdentifierName "c" = C
Line 6 col 11 IdentifierName "toString" = () => string
Line 7 col 4 IdentifierName "r2" = string
Line 7 col 9 InvocationExpression "c['toString']()" = string
Line 7 col 9 ElementAccessExpression "c['toString']" = () => string
Line 7 col 9 IdentifierName "c" = C
Line 8 col 4 IdentifierName "r3" = string
Line 8 col 9 MemberAccessExpression "c.foo" = string
Line 8 col 9 IdentifierName "c" = C
Line 8 col 11 IdentifierName "foo" = string
Line 9 col 4 IdentifierName "r4" = string
Line 9 col 9 ElementAccessExpression "c['foo']" = string
Line 9 col 9 IdentifierName "c" = C
Line 11 col 10 IdentifierName "I" = I
Line 12 col 0 IdentifierName "bar" = string
Line 14 col 4 IdentifierName "i" = I
Line 14 col 7 IdentifierName "I" = I
Line 15 col 4 IdentifierName "r4" = string
Line 15 col 9 InvocationExpression "i.toString()" = string
Line 15 col 9 MemberAccessExpression "i.toString" = () => string
Line 15 col 9 IdentifierName "i" = I
Line 15 col 11 IdentifierName "toString" = () => string
Line 16 col 4 IdentifierName "r5" = string
Line 16 col 9 InvocationExpression "i['toString']()" = string
Line 16 col 9 ElementAccessExpression "i['toString']" = () => string
Line 16 col 9 IdentifierName "i" = I
Line 17 col 4 IdentifierName "r6" = string
Line 17 col 9 MemberAccessExpression "i.bar" = string
Line 17 col 9 IdentifierName "i" = I
Line 17 col 11 IdentifierName "bar" = string
Line 18 col 4 IdentifierName "r7" = string
Line 18 col 9 ElementAccessExpression "i['bar']" = string
Line 18 col 9 IdentifierName "i" = I
Line 20 col 4 IdentifierName "a" = { foo: string; }
Line 20 col 8 ObjectLiteralExpression "{
    foo: ''
}" = { foo: string; }
Line 21 col 0 IdentifierName "foo" = string
Line 24 col 4 IdentifierName "r8" = string
Line 24 col 9 InvocationExpression "a.toString()" = string
Line 24 col 9 MemberAccessExpression "a.toString" = () => string
Line 24 col 9 IdentifierName "a" = { foo: string; }
Line 24 col 11 IdentifierName "toString" = () => string
Line 25 col 4 IdentifierName "r9" = string
Line 25 col 9 InvocationExpression "a['toString']()" = string
Line 25 col 9 ElementAccessExpression "a['toString']" = () => string
Line 25 col 9 IdentifierName "a" = { foo: string; }
Line 26 col 4 IdentifierName "r10" = string
Line 26 col 10 MemberAccessExpression "a.foo" = string
Line 26 col 10 IdentifierName "a" = { foo: string; }
Line 26 col 12 IdentifierName "foo" = string
Line 27 col 4 IdentifierName "r11" = string
Line 27 col 10 ElementAccessExpression "a['foo']" = string
Line 27 col 10 IdentifierName "a" = { foo: string; }