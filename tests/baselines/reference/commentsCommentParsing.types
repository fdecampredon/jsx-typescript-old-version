=== tests/cases/compiler/commentsCommentParsing.ts ===
Line 2 col 9 IdentifierName "simple" = () => void
Line 4 col 0 InvocationExpression "simple()" = void
Line 4 col 0 IdentifierName "simple" = () => void
Line 10 col 9 IdentifierName "multiLine" = () => void
Line 12 col 0 InvocationExpression "multiLine()" = void
Line 12 col 0 IdentifierName "multiLine" = () => void
Line 15 col 9 IdentifierName "jsDocSingleLine" = () => void
Line 17 col 0 InvocationExpression "jsDocSingleLine()" = void
Line 17 col 0 IdentifierName "jsDocSingleLine" = () => void
Line 23 col 9 IdentifierName "jsDocMultiLine" = () => void
Line 25 col 0 InvocationExpression "jsDocMultiLine()" = void
Line 25 col 0 IdentifierName "jsDocMultiLine" = () => void
Line 32 col 9 IdentifierName "jsDocMultiLineMerge" = () => void
Line 34 col 0 InvocationExpression "jsDocMultiLineMerge()" = void
Line 34 col 0 IdentifierName "jsDocMultiLineMerge" = () => void
Line 39 col 9 IdentifierName "jsDocMixedComments1" = () => void
Line 41 col 0 InvocationExpression "jsDocMixedComments1()" = void
Line 41 col 0 IdentifierName "jsDocMixedComments1" = () => void
Line 45 col 9 IdentifierName "jsDocMixedComments2" = () => void
Line 47 col 0 InvocationExpression "jsDocMixedComments2()" = void
Line 47 col 0 IdentifierName "jsDocMixedComments2" = () => void
Line 51 col 9 IdentifierName "jsDocMixedComments3" = () => void
Line 53 col 0 InvocationExpression "jsDocMixedComments3()" = void
Line 53 col 0 IdentifierName "jsDocMixedComments3" = () => void
Line 58 col 9 IdentifierName "jsDocMixedComments4" = () => void
Line 60 col 0 InvocationExpression "jsDocMixedComments4()" = void
Line 60 col 0 IdentifierName "jsDocMixedComments4" = () => void
Line 66 col 9 IdentifierName "jsDocMixedComments5" = () => void
Line 68 col 0 InvocationExpression "jsDocMixedComments5()" = void
Line 68 col 0 IdentifierName "jsDocMixedComments5" = () => void
Line 75 col 9 IdentifierName "jsDocMixedComments6" = () => void
Line 77 col 0 InvocationExpression "jsDocMixedComments6()" = void
Line 77 col 0 IdentifierName "jsDocMixedComments6" = () => void
Line 80 col 9 IdentifierName "noHelpComment1" = () => void
Line 82 col 0 InvocationExpression "noHelpComment1()" = void
Line 82 col 0 IdentifierName "noHelpComment1" = () => void
Line 85 col 9 IdentifierName "noHelpComment2" = () => void
Line 87 col 0 InvocationExpression "noHelpComment2()" = void
Line 87 col 0 IdentifierName "noHelpComment2" = () => void
Line 89 col 9 IdentifierName "noHelpComment3" = () => void
Line 91 col 0 InvocationExpression "noHelpComment3()" = void
Line 91 col 0 IdentifierName "noHelpComment3" = () => void
Line 96 col 9 IdentifierName "sum" = (a: number, b: number) => number
Line 96 col 13 IdentifierName "a" = number
Line 96 col 24 IdentifierName "b" = number
Line 97 col 11 AddExpression "a + b" = number
Line 97 col 11 IdentifierName "a" = number
Line 97 col 15 IdentifierName "b" = number
Line 99 col 0 InvocationExpression "sum(10, 20)" = number
Line 99 col 0 IdentifierName "sum" = (a: number, b: number) => number
Line 107 col 9 IdentifierName "multiply" = (a: number, b: number, c?: number, d?: any, e?: any) => void
Line 107 col 18 IdentifierName "a" = number
Line 107 col 29 IdentifierName "b" = number
Line 107 col 40 IdentifierName "c" = number
Line 107 col 52 IdentifierName "d" = any
Line 107 col 56 IdentifierName "e" = any
Line 112 col 9 IdentifierName "f1" = { (a: number): any; (b: string): any; }
Line 112 col 12 IdentifierName "a" = number
Line 113 col 9 IdentifierName "f1" = { (a: number): any; (b: string): any; }
Line 113 col 12 IdentifierName "b" = string
Line 115 col 9 IdentifierName "f1" = { (a: number): any; (b: string): any; }
Line 115 col 12 IdentifierName "aOrb" = any
Line 115 col 18 IdentifierName "opt" = any
Line 116 col 11 IdentifierName "aOrb" = any
Line 126 col 9 IdentifierName "subtract" = (a: number, b: number, c?: () => string, d?: () => string, e?: () => string, f?: () => string) => void
Line 126 col 18 IdentifierName "a" = number
Line 126 col 29 IdentifierName "b" = number
Line 126 col 40 IdentifierName "c" = () => string
Line 126 col 58 IdentifierName "d" = () => string
Line 126 col 76 IdentifierName "e" = () => string
Line 126 col 94 IdentifierName "f" = () => string
Line 133 col 9 IdentifierName "square" = (a: number) => number
Line 133 col 16 IdentifierName "a" = number
Line 134 col 11 MultiplyExpression "a * a" = number
Line 134 col 11 IdentifierName "a" = number
Line 134 col 15 IdentifierName "a" = number
Line 141 col 9 IdentifierName "divide" = (a: number, b: number) => void
Line 141 col 16 IdentifierName "a" = number
Line 141 col 27 IdentifierName "b" = number
Line 147 col 9 IdentifierName "jsDocParamTest" = (a: number, b: number, c: number, d: number) => number
Line 147 col 59 IdentifierName "a" = number
Line 147 col 105 IdentifierName "b" = number
Line 147 col 116 IdentifierName "c" = number
Line 147 col 127 IdentifierName "d" = number
Line 148 col 11 AddExpression "a + b + c + d" = number
Line 148 col 11 AddExpression "a + b + c" = number
Line 148 col 11 AddExpression "a + b" = number
Line 148 col 11 IdentifierName "a" = number
Line 148 col 15 IdentifierName "b" = number
Line 148 col 19 IdentifierName "c" = number
Line 148 col 23 IdentifierName "d" = number
Line 152 col 6 IdentifierName "NoQuickInfoClass" = NoQuickInfoClass