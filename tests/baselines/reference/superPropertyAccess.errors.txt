==== tests/cases/compiler/superPropertyAccess.ts (6 errors) ====
    
    class MyBase {
        m1(a: string) { return a; }
        private p1() { }
        m2: () => void = function () { }
        d1: number = 42;
        private d2: number = 42;
        get value() {return 0 }
        set value(v: number) { }
    }
    
    
    class MyDerived extends MyBase {
    
        foo() {
            super.m1("hi");                                     // Should be allowed, method on base prototype
    
            var l2 = super.m1.bind(this);                       // Should be allowed, can access properties as well as invoke
    
            var x: (a: string) => string = super.m1;            // Should be allowed, can assign to var with compatible signature
    
            super.m2.bind(this);                                // Should error, instance property, not a public instance member function
                  ~~
!!! superPropertyAccess.ts(22,15): error TS2166: Only public methods of the base class are accessible via the 'super' keyword.
    
            super.p1();                                         // Should error, private not public instance member function
                  ~~
!!! superPropertyAccess.ts(24,15): error TS2107: 'MyBase.p1' is inaccessible.
    
            var l1 = super.d1;                                  // Should error, instance data property not a public instance member function
                           ~~
!!! superPropertyAccess.ts(26,24): error TS2166: Only public methods of the base class are accessible via the 'super' keyword.
    
            var l1 = super.d2;                                  // Should error, instance data property not a public instance member function
                           ~~
!!! superPropertyAccess.ts(28,24): error TS2166: Only public methods of the base class are accessible via the 'super' keyword.
    
            super.m1 = function (a: string) { return ""; };     // Should be allowed, we will not restrict assignment
    
            super.value = 0;                                    // Should error, instance data property not a public instance member function
                  ~~~~~
!!! superPropertyAccess.ts(32,15): error TS2166: Only public methods of the base class are accessible via the 'super' keyword.
            
            var z = super.value;                                // Should error, instance data property not a public instance member function
                          ~~~~~
!!! superPropertyAccess.ts(34,23): error TS2166: Only public methods of the base class are accessible via the 'super' keyword.
        }
    }