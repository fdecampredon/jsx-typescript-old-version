=== tests/cases/compiler/objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts ===
Line 4 col 6 IdentifierName "A" = A
Line 5 col 0 IdentifierName "foo" = <T extends Date>(x: T) => string
Line 5 col 8 IdentifierName "T" = T
Line 5 col 18 IdentifierName "Date" = Date
Line 5 col 24 IdentifierName "x" = T
Line 5 col 27 IdentifierName "T" = T
Line 8 col 6 IdentifierName "B" = B<T>
Line 8 col 8 IdentifierName "T" = T
Line 8 col 18 IdentifierName "Array" = Array<T>
Line 9 col 0 IdentifierName "foo" = (x: T) => string
Line 9 col 8 IdentifierName "x" = T
Line 9 col 11 IdentifierName "T" = T
Line 12 col 6 IdentifierName "C" = C<T>
Line 12 col 8 IdentifierName "T" = T
Line 12 col 18 IdentifierName "String" = String
Line 13 col 0 IdentifierName "foo" = (x: T) => string
Line 13 col 8 IdentifierName "x" = T
Line 13 col 11 IdentifierName "T" = T
Line 16 col 10 IdentifierName "I" = I<T>
Line 16 col 12 IdentifierName "T" = T
Line 16 col 22 IdentifierName "Number" = Number
Line 17 col 0 IdentifierName "foo" = (x: T) => string
Line 17 col 8 IdentifierName "x" = T
Line 17 col 11 IdentifierName "T" = T
Line 20 col 10 IdentifierName "I2" = I2
Line 21 col 0 IdentifierName "foo" = <T extends Boolean>(x: T) => string
Line 21 col 8 IdentifierName "T" = T
Line 21 col 18 IdentifierName "Boolean" = Boolean
Line 21 col 27 IdentifierName "x" = T
Line 21 col 30 IdentifierName "T" = T
Line 24 col 4 IdentifierName "a" = { foo<T extends string[]>(x: T): string; }
Line 24 col 9 IdentifierName "foo" = <T extends string[]>(x: T) => string
Line 24 col 13 IdentifierName "T" = T
Line 24 col 23 IdentifierName "Array" = Array<T>
Line 24 col 38 IdentifierName "x" = T
Line 24 col 41 IdentifierName "T" = T
Line 25 col 4 IdentifierName "b" = { foo<T extends RegExp>(x: T): string; }
Line 25 col 8 ObjectLiteralExpression "{ foo<T extends RegExp>(x: T) { return ''; } }" = { foo<T extends RegExp>(x: T): string; }
Line 25 col 10 IdentifierName "foo" = <T extends RegExp>(x: T) => string
Line 25 col 14 IdentifierName "T" = T
Line 25 col 24 IdentifierName "RegExp" = RegExp
Line 25 col 32 IdentifierName "x" = T
Line 25 col 35 IdentifierName "T" = T
Line 27 col 9 IdentifierName "foo1" = typeof foo1
Line 27 col 14 IdentifierName "x" = A
Line 27 col 17 IdentifierName "A" = A
Line 28 col 9 IdentifierName "foo1" = typeof foo1
Line 28 col 14 IdentifierName "x" = A
Line 28 col 17 IdentifierName "A" = A
Line 29 col 9 IdentifierName "foo1" = typeof foo1
Line 29 col 14 IdentifierName "x" = any
Line 31 col 9 IdentifierName "foo1b" = typeof foo1b
Line 31 col 15 IdentifierName "x" = B<number[]>
Line 31 col 18 IdentifierName "B" = B<T>
Line 31 col 20 IdentifierName "Array" = Array<T>
Line 32 col 9 IdentifierName "foo1b" = typeof foo1b
Line 32 col 15 IdentifierName "x" = B<number[]>
Line 32 col 18 IdentifierName "B" = B<T>
Line 32 col 20 IdentifierName "Array" = Array<T>
Line 33 col 9 IdentifierName "foo1b" = typeof foo1b
Line 33 col 15 IdentifierName "x" = any
Line 35 col 9 IdentifierName "foo1c" = typeof foo1c
Line 35 col 15 IdentifierName "x" = C<String>
Line 35 col 18 IdentifierName "C" = C<T>
Line 35 col 20 IdentifierName "String" = String
Line 36 col 9 IdentifierName "foo1c" = typeof foo1c
Line 36 col 15 IdentifierName "x" = C<String>
Line 36 col 18 IdentifierName "C" = C<T>
Line 36 col 20 IdentifierName "String" = String
Line 37 col 9 IdentifierName "foo1c" = typeof foo1c
Line 37 col 15 IdentifierName "x" = any
Line 39 col 9 IdentifierName "foo2" = typeof foo2
Line 39 col 14 IdentifierName "x" = I<Number>
Line 39 col 17 IdentifierName "I" = I<T>
Line 39 col 19 IdentifierName "Number" = Number
Line 40 col 9 IdentifierName "foo2" = typeof foo2
Line 40 col 14 IdentifierName "x" = I<Number>
Line 40 col 17 IdentifierName "I" = I<T>
Line 40 col 19 IdentifierName "Number" = Number
Line 41 col 9 IdentifierName "foo2" = typeof foo2
Line 41 col 14 IdentifierName "x" = any
Line 43 col 9 IdentifierName "foo3" = typeof foo3
Line 43 col 14 IdentifierName "x" = { foo<T extends string[]>(x: T): string; }
Line 43 col 24 IdentifierName "a" = { foo<T extends string[]>(x: T): string; }
Line 44 col 9 IdentifierName "foo3" = typeof foo3
Line 44 col 14 IdentifierName "x" = { foo<T extends string[]>(x: T): string; }
Line 44 col 24 IdentifierName "a" = { foo<T extends string[]>(x: T): string; }
Line 45 col 9 IdentifierName "foo3" = typeof foo3
Line 45 col 14 IdentifierName "x" = any
Line 47 col 9 IdentifierName "foo4" = typeof foo4
Line 47 col 14 IdentifierName "x" = { foo<T extends RegExp>(x: T): string; }
Line 47 col 24 IdentifierName "b" = { foo<T extends RegExp>(x: T): string; }
Line 48 col 9 IdentifierName "foo4" = typeof foo4
Line 48 col 14 IdentifierName "x" = { foo<T extends RegExp>(x: T): string; }
Line 48 col 24 IdentifierName "b" = { foo<T extends RegExp>(x: T): string; }
Line 49 col 9 IdentifierName "foo4" = typeof foo4
Line 49 col 14 IdentifierName "x" = any
Line 51 col 9 IdentifierName "foo5" = typeof foo5
Line 51 col 14 IdentifierName "x" = A
Line 51 col 17 IdentifierName "A" = A
Line 52 col 9 IdentifierName "foo5" = typeof foo5
Line 52 col 14 IdentifierName "x" = B<number[]>
Line 52 col 17 IdentifierName "B" = B<T>
Line 52 col 19 IdentifierName "Array" = Array<T>
Line 53 col 9 IdentifierName "foo5" = typeof foo5
Line 53 col 14 IdentifierName "x" = any
Line 55 col 9 IdentifierName "foo5b" = typeof foo5b
Line 55 col 15 IdentifierName "x" = A
Line 55 col 18 IdentifierName "A" = A
Line 56 col 9 IdentifierName "foo5b" = typeof foo5b
Line 56 col 15 IdentifierName "x" = C<String>
Line 56 col 18 IdentifierName "C" = C<T>
Line 56 col 20 IdentifierName "String" = String
Line 57 col 9 IdentifierName "foo5b" = typeof foo5b
Line 57 col 15 IdentifierName "x" = any
Line 59 col 9 IdentifierName "foo6" = typeof foo6
Line 59 col 14 IdentifierName "x" = A
Line 59 col 17 IdentifierName "A" = A
Line 60 col 9 IdentifierName "foo6" = typeof foo6
Line 60 col 14 IdentifierName "x" = I<Number>
Line 60 col 17 IdentifierName "I" = I<T>
Line 60 col 19 IdentifierName "Number" = Number
Line 61 col 9 IdentifierName "foo6" = typeof foo6
Line 61 col 14 IdentifierName "x" = any
Line 63 col 9 IdentifierName "foo7" = typeof foo7
Line 63 col 14 IdentifierName "x" = A
Line 63 col 17 IdentifierName "A" = A
Line 64 col 9 IdentifierName "foo7" = typeof foo7
Line 64 col 14 IdentifierName "x" = { foo<T extends string[]>(x: T): string; }
Line 64 col 24 IdentifierName "a" = { foo<T extends string[]>(x: T): string; }
Line 65 col 9 IdentifierName "foo7" = typeof foo7
Line 65 col 14 IdentifierName "x" = any
Line 67 col 9 IdentifierName "foo8" = typeof foo8
Line 67 col 14 IdentifierName "x" = B<number[]>
Line 67 col 17 IdentifierName "B" = B<T>
Line 67 col 19 IdentifierName "Array" = Array<T>
Line 68 col 9 IdentifierName "foo8" = typeof foo8
Line 68 col 14 IdentifierName "x" = I<Number>
Line 68 col 17 IdentifierName "I" = I<T>
Line 68 col 19 IdentifierName "Number" = Number
Line 69 col 9 IdentifierName "foo8" = typeof foo8
Line 69 col 14 IdentifierName "x" = any
Line 71 col 9 IdentifierName "foo9" = typeof foo9
Line 71 col 14 IdentifierName "x" = B<number[]>
Line 71 col 17 IdentifierName "B" = B<T>
Line 71 col 19 IdentifierName "Array" = Array<T>
Line 72 col 9 IdentifierName "foo9" = typeof foo9
Line 72 col 14 IdentifierName "x" = C<String>
Line 72 col 17 IdentifierName "C" = C<T>
Line 72 col 19 IdentifierName "String" = String
Line 73 col 9 IdentifierName "foo9" = typeof foo9
Line 73 col 14 IdentifierName "x" = any
Line 75 col 9 IdentifierName "foo10" = typeof foo10
Line 75 col 15 IdentifierName "x" = B<number[]>
Line 75 col 18 IdentifierName "B" = B<T>
Line 75 col 20 IdentifierName "Array" = Array<T>
Line 76 col 9 IdentifierName "foo10" = typeof foo10
Line 76 col 15 IdentifierName "x" = { foo<T extends string[]>(x: T): string; }
Line 76 col 25 IdentifierName "a" = { foo<T extends string[]>(x: T): string; }
Line 77 col 9 IdentifierName "foo10" = typeof foo10
Line 77 col 15 IdentifierName "x" = any
Line 79 col 9 IdentifierName "foo11" = typeof foo11
Line 79 col 15 IdentifierName "x" = B<number[]>
Line 79 col 18 IdentifierName "B" = B<T>
Line 79 col 20 IdentifierName "Array" = Array<T>
Line 80 col 9 IdentifierName "foo11" = typeof foo11
Line 80 col 15 IdentifierName "x" = { foo<T extends RegExp>(x: T): string; }
Line 80 col 25 IdentifierName "b" = { foo<T extends RegExp>(x: T): string; }
Line 81 col 9 IdentifierName "foo11" = typeof foo11
Line 81 col 15 IdentifierName "x" = any
Line 83 col 9 IdentifierName "foo12" = typeof foo12
Line 83 col 15 IdentifierName "x" = I<Number>
Line 83 col 18 IdentifierName "I" = I<T>
Line 83 col 20 IdentifierName "Number" = Number
Line 84 col 9 IdentifierName "foo12" = typeof foo12
Line 84 col 15 IdentifierName "x" = C<String>
Line 84 col 18 IdentifierName "C" = C<T>
Line 84 col 20 IdentifierName "String" = String
Line 85 col 9 IdentifierName "foo12" = typeof foo12
Line 85 col 15 IdentifierName "x" = any
Line 87 col 9 IdentifierName "foo12b" = typeof foo12b
Line 87 col 16 IdentifierName "x" = I2
Line 87 col 19 IdentifierName "I2" = I2
Line 88 col 9 IdentifierName "foo12b" = typeof foo12b
Line 88 col 16 IdentifierName "x" = C<String>
Line 88 col 19 IdentifierName "C" = C<T>
Line 88 col 21 IdentifierName "String" = String
Line 89 col 9 IdentifierName "foo12b" = typeof foo12b
Line 89 col 16 IdentifierName "x" = any
Line 91 col 9 IdentifierName "foo13" = typeof foo13
Line 91 col 15 IdentifierName "x" = I<Number>
Line 91 col 18 IdentifierName "I" = I<T>
Line 91 col 20 IdentifierName "Number" = Number
Line 92 col 9 IdentifierName "foo13" = typeof foo13
Line 92 col 15 IdentifierName "x" = { foo<T extends string[]>(x: T): string; }
Line 92 col 25 IdentifierName "a" = { foo<T extends string[]>(x: T): string; }
Line 93 col 9 IdentifierName "foo13" = typeof foo13
Line 93 col 15 IdentifierName "x" = any
Line 95 col 9 IdentifierName "foo14" = typeof foo14
Line 95 col 15 IdentifierName "x" = I<Number>
Line 95 col 18 IdentifierName "I" = I<T>
Line 95 col 20 IdentifierName "Number" = Number
Line 96 col 9 IdentifierName "foo14" = typeof foo14
Line 96 col 15 IdentifierName "x" = { foo<T extends RegExp>(x: T): string; }
Line 96 col 25 IdentifierName "b" = { foo<T extends RegExp>(x: T): string; }
Line 97 col 9 IdentifierName "foo14" = typeof foo14
Line 97 col 15 IdentifierName "x" = any
Line 99 col 9 IdentifierName "foo15" = typeof foo15
Line 99 col 15 IdentifierName "x" = I2
Line 99 col 18 IdentifierName "I2" = I2
Line 100 col 9 IdentifierName "foo15" = typeof foo15
Line 100 col 15 IdentifierName "x" = C<String>
Line 100 col 18 IdentifierName "C" = C<T>
Line 100 col 20 IdentifierName "String" = String
Line 101 col 9 IdentifierName "foo15" = typeof foo15
Line 101 col 15 IdentifierName "x" = any