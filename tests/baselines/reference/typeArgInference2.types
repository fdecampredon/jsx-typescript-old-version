=== tests/cases/compiler/typeArgInference2.ts ===
Line 0 col 10 IdentifierName "Item" = Item
Line 1 col 0 IdentifierName "name" = string
Line 4 col 17 IdentifierName "foo" = typeof foo
Line 4 col 21 IdentifierName "T" = T
Line 4 col 31 IdentifierName "Item" = Item
Line 4 col 37 IdentifierName "x" = T
Line 4 col 41 IdentifierName "T" = T
Line 4 col 44 IdentifierName "y" = T
Line 4 col 48 IdentifierName "T" = T
Line 4 col 52 IdentifierName "T" = T
Line 6 col 4 IdentifierName "z1" = any
Line 6 col 9 InvocationExpression "foo(null)" = any
Line 6 col 9 IdentifierName "foo" = typeof foo
Line 7 col 4 IdentifierName "z2" = Item
Line 7 col 9 InvocationExpression "foo()" = Item
Line 7 col 9 IdentifierName "foo" = typeof foo
Line 8 col 4 IdentifierName "z3" = { name: any; }
Line 8 col 9 InvocationExpression "foo({ name: null })" = { name: any; }
Line 8 col 9 IdentifierName "foo" = typeof foo
Line 8 col 13 ObjectLiteralExpression "{ name: null }" = { name: any; }
Line 8 col 15 IdentifierName "name" = any
Line 9 col 4 IdentifierName "z4" = { name: string; }
Line 9 col 9 InvocationExpression "foo({ name: "abc" })" = { name: string; }
Line 9 col 9 IdentifierName "foo" = typeof foo
Line 9 col 13 ObjectLiteralExpression "{ name: "abc" }" = { name: string; }
Line 9 col 15 IdentifierName "name" = string
Line 10 col 4 IdentifierName "z5" = { name: string; a: number; }
Line 10 col 9 InvocationExpression "foo({ name: "abc", a: 5 })" = { name: string; a: number; }
Line 10 col 9 IdentifierName "foo" = typeof foo
Line 10 col 13 ObjectLiteralExpression "{ name: "abc", a: 5 }" = { name: string; a: number; }
Line 10 col 15 IdentifierName "name" = string
Line 10 col 28 IdentifierName "a" = number
Line 11 col 4 IdentifierName "z6" = Item
Line 11 col 9 InvocationExpression "foo({ name: "abc", a: 5 }, { name: "def", b: 5 })" = Item
Line 11 col 9 IdentifierName "foo" = typeof foo
Line 11 col 13 ObjectLiteralExpression "{ name: "abc", a: 5 }" = { name: string; a: number; }
Line 11 col 15 IdentifierName "name" = string
Line 11 col 28 IdentifierName "a" = number
Line 11 col 36 ObjectLiteralExpression "{ name: "def", b: 5 }" = { name: string; b: number; }
Line 11 col 38 IdentifierName "name" = string
Line 11 col 51 IdentifierName "b" = number