=== tests/cases/compiler/objectTypesIdentityWithGenericConstructSignaturesOptionalParams3.ts ===
Line 4 col 6 IdentifierName "B" = B<T, U>
Line 4 col 8 IdentifierName "T" = T
Line 4 col 11 IdentifierName "U" = U
Line 5 col 16 IdentifierName "x" = T
Line 5 col 19 IdentifierName "T" = T
Line 5 col 22 IdentifierName "y" = U
Line 5 col 25 IdentifierName "U" = U
Line 8 col 6 IdentifierName "C" = C<T, U>
Line 8 col 8 IdentifierName "T" = T
Line 8 col 11 IdentifierName "U" = U
Line 9 col 16 IdentifierName "x" = T
Line 9 col 19 IdentifierName "T" = T
Line 9 col 22 IdentifierName "y" = U
Line 9 col 26 IdentifierName "U" = U
Line 12 col 10 IdentifierName "I" = I<T, U>
Line 12 col 12 IdentifierName "T" = T
Line 12 col 15 IdentifierName "U" = U
Line 13 col 8 IdentifierName "x" = T
Line 13 col 11 IdentifierName "T" = T
Line 13 col 14 IdentifierName "y" = U
Line 13 col 18 IdentifierName "U" = U
Line 13 col 22 IdentifierName "B" = B<T, U>
Line 13 col 24 IdentifierName "T" = T
Line 13 col 27 IdentifierName "U" = U
Line 16 col 10 IdentifierName "I2" = I2
Line 17 col 8 IdentifierName "T" = T
Line 17 col 11 IdentifierName "U" = U
Line 17 col 14 IdentifierName "x" = T
Line 17 col 17 IdentifierName "T" = T
Line 17 col 20 IdentifierName "y" = U
Line 17 col 23 IdentifierName "U" = U
Line 17 col 27 IdentifierName "C" = C<T, U>
Line 17 col 29 IdentifierName "T" = T
Line 17 col 32 IdentifierName "U" = U
Line 20 col 4 IdentifierName "a" = new<T, U>(x: T, y?: U) => B<T, U>
Line 20 col 14 IdentifierName "T" = T
Line 20 col 17 IdentifierName "U" = U
Line 20 col 20 IdentifierName "x" = T
Line 20 col 23 IdentifierName "T" = T
Line 20 col 26 IdentifierName "y" = U
Line 20 col 30 IdentifierName "U" = U
Line 20 col 34 IdentifierName "B" = B<T, U>
Line 20 col 36 IdentifierName "T" = T
Line 20 col 39 IdentifierName "U" = U
Line 21 col 4 IdentifierName "b" = { new<T, U>(x: T, y: U): C<T, U>; }
Line 21 col 8 ObjectLiteralExpression "{ new<T, U>(x: T, y: U) { return new C<T, U>(x, y); } }" = { new<T, U>(x: T, y: U): C<T, U>; }
Line 21 col 10 IdentifierName "new" = <T, U>(x: T, y: U) => C<T, U>
Line 21 col 14 IdentifierName "T" = T
Line 21 col 17 IdentifierName "U" = U
Line 21 col 20 IdentifierName "x" = T
Line 21 col 23 IdentifierName "T" = T
Line 21 col 26 IdentifierName "y" = U
Line 21 col 29 IdentifierName "U" = U
Line 21 col 41 ObjectCreationExpression "new C<T, U>(x, y)" = C<T, U>
Line 21 col 45 IdentifierName "C" = typeof C
Line 21 col 47 IdentifierName "T" = T
Line 21 col 50 IdentifierName "U" = U
Line 21 col 53 IdentifierName "x" = T
Line 21 col 56 IdentifierName "y" = U
Line 23 col 9 IdentifierName "foo1b" = typeof foo1b
Line 23 col 15 IdentifierName "x" = B<string, number>
Line 23 col 18 IdentifierName "B" = B<T, U>
Line 24 col 9 IdentifierName "foo1b" = typeof foo1b
Line 24 col 15 IdentifierName "x" = B<string, number>
Line 24 col 18 IdentifierName "B" = B<T, U>
Line 25 col 9 IdentifierName "foo1b" = typeof foo1b
Line 25 col 15 IdentifierName "x" = any
Line 27 col 9 IdentifierName "foo1c" = typeof foo1c
Line 27 col 15 IdentifierName "x" = C<string, number>
Line 27 col 18 IdentifierName "C" = C<T, U>
Line 28 col 9 IdentifierName "foo1c" = typeof foo1c
Line 28 col 15 IdentifierName "x" = C<string, number>
Line 28 col 18 IdentifierName "C" = C<T, U>
Line 29 col 9 IdentifierName "foo1c" = typeof foo1c
Line 29 col 15 IdentifierName "x" = any
Line 31 col 9 IdentifierName "foo2" = typeof foo2
Line 31 col 14 IdentifierName "x" = I<string, number>
Line 31 col 17 IdentifierName "I" = I<T, U>
Line 32 col 9 IdentifierName "foo2" = typeof foo2
Line 32 col 14 IdentifierName "x" = I<string, number>
Line 32 col 17 IdentifierName "I" = I<T, U>
Line 33 col 9 IdentifierName "foo2" = typeof foo2
Line 33 col 14 IdentifierName "x" = any
Line 35 col 9 IdentifierName "foo3" = typeof foo3
Line 35 col 14 IdentifierName "x" = new<T, U>(x: T, y?: U) => B<T, U>
Line 35 col 24 IdentifierName "a" = new<T, U>(x: T, y?: U) => B<T, U>
Line 36 col 9 IdentifierName "foo3" = typeof foo3
Line 36 col 14 IdentifierName "x" = new<T, U>(x: T, y?: U) => B<T, U>
Line 36 col 24 IdentifierName "a" = new<T, U>(x: T, y?: U) => B<T, U>
Line 37 col 9 IdentifierName "foo3" = typeof foo3
Line 37 col 14 IdentifierName "x" = any
Line 39 col 9 IdentifierName "foo4" = typeof foo4
Line 39 col 14 IdentifierName "x" = { new<T, U>(x: T, y: U): C<T, U>; }
Line 39 col 24 IdentifierName "b" = { new<T, U>(x: T, y: U): C<T, U>; }
Line 40 col 9 IdentifierName "foo4" = typeof foo4
Line 40 col 14 IdentifierName "x" = { new<T, U>(x: T, y: U): C<T, U>; }
Line 40 col 24 IdentifierName "b" = { new<T, U>(x: T, y: U): C<T, U>; }
Line 41 col 9 IdentifierName "foo4" = typeof foo4
Line 41 col 14 IdentifierName "x" = any
Line 43 col 9 IdentifierName "foo8" = typeof foo8
Line 43 col 14 IdentifierName "x" = B<string, number>
Line 43 col 17 IdentifierName "B" = B<T, U>
Line 44 col 9 IdentifierName "foo8" = typeof foo8
Line 44 col 14 IdentifierName "x" = I<string, number>
Line 44 col 17 IdentifierName "I" = I<T, U>
Line 45 col 9 IdentifierName "foo8" = typeof foo8
Line 45 col 14 IdentifierName "x" = any
Line 47 col 9 IdentifierName "foo9" = typeof foo9
Line 47 col 14 IdentifierName "x" = B<string, number>
Line 47 col 17 IdentifierName "B" = B<T, U>
Line 48 col 9 IdentifierName "foo9" = typeof foo9
Line 48 col 14 IdentifierName "x" = C<string, number>
Line 48 col 17 IdentifierName "C" = C<T, U>
Line 49 col 9 IdentifierName "foo9" = typeof foo9
Line 49 col 14 IdentifierName "x" = any
Line 51 col 9 IdentifierName "foo10" = typeof foo10
Line 51 col 15 IdentifierName "x" = B<string, number>
Line 51 col 18 IdentifierName "B" = B<T, U>
Line 52 col 9 IdentifierName "foo10" = typeof foo10
Line 52 col 15 IdentifierName "x" = new<T, U>(x: T, y?: U) => B<T, U>
Line 52 col 25 IdentifierName "a" = new<T, U>(x: T, y?: U) => B<T, U>
Line 53 col 9 IdentifierName "foo10" = typeof foo10
Line 53 col 15 IdentifierName "x" = any
Line 55 col 9 IdentifierName "foo11" = typeof foo11
Line 55 col 15 IdentifierName "x" = B<string, number>
Line 55 col 18 IdentifierName "B" = B<T, U>
Line 56 col 9 IdentifierName "foo11" = typeof foo11
Line 56 col 15 IdentifierName "x" = { new<T, U>(x: T, y: U): C<T, U>; }
Line 56 col 25 IdentifierName "b" = { new<T, U>(x: T, y: U): C<T, U>; }
Line 57 col 9 IdentifierName "foo11" = typeof foo11
Line 57 col 15 IdentifierName "x" = any
Line 59 col 9 IdentifierName "foo12" = typeof foo12
Line 59 col 15 IdentifierName "x" = I<string, number>
Line 59 col 18 IdentifierName "I" = I<T, U>
Line 60 col 9 IdentifierName "foo12" = typeof foo12
Line 60 col 15 IdentifierName "x" = C<string, number>
Line 60 col 18 IdentifierName "C" = C<T, U>
Line 61 col 9 IdentifierName "foo12" = typeof foo12
Line 61 col 15 IdentifierName "x" = any
Line 63 col 9 IdentifierName "foo12b" = typeof foo12b
Line 63 col 16 IdentifierName "x" = I2
Line 63 col 19 IdentifierName "I2" = I2
Line 64 col 9 IdentifierName "foo12b" = typeof foo12b
Line 64 col 16 IdentifierName "x" = C<string, number>
Line 64 col 19 IdentifierName "C" = C<T, U>
Line 65 col 9 IdentifierName "foo12b" = typeof foo12b
Line 65 col 16 IdentifierName "x" = any
Line 67 col 9 IdentifierName "foo13" = typeof foo13
Line 67 col 15 IdentifierName "x" = I<string, number>
Line 67 col 18 IdentifierName "I" = I<T, U>
Line 68 col 9 IdentifierName "foo13" = typeof foo13
Line 68 col 15 IdentifierName "x" = new<T, U>(x: T, y?: U) => B<T, U>
Line 68 col 25 IdentifierName "a" = new<T, U>(x: T, y?: U) => B<T, U>
Line 69 col 9 IdentifierName "foo13" = typeof foo13
Line 69 col 15 IdentifierName "x" = any
Line 71 col 9 IdentifierName "foo14" = typeof foo14
Line 71 col 15 IdentifierName "x" = I<string, number>
Line 71 col 18 IdentifierName "I" = I<T, U>
Line 72 col 9 IdentifierName "foo14" = typeof foo14
Line 72 col 15 IdentifierName "x" = { new<T, U>(x: T, y: U): C<T, U>; }
Line 72 col 25 IdentifierName "b" = { new<T, U>(x: T, y: U): C<T, U>; }
Line 73 col 9 IdentifierName "foo14" = typeof foo14
Line 73 col 15 IdentifierName "x" = any