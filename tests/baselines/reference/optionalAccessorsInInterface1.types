=== tests/cases/compiler/optionalAccessorsInInterface1.ts ===
Line 0 col 10 IdentifierName "MyPropertyDescriptor" = MyPropertyDescriptor
Line 1 col 0 IdentifierName "get" = () => any
Line 2 col 0 IdentifierName "set" = (v: any) => void
Line 2 col 10 IdentifierName "v" = any
Line 5 col 17 IdentifierName "defineMyProperty" = typeof defineMyProperty
Line 5 col 34 IdentifierName "o" = any
Line 5 col 42 IdentifierName "p" = string
Line 5 col 53 IdentifierName "attributes" = MyPropertyDescriptor
Line 5 col 65 IdentifierName "MyPropertyDescriptor" = MyPropertyDescriptor
Line 6 col 0 InvocationExpression "defineMyProperty({}, "name", { get: function () { return 5; } })" = any
Line 6 col 0 IdentifierName "defineMyProperty" = typeof defineMyProperty
Line 6 col 17 ObjectLiteralExpression "{}" = {}
Line 6 col 29 ObjectLiteralExpression "{ get: function () { return 5; } }" = { get: () => number; }
Line 6 col 31 IdentifierName "get" = () => number
Line 6 col 36 FunctionExpression "function () { return 5; }" = () => number
Line 8 col 10 IdentifierName "MyPropertyDescriptor2" = MyPropertyDescriptor2
Line 9 col 0 IdentifierName "get" = () => any
Line 10 col 0 IdentifierName "set" = (v: any) => void
Line 10 col 11 IdentifierName "v" = any
Line 13 col 17 IdentifierName "defineMyProperty2" = typeof defineMyProperty2
Line 13 col 35 IdentifierName "o" = any
Line 13 col 43 IdentifierName "p" = string
Line 13 col 54 IdentifierName "attributes" = MyPropertyDescriptor2
Line 13 col 66 IdentifierName "MyPropertyDescriptor2" = MyPropertyDescriptor2
Line 14 col 0 InvocationExpression "defineMyProperty2({}, "name", { get: function () { return 5; } })" = any
Line 14 col 0 IdentifierName "defineMyProperty2" = typeof defineMyProperty2
Line 14 col 18 ObjectLiteralExpression "{}" = {}
Line 14 col 30 ObjectLiteralExpression "{ get: function () { return 5; } }" = { get: () => number; }
Line 14 col 32 IdentifierName "get" = () => number
Line 14 col 37 FunctionExpression "function () { return 5; }" = () => number