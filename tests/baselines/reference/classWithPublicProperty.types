=== tests/cases/compiler/classWithPublicProperty.ts ===
Line 0 col 6 IdentifierName "C" = C
Line 1 col 11 IdentifierName "x" = any
Line 2 col 11 IdentifierName "a" = string
Line 3 col 11 IdentifierName "b" = string
Line 4 col 11 IdentifierName "c" = () => string
Line 5 col 11 IdentifierName "d" = () => string
Line 5 col 15 ParenthesizedArrowFunctionExpression "() => ''" = () => string
Line 6 col 18 IdentifierName "e" = any
Line 7 col 18 IdentifierName "f" = () => string
Line 8 col 18 IdentifierName "g" = () => string
Line 8 col 22 ParenthesizedArrowFunctionExpression "() => ''" = () => string
Line 11 col 4 IdentifierName "c" = C
Line 11 col 8 ObjectCreationExpression "new C()" = C
Line 11 col 12 IdentifierName "C" = { prototype: C; e: any; f(): string; g: () => string; new(): C; }
Line 12 col 4 IdentifierName "r1" = string
Line 12 col 17 MemberAccessExpression "c.x" = any
Line 12 col 17 IdentifierName "c" = C
Line 12 col 19 IdentifierName "x" = any
Line 13 col 4 IdentifierName "r2" = string
Line 13 col 17 MemberAccessExpression "c.a" = string
Line 13 col 17 IdentifierName "c" = C
Line 13 col 19 IdentifierName "a" = string
Line 14 col 4 IdentifierName "r3" = string
Line 14 col 17 MemberAccessExpression "c.b" = string
Line 14 col 17 IdentifierName "c" = C
Line 14 col 19 IdentifierName "b" = string
Line 15 col 4 IdentifierName "r4" = string
Line 15 col 17 InvocationExpression "c.c()" = string
Line 15 col 17 MemberAccessExpression "c.c" = () => string
Line 15 col 17 IdentifierName "c" = C
Line 15 col 19 IdentifierName "c" = () => string
Line 16 col 4 IdentifierName "r5" = string
Line 16 col 17 InvocationExpression "c.d()" = string
Line 16 col 17 MemberAccessExpression "c.d" = () => string
Line 16 col 17 IdentifierName "c" = C
Line 16 col 19 IdentifierName "d" = () => string
Line 17 col 4 IdentifierName "r6" = string
Line 17 col 17 MemberAccessExpression "C.e" = any
Line 17 col 17 IdentifierName "C" = { prototype: C; e: any; f(): string; g: () => string; new(): C; }
Line 17 col 19 IdentifierName "e" = any
Line 18 col 4 IdentifierName "r7" = string
Line 18 col 17 InvocationExpression "C.f()" = string
Line 18 col 17 MemberAccessExpression "C.f" = () => string
Line 18 col 17 IdentifierName "C" = { prototype: C; e: any; f(): string; g: () => string; new(): C; }
Line 18 col 19 IdentifierName "f" = () => string
Line 19 col 4 IdentifierName "r8" = string
Line 19 col 17 InvocationExpression "C.g()" = string
Line 19 col 17 MemberAccessExpression "C.g" = () => string
Line 19 col 17 IdentifierName "C" = { prototype: C; e: any; f(): string; g: () => string; new(): C; }
Line 19 col 19 IdentifierName "g" = () => string