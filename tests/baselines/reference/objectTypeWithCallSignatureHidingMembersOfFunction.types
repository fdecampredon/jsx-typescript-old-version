=== tests/cases/compiler/objectTypeWithCallSignatureHidingMembersOfFunction.ts ===
Line 0 col 10 IdentifierName "I" = I
Line 2 col 0 IdentifierName "apply" = (a: any, b?: any) => void
Line 2 col 10 IdentifierName "a" = any
Line 2 col 18 IdentifierName "b" = any
Line 3 col 0 IdentifierName "call" = (thisArg: number, ...argArray: number[]) => any
Line 3 col 9 IdentifierName "thisArg" = number
Line 3 col 29 IdentifierName "argArray" = number[]
Line 6 col 4 IdentifierName "i" = I
Line 6 col 7 IdentifierName "I" = I
Line 7 col 4 IdentifierName "r1" = (a: any, b?: any) => void
Line 7 col 9 IdentifierName "a" = any
Line 7 col 17 IdentifierName "b" = any
Line 7 col 36 MemberAccessExpression "i.apply" = (a: any, b?: any) => void
Line 7 col 36 IdentifierName "i" = I
Line 7 col 38 IdentifierName "apply" = (a: any, b?: any) => void
Line 8 col 4 IdentifierName "r1b" = (thisArg: number, ...argArray: number[]) => void
Line 8 col 10 IdentifierName "thisArg" = number
Line 8 col 30 IdentifierName "argArray" = number[]
Line 8 col 60 MemberAccessExpression "i.call" = (thisArg: number, ...argArray: number[]) => any
Line 8 col 60 IdentifierName "i" = I
Line 8 col 62 IdentifierName "call" = (thisArg: number, ...argArray: number[]) => any
Line 9 col 4 IdentifierName "r1c" = any
Line 9 col 10 MemberAccessExpression "i.arguments" = any
Line 9 col 10 IdentifierName "i" = I
Line 9 col 12 IdentifierName "arguments" = any
Line 11 col 4 IdentifierName "x" = { apply(a: any, b?: any): void; call(thisArg: number, ...argArray: number[]): any; (): void; }
Line 13 col 0 IdentifierName "apply" = (a: any, b?: any) => void
Line 13 col 10 IdentifierName "a" = any
Line 13 col 18 IdentifierName "b" = any
Line 14 col 0 IdentifierName "call" = (thisArg: number, ...argArray: number[]) => any
Line 14 col 9 IdentifierName "thisArg" = number
Line 14 col 29 IdentifierName "argArray" = number[]
Line 17 col 4 IdentifierName "r2" = (a: any, b?: any) => void
Line 17 col 9 IdentifierName "a" = any
Line 17 col 17 IdentifierName "b" = any
Line 17 col 36 MemberAccessExpression "x.apply" = (a: any, b?: any) => void
Line 17 col 36 IdentifierName "x" = { apply(a: any, b?: any): void; call(thisArg: number, ...argArray: number[]): any; (): void; }
Line 17 col 38 IdentifierName "apply" = (a: any, b?: any) => void
Line 18 col 4 IdentifierName "r2b" = (thisArg: number, ...argArray: number[]) => void
Line 18 col 10 IdentifierName "thisArg" = number
Line 18 col 30 IdentifierName "argArray" = number[]
Line 18 col 60 MemberAccessExpression "x.call" = (thisArg: number, ...argArray: number[]) => any
Line 18 col 60 IdentifierName "x" = { apply(a: any, b?: any): void; call(thisArg: number, ...argArray: number[]): any; (): void; }
Line 18 col 62 IdentifierName "call" = (thisArg: number, ...argArray: number[]) => any
Line 19 col 4 IdentifierName "r2c" = any
Line 19 col 10 MemberAccessExpression "x.arguments" = any
Line 19 col 10 IdentifierName "x" = { apply(a: any, b?: any): void; call(thisArg: number, ...argArray: number[]): any; (): void; }
Line 19 col 12 IdentifierName "arguments" = any