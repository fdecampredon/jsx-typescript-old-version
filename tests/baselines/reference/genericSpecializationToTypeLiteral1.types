=== tests/cases/compiler/genericSpecializationToTypeLiteral1.ts ===
Line 0 col 10 IdentifierName "IEnumerable" = IEnumerable<T>
Line 0 col 22 IdentifierName "T" = any
Line 1 col 0 IdentifierName "zip" = { <TResult>(second: IEnumerable<T>, resultSelector: (first: T, second: T, index: number) => TResult): IEnumerable<TResult>; <TResult>(second: T[], resultSelector: (first: T, second: T, index: number) => TResult): IEnumerable<TResult>; <TResult>(...params: any[]): IEnumerable<TResult>; }
Line 2 col 8 IdentifierName "TResult" = any
Line 2 col 17 IdentifierName "second" = IEnumerable<T>
Line 2 col 25 IdentifierName "IEnumerable" = IEnumerable<T>
Line 2 col 37 IdentifierName "T" = T
Line 2 col 41 IdentifierName "resultSelector" = (first: T, second: T, index: number) => TResult
Line 2 col 58 IdentifierName "first" = T
Line 2 col 65 IdentifierName "T" = T
Line 2 col 68 IdentifierName "second" = T
Line 2 col 76 IdentifierName "T" = T
Line 2 col 79 IdentifierName "index" = number
Line 2 col 97 IdentifierName "TResult" = TResult
Line 2 col 107 IdentifierName "IEnumerable" = IEnumerable<T>
Line 2 col 119 IdentifierName "TResult" = TResult
Line 3 col 0 IdentifierName "zip" = { <TResult>(second: IEnumerable<T>, resultSelector: (first: T, second: T, index: number) => TResult): IEnumerable<TResult>; <TResult>(second: T[], resultSelector: (first: T, second: T, index: number) => TResult): IEnumerable<TResult>; <TResult>(...params: any[]): IEnumerable<TResult>; }
Line 3 col 8 IdentifierName "TResult" = any
Line 3 col 17 IdentifierName "second" = T[]
Line 3 col 25 IdentifierName "T" = T
Line 3 col 30 IdentifierName "resultSelector" = (first: T, second: T, index: number) => TResult
Line 3 col 47 IdentifierName "first" = T
Line 3 col 54 IdentifierName "T" = T
Line 3 col 57 IdentifierName "second" = T
Line 3 col 65 IdentifierName "T" = T
Line 3 col 68 IdentifierName "index" = number
Line 3 col 86 IdentifierName "TResult" = TResult
Line 3 col 96 IdentifierName "IEnumerable" = IEnumerable<T>
Line 3 col 108 IdentifierName "TResult" = TResult
Line 4 col 0 IdentifierName "zip" = { <TResult>(second: IEnumerable<T>, resultSelector: (first: T, second: T, index: number) => TResult): IEnumerable<TResult>; <TResult>(second: T[], resultSelector: (first: T, second: T, index: number) => TResult): IEnumerable<TResult>; <TResult>(...params: any[]): IEnumerable<TResult>; }
Line 4 col 8 IdentifierName "TResult" = any
Line 4 col 20 IdentifierName "params" = any[]
Line 4 col 36 IdentifierName "IEnumerable" = IEnumerable<T>
Line 4 col 48 IdentifierName "TResult" = TResult
Line 5 col 0 IdentifierName "merge" = { <TResult>(...params: IEnumerable<T>[]): IEnumerable<any>; <TResult>(...params: T[][]): IEnumerable<any>; }
Line 6 col 10 IdentifierName "TResult" = any
Line 6 col 22 IdentifierName "params" = IEnumerable<T>[]
Line 6 col 30 IdentifierName "IEnumerable" = IEnumerable<T>
Line 6 col 42 IdentifierName "T" = T
Line 6 col 49 IdentifierName "IEnumerable" = IEnumerable<T>
Line 6 col 61 IdentifierName "T" = T
Line 7 col 0 IdentifierName "merge" = { <TResult>(...params: IEnumerable<T>[]): IEnumerable<any>; <TResult>(...params: T[][]): IEnumerable<any>; }
Line 7 col 10 IdentifierName "TResult" = any
Line 7 col 22 IdentifierName "params" = T[][]
Line 7 col 30 IdentifierName "T" = T
Line 7 col 38 IdentifierName "IEnumerable" = IEnumerable<T>
Line 7 col 50 IdentifierName "T" = T
Line 8 col 0 IdentifierName "concat" = { (...sequences: IEnumerable<T>[]): IEnumerable<any>; (...sequences: T[]): IEnumerable<any>; }
Line 10 col 14 IdentifierName "sequences" = IEnumerable<T>[]
Line 10 col 25 IdentifierName "IEnumerable" = IEnumerable<T>
Line 10 col 37 IdentifierName "T" = T
Line 10 col 44 IdentifierName "IEnumerable" = IEnumerable<T>
Line 10 col 56 IdentifierName "T" = T
Line 11 col 0 IdentifierName "concat" = { (...sequences: IEnumerable<T>[]): IEnumerable<any>; (...sequences: T[]): IEnumerable<any>; }
Line 11 col 14 IdentifierName "sequences" = T[]
Line 11 col 25 IdentifierName "T" = T
Line 11 col 31 IdentifierName "IEnumerable" = IEnumerable<T>
Line 11 col 43 IdentifierName "T" = T
Line 12 col 0 IdentifierName "insert" = (index: number, second: IEnumerable<T>) => IEnumerable<any>
Line 13 col 11 IdentifierName "index" = number
Line 13 col 26 IdentifierName "second" = IEnumerable<T>
Line 13 col 34 IdentifierName "IEnumerable" = IEnumerable<T>
Line 13 col 46 IdentifierName "T" = T
Line 13 col 51 IdentifierName "IEnumerable" = IEnumerable<T>
Line 13 col 63 IdentifierName "T" = T
Line 14 col 0 IdentifierName "sequenceEqual" = { (second: IEnumerable<T>): boolean; <TCompare>(second: IEnumerable<T>, compareSelector: (element: T) => TCompare): boolean; (second: T[]): boolean; <TCompare>(second: T[], compareSelector: (element: T) => TCompare): boolean; }
Line 15 col 18 IdentifierName "second" = IEnumerable<T>
Line 15 col 26 IdentifierName "IEnumerable" = IEnumerable<T>
Line 15 col 38 IdentifierName "T" = T
Line 16 col 0 IdentifierName "sequenceEqual" = { (second: IEnumerable<T>): boolean; <TCompare>(second: IEnumerable<T>, compareSelector: (element: T) => TCompare): boolean; (second: T[]): boolean; <TCompare>(second: T[], compareSelector: (element: T) => TCompare): boolean; }
Line 16 col 18 IdentifierName "TCompare" = any
Line 16 col 28 IdentifierName "second" = IEnumerable<T>
Line 16 col 36 IdentifierName "IEnumerable" = IEnumerable<T>
Line 16 col 48 IdentifierName "T" = T
Line 16 col 52 IdentifierName "compareSelector" = (element: T) => TCompare
Line 16 col 70 IdentifierName "element" = T
Line 16 col 79 IdentifierName "T" = T
Line 16 col 85 IdentifierName "TCompare" = TCompare
Line 17 col 0 IdentifierName "sequenceEqual" = { (second: IEnumerable<T>): boolean; <TCompare>(second: IEnumerable<T>, compareSelector: (element: T) => TCompare): boolean; (second: T[]): boolean; <TCompare>(second: T[], compareSelector: (element: T) => TCompare): boolean; }
Line 17 col 18 IdentifierName "second" = T[]
Line 17 col 26 IdentifierName "T" = T
Line 18 col 0 IdentifierName "sequenceEqual" = { (second: IEnumerable<T>): boolean; <TCompare>(second: IEnumerable<T>, compareSelector: (element: T) => TCompare): boolean; (second: T[]): boolean; <TCompare>(second: T[], compareSelector: (element: T) => TCompare): boolean; }
Line 18 col 18 IdentifierName "TCompare" = any
Line 18 col 28 IdentifierName "second" = T[]
Line 18 col 36 IdentifierName "T" = T
Line 18 col 41 IdentifierName "compareSelector" = (element: T) => TCompare
Line 18 col 59 IdentifierName "element" = T
Line 18 col 68 IdentifierName "T" = T
Line 18 col 74 IdentifierName "TCompare" = TCompare
Line 19 col 0 IdentifierName "toDictionary" = { <TKey>(keySelector: (element: T) => TKey): IDictionary<any, any>; <TKey, TValue>(keySelector: (element: T) => TKey, elementSelector: (element: T) => TValue): IDictionary<any, any>; <TKey, TValue, TCompare>(keySelector: (element: T) => TKey, elementSelector: (element: T) => TValue, compareSelector: (key: TKey) => TCompare): IDictionary<any, any>; }
Line 20 col 17 IdentifierName "TKey" = any
Line 20 col 23 IdentifierName "keySelector" = (element: T) => TKey
Line 20 col 37 IdentifierName "element" = T
Line 20 col 46 IdentifierName "T" = T
Line 20 col 52 IdentifierName "TKey" = TKey
Line 20 col 59 IdentifierName "IDictionary" = IDictionary<TKey, TValue>
Line 20 col 71 IdentifierName "TKey" = TKey
Line 21 col 0 IdentifierName "toDictionary" = { <TKey>(keySelector: (element: T) => TKey): IDictionary<any, any>; <TKey, TValue>(keySelector: (element: T) => TKey, elementSelector: (element: T) => TValue): IDictionary<any, any>; <TKey, TValue, TCompare>(keySelector: (element: T) => TKey, elementSelector: (element: T) => TValue, compareSelector: (key: TKey) => TCompare): IDictionary<any, any>; }
Line 21 col 17 IdentifierName "TKey" = any
Line 21 col 23 IdentifierName "TValue" = any
Line 21 col 31 IdentifierName "keySelector" = (element: T) => TKey
Line 21 col 45 IdentifierName "element" = T
Line 21 col 54 IdentifierName "T" = T
Line 21 col 60 IdentifierName "TKey" = TKey
Line 21 col 66 IdentifierName "elementSelector" = (element: T) => TValue
Line 21 col 84 IdentifierName "element" = T
Line 21 col 93 IdentifierName "T" = T
Line 21 col 99 IdentifierName "TValue" = TValue
Line 21 col 108 IdentifierName "IDictionary" = IDictionary<TKey, TValue>
Line 21 col 120 IdentifierName "TKey" = TKey
Line 21 col 126 IdentifierName "TValue" = TValue
Line 22 col 0 IdentifierName "toDictionary" = { <TKey>(keySelector: (element: T) => TKey): IDictionary<any, any>; <TKey, TValue>(keySelector: (element: T) => TKey, elementSelector: (element: T) => TValue): IDictionary<any, any>; <TKey, TValue, TCompare>(keySelector: (element: T) => TKey, elementSelector: (element: T) => TValue, compareSelector: (key: TKey) => TCompare): IDictionary<any, any>; }
Line 22 col 17 IdentifierName "TKey" = any
Line 22 col 23 IdentifierName "TValue" = any
Line 22 col 31 IdentifierName "TCompare" = any
Line 22 col 41 IdentifierName "keySelector" = (element: T) => TKey
Line 22 col 55 IdentifierName "element" = T
Line 22 col 64 IdentifierName "T" = T
Line 22 col 70 IdentifierName "TKey" = TKey
Line 22 col 76 IdentifierName "elementSelector" = (element: T) => TValue
Line 22 col 94 IdentifierName "element" = T
Line 22 col 103 IdentifierName "T" = T
Line 22 col 109 IdentifierName "TValue" = TValue
Line 22 col 117 IdentifierName "compareSelector" = (key: TKey) => TCompare
Line 22 col 135 IdentifierName "key" = TKey
Line 22 col 140 IdentifierName "TKey" = TKey
Line 22 col 149 IdentifierName "TCompare" = TCompare
Line 22 col 160 IdentifierName "IDictionary" = IDictionary<TKey, TValue>
Line 22 col 172 IdentifierName "TKey" = TKey
Line 22 col 178 IdentifierName "TValue" = TValue
Line 25 col 10 IdentifierName "IDictionary" = IDictionary<TKey, TValue>
Line 25 col 22 IdentifierName "TKey" = any
Line 25 col 28 IdentifierName "TValue" = any
Line 26 col 0 IdentifierName "toEnumerable" = () => IEnumerable<any>
Line 26 col 20 IdentifierName "IEnumerable" = IEnumerable<T>
Line 26 col 34 IdentifierName "key" = TKey
Line 26 col 39 IdentifierName "TKey" = TKey
Line 26 col 45 IdentifierName "value" = TValue
Line 26 col 52 IdentifierName "TValue" = TValue