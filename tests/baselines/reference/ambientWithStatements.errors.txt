==== tests/cases/compiler/ambientWithStatements.ts (17 errors) ====
    declare module M {
        break;
        ~~~~~
!!! error TS1036: Statements are not allowed in ambient contexts.
        ~~~~~~
!!! error TS2202: 'break' statement can only be used within an enclosing iteration or switch statement.
        continue;
        ~~~~~~~~
!!! error TS1036: Statements are not allowed in ambient contexts.
        ~~~~~~~~~
!!! error TS2201: 'continue' statement can only be used within an enclosing iteration statement.
        debugger;
        ~~~~~~~~
!!! error TS1036: Statements are not allowed in ambient contexts.
        do { } while (true);
        ~~
!!! error TS1036: Statements are not allowed in ambient contexts.
        var x;
        for (x in null) { }
        ~~~
!!! error TS1036: Statements are not allowed in ambient contexts.
                  ~~~~
!!! error TS2117: The right-hand side of a 'for...in' statement must be of type 'any', an object type or a type parameter.
        if (true) { } else { }
        ~~
!!! error TS1036: Statements are not allowed in ambient contexts.
        1;
        ~
!!! error TS1036: Statements are not allowed in ambient contexts.
        L: var y;
        ~
!!! error TS1036: Statements are not allowed in ambient contexts.
        return;
        ~~~~~~
!!! error TS1036: Statements are not allowed in ambient contexts.
        switch (x) {
        ~~~~~~
!!! error TS1036: Statements are not allowed in ambient contexts.
            case 1:
                break;
            default:
                break;
        }
        throw "nooo";
        ~~~~~
!!! error TS1036: Statements are not allowed in ambient contexts.
        try {
        ~~~
!!! error TS1036: Statements are not allowed in ambient contexts.
        }
        catch (e) {
        }
        finally {
        }
        with (x) {
        ~~~~
!!! error TS1036: Statements are not allowed in ambient contexts.
              ~
!!! error TS2135: All symbols within a with block will be resolved to 'any'.
        }
    }