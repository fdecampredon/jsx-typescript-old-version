=== tests/cases/compiler/typeParameterUsedAsTypeParameterConstraint2.ts ===
Line 3 col 9 IdentifierName "foo" = typeof foo
Line 3 col 13 IdentifierName "T" = T
Line 3 col 16 IdentifierName "U" = U
Line 3 col 26 IdentifierName "T" = T
Line 3 col 29 IdentifierName "x" = T
Line 3 col 32 IdentifierName "T" = T
Line 3 col 35 IdentifierName "y" = U
Line 3 col 38 IdentifierName "U" = U
Line 4 col 13 IdentifierName "bar" = <V extends T, W extends U>() => void
Line 4 col 17 IdentifierName "V" = V
Line 4 col 27 IdentifierName "T" = T
Line 4 col 30 IdentifierName "W" = W
Line 4 col 40 IdentifierName "U" = U
Line 5 col 17 IdentifierName "baz" = <X extends W, Y extends V>(a: X, b: Y) => T
Line 5 col 21 IdentifierName "X" = X
Line 5 col 31 IdentifierName "W" = W
Line 5 col 34 IdentifierName "Y" = Y
Line 5 col 44 IdentifierName "V" = V
Line 5 col 47 IdentifierName "a" = X
Line 5 col 50 IdentifierName "X" = X
Line 5 col 53 IdentifierName "b" = Y
Line 5 col 56 IdentifierName "Y" = Y
Line 5 col 60 IdentifierName "T" = T
Line 6 col 0 AssignmentExpression "x = y" = U
Line 6 col 0 IdentifierName "x" = T
Line 6 col 16 IdentifierName "y" = U
Line 7 col 19 IdentifierName "y" = U
Line 12 col 9 IdentifierName "foo2" = typeof foo2
Line 12 col 14 IdentifierName "U" = U
Line 12 col 24 IdentifierName "T" = T
Line 12 col 27 IdentifierName "T" = T
Line 12 col 30 IdentifierName "x" = T
Line 12 col 33 IdentifierName "T" = T
Line 12 col 36 IdentifierName "y" = U
Line 12 col 39 IdentifierName "U" = U
Line 13 col 13 IdentifierName "bar" = <V extends T, W extends U>() => void
Line 13 col 17 IdentifierName "V" = V
Line 13 col 27 IdentifierName "T" = T
Line 13 col 30 IdentifierName "W" = W
Line 13 col 40 IdentifierName "U" = U
Line 14 col 17 IdentifierName "baz" = <X extends W, Y extends V>(a: X, b: Y) => T
Line 14 col 21 IdentifierName "X" = X
Line 14 col 31 IdentifierName "W" = W
Line 14 col 34 IdentifierName "Y" = Y
Line 14 col 44 IdentifierName "V" = V
Line 14 col 47 IdentifierName "a" = X
Line 14 col 50 IdentifierName "X" = X
Line 14 col 53 IdentifierName "b" = Y
Line 14 col 56 IdentifierName "Y" = Y
Line 14 col 60 IdentifierName "T" = T
Line 15 col 0 AssignmentExpression "x = y" = U
Line 15 col 0 IdentifierName "x" = T
Line 15 col 16 IdentifierName "y" = U
Line 16 col 19 IdentifierName "y" = U
Line 21 col 4 IdentifierName "f" = <T, U extends T>(x: T, y: U) => void
Line 21 col 8 FunctionExpression "function <T, U extends T>(x: T, y: U) {
    function bar<V extends T, W extends U>() {
        var g = function <X extends W, Y extends V>(a: X, b: Y): T {
            x = y;
            return y;
        }
    }
}" = <T, U extends T>(x: T, y: U) => void
Line 21 col 18 IdentifierName "T" = T
Line 21 col 21 IdentifierName "U" = U
Line 21 col 31 IdentifierName "T" = T
Line 21 col 34 IdentifierName "x" = T
Line 21 col 37 IdentifierName "T" = T
Line 21 col 40 IdentifierName "y" = U
Line 21 col 43 IdentifierName "U" = U
Line 22 col 13 IdentifierName "bar" = <V extends T, W extends U>() => void
Line 22 col 17 IdentifierName "V" = V
Line 22 col 27 IdentifierName "T" = T
Line 22 col 30 IdentifierName "W" = W
Line 22 col 40 IdentifierName "U" = U
Line 23 col 12 IdentifierName "g" = <X extends W, Y extends V>(a: X, b: Y) => T
Line 23 col 16 FunctionExpression "function <X extends W, Y extends V>(a: X, b: Y): T {
            x = y;
            return y;
        }" = <X extends W, Y extends V>(a: X, b: Y) => T
Line 23 col 26 IdentifierName "X" = X
Line 23 col 36 IdentifierName "W" = W
Line 23 col 39 IdentifierName "Y" = Y
Line 23 col 49 IdentifierName "V" = V
Line 23 col 52 IdentifierName "a" = X
Line 23 col 55 IdentifierName "X" = X
Line 23 col 58 IdentifierName "b" = Y
Line 23 col 61 IdentifierName "Y" = Y
Line 23 col 65 IdentifierName "T" = T
Line 24 col 0 AssignmentExpression "x = y" = U
Line 24 col 0 IdentifierName "x" = T
Line 24 col 16 IdentifierName "y" = U
Line 25 col 19 IdentifierName "y" = U
Line 30 col 4 IdentifierName "f2" = <U extends T, T>(x: T, y: U) => void
Line 30 col 9 FunctionExpression "function <U extends T, T>(x: T, y: U) {
    function bar<V extends T, W extends U>() {
        var g = function baz<X extends W, Y extends V>(a: X, b: Y): T {
            x = y;
            return y;
        }
    }
}" = <U extends T, T>(x: T, y: U) => void
Line 30 col 19 IdentifierName "U" = U
Line 30 col 29 IdentifierName "T" = T
Line 30 col 32 IdentifierName "T" = T
Line 30 col 35 IdentifierName "x" = T
Line 30 col 38 IdentifierName "T" = T
Line 30 col 41 IdentifierName "y" = U
Line 30 col 44 IdentifierName "U" = U
Line 31 col 13 IdentifierName "bar" = <V extends T, W extends U>() => void
Line 31 col 17 IdentifierName "V" = V
Line 31 col 27 IdentifierName "T" = T
Line 31 col 30 IdentifierName "W" = W
Line 31 col 40 IdentifierName "U" = U
Line 32 col 12 IdentifierName "g" = <X extends W, Y extends V>(a: X, b: Y) => T
Line 32 col 16 FunctionExpression "function baz<X extends W, Y extends V>(a: X, b: Y): T {
            x = y;
            return y;
        }" = <X extends W, Y extends V>(a: X, b: Y) => T
Line 32 col 25 IdentifierName "baz" = <X extends W, Y extends V>(a: X, b: Y) => T
Line 32 col 29 IdentifierName "X" = X
Line 32 col 39 IdentifierName "W" = W
Line 32 col 42 IdentifierName "Y" = Y
Line 32 col 52 IdentifierName "V" = V
Line 32 col 55 IdentifierName "a" = X
Line 32 col 58 IdentifierName "X" = X
Line 32 col 61 IdentifierName "b" = Y
Line 32 col 64 IdentifierName "Y" = Y
Line 32 col 68 IdentifierName "T" = T
Line 33 col 0 AssignmentExpression "x = y" = U
Line 33 col 0 IdentifierName "x" = T
Line 33 col 16 IdentifierName "y" = U
Line 34 col 19 IdentifierName "y" = U
Line 39 col 4 IdentifierName "f3" = <T, U extends T>(x: T, y: U) => void
Line 39 col 9 ParenthesizedArrowFunctionExpression "<T, U extends T>(x: T, y: U) => {
    function bar<V extends T, W extends U>() {
        var g = <X extends W, Y extends V>(a: X, b: Y): T => {
            x = y;
            return y;
        }
    }
}" = <T, U extends T>(x: T, y: U) => void
Line 39 col 10 IdentifierName "T" = T
Line 39 col 13 IdentifierName "U" = U
Line 39 col 23 IdentifierName "T" = T
Line 39 col 26 IdentifierName "x" = T
Line 39 col 29 IdentifierName "T" = T
Line 39 col 32 IdentifierName "y" = U
Line 39 col 35 IdentifierName "U" = U
Line 40 col 13 IdentifierName "bar" = <V extends T, W extends U>() => void
Line 40 col 17 IdentifierName "V" = V
Line 40 col 27 IdentifierName "T" = T
Line 40 col 30 IdentifierName "W" = W
Line 40 col 40 IdentifierName "U" = U
Line 41 col 12 IdentifierName "g" = <X extends W, Y extends V>(a: X, b: Y) => T
Line 41 col 16 ParenthesizedArrowFunctionExpression "<X extends W, Y extends V>(a: X, b: Y): T => {
            x = y;
            return y;
        }" = <X extends W, Y extends V>(a: X, b: Y) => T
Line 41 col 17 IdentifierName "X" = X
Line 41 col 27 IdentifierName "W" = W
Line 41 col 30 IdentifierName "Y" = Y
Line 41 col 40 IdentifierName "V" = V
Line 41 col 43 IdentifierName "a" = X
Line 41 col 46 IdentifierName "X" = X
Line 41 col 49 IdentifierName "b" = Y
Line 41 col 52 IdentifierName "Y" = Y
Line 41 col 56 IdentifierName "T" = T
Line 42 col 0 AssignmentExpression "x = y" = U
Line 42 col 0 IdentifierName "x" = T
Line 42 col 16 IdentifierName "y" = U
Line 43 col 19 IdentifierName "y" = U
Line 48 col 4 IdentifierName "f4" = <U extends T, T>(x: T, y: U) => void
Line 48 col 9 ParenthesizedArrowFunctionExpression "<U extends T, T>(x: T, y: U) => {
    function bar<V extends T, W extends U>() {
        var g = <X extends W, Y extends V>(a: X, b: Y): T => {
            x = y;
            return y;
        }
    }
}" = <U extends T, T>(x: T, y: U) => void
Line 48 col 10 IdentifierName "U" = U
Line 48 col 20 IdentifierName "T" = T
Line 48 col 23 IdentifierName "T" = T
Line 48 col 26 IdentifierName "x" = T
Line 48 col 29 IdentifierName "T" = T
Line 48 col 32 IdentifierName "y" = U
Line 48 col 35 IdentifierName "U" = U
Line 49 col 13 IdentifierName "bar" = <V extends T, W extends U>() => void
Line 49 col 17 IdentifierName "V" = V
Line 49 col 27 IdentifierName "T" = T
Line 49 col 30 IdentifierName "W" = W
Line 49 col 40 IdentifierName "U" = U
Line 50 col 12 IdentifierName "g" = <X extends W, Y extends V>(a: X, b: Y) => T
Line 50 col 16 ParenthesizedArrowFunctionExpression "<X extends W, Y extends V>(a: X, b: Y): T => {
            x = y;
            return y;
        }" = <X extends W, Y extends V>(a: X, b: Y) => T
Line 50 col 17 IdentifierName "X" = X
Line 50 col 27 IdentifierName "W" = W
Line 50 col 30 IdentifierName "Y" = Y
Line 50 col 40 IdentifierName "V" = V
Line 50 col 43 IdentifierName "a" = X
Line 50 col 46 IdentifierName "X" = X
Line 50 col 49 IdentifierName "b" = Y
Line 50 col 52 IdentifierName "Y" = Y
Line 50 col 56 IdentifierName "T" = T
Line 51 col 0 AssignmentExpression "x = y" = U
Line 51 col 0 IdentifierName "x" = T
Line 51 col 16 IdentifierName "y" = U
Line 52 col 19 IdentifierName "y" = U