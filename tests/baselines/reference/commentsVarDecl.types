=== tests/cases/compiler/commentsVarDecl.ts ===

/** Variable comments*/
var myVariable = 10;
>myVariable : number

/** This is another variable comment*/
var anotherVariable = 30;
>anotherVariable : number

// shouldn't appear
var aVar = "";
>aVar : string

/** this is multiline comment
  * All these variables are of number type */
var anotherAnotherVariable = 70;
>anotherAnotherVariable : number

/** Triple slash multiline comment*/
/** another line in the comment*/
/** comment line 2*/
var x = 70;
>x : number

>/** Triple slash comment on the assignement shouldnt be in .d.ts file*/
x = myVariable : number
>/** Triple slash comment on the assignement shouldnt be in .d.ts file*/
x : number

/** Triple slash comment on the assignement shouldnt be in .d.ts file*/
x = myVariable;
>myVariable : number

/** triple slash comment1*/
/** jsdocstyle comment - only this comment should be in .d.ts file*/
var n = 30;
>n : number

/** var deckaration with comment on type as well*/
var y = /** value comment */ 20;
>y : number

/// var deckaration with comment on type as well
var yy =
>yy : number

    /// value comment
    20;

/** comment2 */
var z = /** lambda comment */ (x: number, y: number) => x + y;
>z : (x: number, y: number) => number
>(x: number, y: number) => x + y : (x: number, y: number) => number
>x : number
>y : number
>x + y : number
>x : number
>y : number

var z2: /** type comment*/ (x: number) => string;
>z2 : (x: number) => string
>x : number

var x2 = z2;
>x2 : (x: number) => string
>z2 : (x: number) => string

var n4: (x: number) => string;
>n4 : (x: number) => string
>x : number

n4 = z2;
>n4 = z2 : (x: number) => string
>n4 : (x: number) => string
>z2 : (x: number) => string

