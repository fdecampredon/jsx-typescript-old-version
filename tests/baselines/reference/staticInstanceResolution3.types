=== tests/cases/compiler/staticInstanceResolution3_1.ts ===
<<<<<<< HEAD
Line 1 col 7 IdentifierName "WinJS" = any
Line 2 col 0 InvocationExpression "WinJS.Promise.timeout(10)" = Promise
Line 2 col 0 MemberAccessExpression "WinJS.Promise.timeout" = (delay: number) => Promise
Line 2 col 0 MemberAccessExpression "WinJS.Promise" = { timeout(delay: number): Promise; new(): Promise; }
=======
Line 1 col 7 IdentifierName "WinJS" = WinJS
Line 2 col 0 InvocationExpression "WinJS.Promise.timeout(10)" = "winjs".Promise
Line 2 col 0 MemberAccessExpression "WinJS.Promise.timeout" = (delay: number) => "winjs".Promise
Line 2 col 0 MemberAccessExpression "WinJS.Promise" = { timeout(delay: number): "winjs".Promise; new(): "winjs".Promise; }
>>>>>>> Fix issues that was causing the Type-Writer to emit 'any' for lots of expression *not* of the 'any' type.
Line 2 col 0 IdentifierName "WinJS" = WinJS
Line 2 col 6 IdentifierName "Promise" = { timeout(delay: number): Promise; new(): Promise; }
Line 2 col 14 IdentifierName "timeout" = (delay: number) => Promise
=== tests/cases/compiler/staticInstanceResolution3_0.ts ===
<<<<<<< HEAD
Line 0 col 13 IdentifierName "Promise" = Promise
Line 1 col 11 IdentifierName "timeout" = (delay: number) => Promise
Line 1 col 19 IdentifierName "delay" = any
Line 1 col 35 IdentifierName "Promise" = Promise
=======
Line 1 col 17 IdentifierName "Promise" = "winjs".Promise
Line 2 col 15 IdentifierName "timeout" = (delay: number) => "winjs".Promise
Line 2 col 23 IdentifierName "delay" = number
Line 2 col 39 IdentifierName "Promise" = "winjs".Promise
>>>>>>> Fix issues that was causing the Type-Writer to emit 'any' for lots of expression *not* of the 'any' type.
