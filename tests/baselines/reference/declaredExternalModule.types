=== tests/cases/compiler/declaredExternalModule.ts ===
declare module 'connect' {

    interface connectModule {
>connectModule : connectModule

        (res, req, next): void;
>res : any
>req : any
>next : any

    }

    interface connectExport {
>connectExport : connectExport

>use : (mod: connectModule) => connectExport

        use: (mod: connectModule) => connectExport;
>mod : connectModule
>connectModule : connectModule
>connectExport : connectExport

>listen : (port: number) => void

        listen: (port: number) => void;
>port : number

    }

    var server: {
>server : { test1: connectModule; test2(): connectModule; (): connectExport; }

        (): connectExport;
>connectExport : connectExport

>test1 : connectModule

        test1: connectModule;   // No error
>connectModule : connectModule

>test2 : () => connectModule

        test2(): connectModule; // ERROR: Return type of method from exported interface has or is using private type ''connect'.connectModule'.
>connectModule : connectModule

    };
}

