==== tests/cases/compiler/subtypingWithStringIndexer3.ts (5 errors) ====
    // Derived type indexer must be subtype of base type indexer
    
    interface Base { foo: string; }
    interface Derived extends Base { bar: string; }
    interface Derived2 extends Derived { baz: string; }
    
    class A {
        [x: string]: Derived;
    }
    
    class B extends A {
          ~
!!! subtypingWithStringIndexer3.ts(11,7): error TS2141: Class 'B' cannot extend class 'A':
!!! 	Index signatures of types 'B' and 'A' are incompatible:
!!! 		Type 'Base' is missing property 'bar' from type 'Derived'.
        [x: string]: Base; // error
    }
    
    class B2 extends A {
        [x: string]: Derived2; // ok
    }
    
    module Generics {
        class A<T extends Derived> {
            [x: string]: T;
        }
    
        class B extends A<Base> {
                        ~~~~~~~
!!! subtypingWithStringIndexer3.ts(24,21): error TS2086: Type 'Base' does not satisfy the constraint 'Derived'.
            [x: string]: Derived; // error
        }
    
        class B2 extends A<Derived> {
            [x: string]: Derived2; // ok
        }
    
        class B3<T extends Derived> extends A<T> {
              ~~
!!! subtypingWithStringIndexer3.ts(32,11): error TS2141: Class 'Generics.B3<T>' cannot extend class 'Generics.A<T>':
!!! 	Index signatures of types 'B3<T>' and 'A<T>' are incompatible.
            [x: string]: Base; // error
        }
    
        class B4<T extends Derived> extends A<T> {
              ~~
!!! subtypingWithStringIndexer3.ts(36,11): error TS2141: Class 'Generics.B4<T>' cannot extend class 'Generics.A<T>':
!!! 	Index signatures of types 'B4<T>' and 'A<T>' are incompatible.
            [x: string]: Derived; // error
        }
    
        class B5<T extends Derived2> extends A<T> {
              ~~
!!! subtypingWithStringIndexer3.ts(40,11): error TS2141: Class 'Generics.B5<T>' cannot extend class 'Generics.A<T>':
!!! 	Index signatures of types 'B5<T>' and 'A<T>' are incompatible.
            [x: string]: Derived2; // error
        }
    }