=== tests/cases/compiler/commaOperatorWithSecondOperandBooleanType.ts ===
Line 0 col 4 IdentifierName "ANY" = any
Line 1 col 4 IdentifierName "BOOLEAN" = boolean
Line 2 col 4 IdentifierName "NUMBER" = number
Line 3 col 4 IdentifierName "STRING" = string
Line 4 col 4 IdentifierName "OBJECT" = Object
Line 4 col 12 IdentifierName "Object" = Object
Line 5 col 0 CommaExpression "//The second operand type is boolean
ANY, BOOLEAN" = boolean
Line 5 col 0 IdentifierName "//The second operand type is boolean
ANY" = any
Line 7 col 5 IdentifierName "BOOLEAN" = boolean
Line 8 col 0 CommaExpression "BOOLEAN, BOOLEAN" = boolean
Line 8 col 0 IdentifierName "BOOLEAN" = boolean
Line 8 col 9 IdentifierName "BOOLEAN" = boolean
Line 9 col 0 CommaExpression "NUMBER, BOOLEAN" = boolean
Line 9 col 0 IdentifierName "NUMBER" = number
Line 9 col 8 IdentifierName "BOOLEAN" = boolean
Line 10 col 0 CommaExpression "STRING, BOOLEAN" = boolean
Line 10 col 0 IdentifierName "STRING" = string
Line 10 col 8 IdentifierName "BOOLEAN" = boolean
Line 11 col 0 CommaExpression "OBJECT, BOOLEAN" = boolean
Line 11 col 0 IdentifierName "OBJECT" = Object
Line 11 col 8 IdentifierName "BOOLEAN" = boolean
Line 14 col 4 IdentifierName "resultIsBoolean1" = boolean
Line 14 col 23 ParenthesizedExpression "(ANY, BOOLEAN)" = boolean
Line 14 col 24 CommaExpression "ANY, BOOLEAN" = boolean
Line 14 col 24 IdentifierName "ANY" = any
Line 14 col 29 IdentifierName "BOOLEAN" = boolean
Line 15 col 4 IdentifierName "resultIsBoolean2" = boolean
Line 15 col 23 ParenthesizedExpression "(BOOLEAN, BOOLEAN)" = boolean
Line 15 col 24 CommaExpression "BOOLEAN, BOOLEAN" = boolean
Line 15 col 24 IdentifierName "BOOLEAN" = boolean
Line 15 col 33 IdentifierName "BOOLEAN" = boolean
Line 16 col 4 IdentifierName "resultIsBoolean3" = boolean
Line 16 col 23 ParenthesizedExpression "(NUMBER, BOOLEAN)" = boolean
Line 16 col 24 CommaExpression "NUMBER, BOOLEAN" = boolean
Line 16 col 24 IdentifierName "NUMBER" = number
Line 16 col 32 IdentifierName "BOOLEAN" = boolean
Line 17 col 4 IdentifierName "resultIsBoolean4" = boolean
Line 17 col 23 ParenthesizedExpression "(STRING, BOOLEAN)" = boolean
Line 17 col 24 CommaExpression "STRING, BOOLEAN" = boolean
Line 17 col 24 IdentifierName "STRING" = string
Line 17 col 32 IdentifierName "BOOLEAN" = boolean
Line 18 col 4 IdentifierName "resultIsBoolean5" = boolean
Line 18 col 23 ParenthesizedExpression "(OBJECT, BOOLEAN)" = boolean
Line 18 col 24 CommaExpression "OBJECT, BOOLEAN" = boolean
Line 18 col 24 IdentifierName "OBJECT" = Object
Line 18 col 32 IdentifierName "BOOLEAN" = boolean
Line 19 col 0 CommaExpression "//Literal and expression
null, BOOLEAN" = boolean
Line 21 col 6 IdentifierName "BOOLEAN" = boolean
Line 22 col 0 CommaExpression "ANY = undefined, BOOLEAN" = boolean
Line 22 col 0 AssignmentExpression "ANY = undefined" = any
Line 22 col 0 IdentifierName "ANY" = any
Line 22 col 6 IdentifierName "undefined" = any
Line 22 col 17 IdentifierName "BOOLEAN" = boolean
Line 23 col 0 CommaExpression "1, true" = boolean
Line 24 col 0 CommaExpression "++NUMBER, true" = boolean
Line 24 col 0 PreIncrementExpression "++NUMBER" = number
Line 24 col 2 IdentifierName "NUMBER" = number
Line 25 col 0 CommaExpression "[1, 2, 3], !BOOLEAN" = boolean
Line 25 col 0 ArrayLiteralExpression "[1, 2, 3]" = number[]
Line 25 col 11 LogicalNotExpression "!BOOLEAN" = boolean
Line 25 col 12 IdentifierName "BOOLEAN" = boolean
Line 26 col 0 CommaExpression "OBJECT = [1, 2, 3], BOOLEAN = false" = boolean
Line 26 col 0 AssignmentExpression "OBJECT = [1, 2, 3]" = number[]
Line 26 col 0 IdentifierName "OBJECT" = Object
Line 26 col 9 ArrayLiteralExpression "[1, 2, 3]" = number[]
Line 26 col 20 AssignmentExpression "BOOLEAN = false" = boolean
Line 26 col 20 IdentifierName "BOOLEAN" = boolean
Line 28 col 4 IdentifierName "resultIsBoolean6" = boolean
Line 28 col 23 ParenthesizedExpression "(null, BOOLEAN)" = boolean
Line 28 col 24 CommaExpression "null, BOOLEAN" = boolean
Line 28 col 30 IdentifierName "BOOLEAN" = boolean
Line 29 col 4 IdentifierName "resultIsBoolean7" = boolean
Line 29 col 23 ParenthesizedExpression "(ANY = undefined, BOOLEAN)" = boolean
Line 29 col 24 CommaExpression "ANY = undefined, BOOLEAN" = boolean
Line 29 col 24 AssignmentExpression "ANY = undefined" = any
Line 29 col 24 IdentifierName "ANY" = any
Line 29 col 30 IdentifierName "undefined" = any
Line 29 col 41 IdentifierName "BOOLEAN" = boolean
Line 30 col 4 IdentifierName "resultIsBoolean8" = boolean
Line 30 col 23 ParenthesizedExpression "(1, true)" = boolean
Line 30 col 24 CommaExpression "1, true" = boolean
Line 31 col 4 IdentifierName "resultIsBoolean9" = boolean
Line 31 col 23 ParenthesizedExpression "(++NUMBER, true)" = boolean
Line 31 col 24 CommaExpression "++NUMBER, true" = boolean
Line 31 col 24 PreIncrementExpression "++NUMBER" = number
Line 31 col 26 IdentifierName "NUMBER" = number
Line 32 col 4 IdentifierName "resultIsBoolean10" = boolean
Line 32 col 24 ParenthesizedExpression "([1, 2, 3], !BOOLEAN)" = boolean
Line 32 col 25 CommaExpression "[1, 2, 3], !BOOLEAN" = boolean
Line 32 col 25 ArrayLiteralExpression "[1, 2, 3]" = number[]
Line 32 col 36 LogicalNotExpression "!BOOLEAN" = boolean
Line 32 col 37 IdentifierName "BOOLEAN" = boolean
Line 33 col 4 IdentifierName "resultIsBoolean11" = boolean
Line 33 col 24 ParenthesizedExpression "(OBJECT = [1, 2, 3], BOOLEAN = false)" = boolean
Line 33 col 25 CommaExpression "OBJECT = [1, 2, 3], BOOLEAN = false" = boolean
Line 33 col 25 AssignmentExpression "OBJECT = [1, 2, 3]" = number[]
Line 33 col 25 IdentifierName "OBJECT" = Object
Line 33 col 34 ArrayLiteralExpression "[1, 2, 3]" = number[]
Line 33 col 45 AssignmentExpression "BOOLEAN = false" = boolean
Line 33 col 45 IdentifierName "BOOLEAN" = boolean