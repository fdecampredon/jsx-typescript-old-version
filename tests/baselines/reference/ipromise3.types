=== tests/cases/compiler/ipromise3.ts ===
Line 0 col 10 IdentifierName "IPromise3" = IPromise3<T>
Line 0 col 20 IdentifierName "T" = T
Line 1 col 0 IdentifierName "then" = { <U>(success?: (value: T) => IPromise3<U>, error?: (error: any) => IPromise3<U>, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: T) => IPromise3<U>, error?: (error: any) => U, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: T) => U, error?: (error: any) => IPromise3<U>, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: T) => U, error?: (error: any) => U, progress?: (progress: any) => void): IPromise3<U>; }
Line 1 col 9 IdentifierName "U" = U
Line 1 col 12 IdentifierName "success" = (value: T) => IPromise3<U>
Line 1 col 23 IdentifierName "value" = T
Line 1 col 30 IdentifierName "T" = T
Line 1 col 36 IdentifierName "IPromise3" = IPromise3<T>
Line 1 col 46 IdentifierName "U" = U
Line 1 col 50 IdentifierName "error" = (error: any) => IPromise3<U>
Line 1 col 59 IdentifierName "error" = any
Line 1 col 74 IdentifierName "IPromise3" = IPromise3<T>
Line 1 col 84 IdentifierName "U" = U
Line 1 col 88 IdentifierName "progress" = (progress: any) => void
Line 1 col 100 IdentifierName "progress" = any
Line 1 col 126 IdentifierName "IPromise3" = IPromise3<T>
Line 1 col 136 IdentifierName "U" = U
Line 2 col 0 IdentifierName "then" = { <U>(success?: (value: T) => IPromise3<U>, error?: (error: any) => IPromise3<U>, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: T) => IPromise3<U>, error?: (error: any) => U, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: T) => U, error?: (error: any) => IPromise3<U>, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: T) => U, error?: (error: any) => U, progress?: (progress: any) => void): IPromise3<U>; }
Line 2 col 9 IdentifierName "U" = U
Line 2 col 12 IdentifierName "success" = (value: T) => IPromise3<U>
Line 2 col 23 IdentifierName "value" = T
Line 2 col 30 IdentifierName "T" = T
Line 2 col 36 IdentifierName "IPromise3" = IPromise3<T>
Line 2 col 46 IdentifierName "U" = U
Line 2 col 50 IdentifierName "error" = (error: any) => U
Line 2 col 59 IdentifierName "error" = any
Line 2 col 74 IdentifierName "U" = U
Line 2 col 77 IdentifierName "progress" = (progress: any) => void
Line 2 col 89 IdentifierName "progress" = any
Line 2 col 115 IdentifierName "IPromise3" = IPromise3<T>
Line 2 col 125 IdentifierName "U" = U
Line 3 col 0 IdentifierName "then" = { <U>(success?: (value: T) => IPromise3<U>, error?: (error: any) => IPromise3<U>, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: T) => IPromise3<U>, error?: (error: any) => U, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: T) => U, error?: (error: any) => IPromise3<U>, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: T) => U, error?: (error: any) => U, progress?: (progress: any) => void): IPromise3<U>; }
Line 3 col 9 IdentifierName "U" = U
Line 3 col 12 IdentifierName "success" = (value: T) => U
Line 3 col 23 IdentifierName "value" = T
Line 3 col 30 IdentifierName "T" = T
Line 3 col 36 IdentifierName "U" = U
Line 3 col 39 IdentifierName "error" = (error: any) => IPromise3<U>
Line 3 col 48 IdentifierName "error" = any
Line 3 col 63 IdentifierName "IPromise3" = IPromise3<T>
Line 3 col 73 IdentifierName "U" = U
Line 3 col 77 IdentifierName "progress" = (progress: any) => void
Line 3 col 89 IdentifierName "progress" = any
Line 3 col 115 IdentifierName "IPromise3" = IPromise3<T>
Line 3 col 125 IdentifierName "U" = U
Line 4 col 0 IdentifierName "then" = { <U>(success?: (value: T) => IPromise3<U>, error?: (error: any) => IPromise3<U>, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: T) => IPromise3<U>, error?: (error: any) => U, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: T) => U, error?: (error: any) => IPromise3<U>, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: T) => U, error?: (error: any) => U, progress?: (progress: any) => void): IPromise3<U>; }
Line 4 col 9 IdentifierName "U" = U
Line 4 col 12 IdentifierName "success" = (value: T) => U
Line 4 col 23 IdentifierName "value" = T
Line 4 col 30 IdentifierName "T" = T
Line 4 col 36 IdentifierName "U" = U
Line 4 col 39 IdentifierName "error" = (error: any) => U
Line 4 col 48 IdentifierName "error" = any
Line 4 col 63 IdentifierName "U" = U
Line 4 col 66 IdentifierName "progress" = (progress: any) => void
Line 4 col 78 IdentifierName "progress" = any
Line 4 col 104 IdentifierName "IPromise3" = IPromise3<T>
Line 4 col 114 IdentifierName "U" = U
Line 5 col 0 IdentifierName "done" = <U>(success?: (value: T) => any, error?: (error: any) => any, progress?: (progress: any) => void) => void
Line 5 col 11 IdentifierName "U" = U
Line 5 col 14 IdentifierName "success" = (value: T) => any
Line 5 col 25 IdentifierName "value" = T
Line 5 col 32 IdentifierName "T" = T
Line 5 col 43 IdentifierName "error" = (error: any) => any
Line 5 col 52 IdentifierName "error" = any
Line 5 col 72 IdentifierName "progress" = (progress: any) => void
Line 5 col 84 IdentifierName "progress" = any
Line 7 col 4 IdentifierName "p1" = IPromise3<string>
Line 7 col 8 IdentifierName "IPromise3" = IPromise3<T>
Line 8 col 4 IdentifierName "p2" = IPromise3<string>
Line 8 col 8 IdentifierName "IPromise3" = IPromise3<T>
Line 8 col 28 InvocationExpression "p1.then(function (x) {
    return x;
})" = IPromise3<string>
Line 8 col 28 MemberAccessExpression "p1.then" = { <U>(success?: (value: string) => IPromise3<U>, error?: (error: any) => IPromise3<U>, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: string) => IPromise3<U>, error?: (error: any) => U, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: string) => U, error?: (error: any) => IPromise3<U>, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: string) => U, error?: (error: any) => U, progress?: (progress: any) => void): IPromise3<U>; }
Line 8 col 28 IdentifierName "p1" = IPromise3<string>
Line 8 col 31 IdentifierName "then" = { <U>(success?: (value: string) => IPromise3<U>, error?: (error: any) => IPromise3<U>, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: string) => IPromise3<U>, error?: (error: any) => U, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: string) => U, error?: (error: any) => IPromise3<U>, progress?: (progress: any) => void): IPromise3<U>; <U>(success?: (value: string) => U, error?: (error: any) => U, progress?: (progress: any) => void): IPromise3<U>; }
Line 8 col 36 FunctionExpression "function (x) {
    return x;
}" = (x: string) => string
Line 8 col 46 IdentifierName "x" = string
Line 9 col 11 IdentifierName "x" = string