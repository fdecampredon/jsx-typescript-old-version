=== tests/cases/compiler/derivedClassOverridesPublicMembers.ts ===
Line 0 col 4 IdentifierName "x" = { foo: string; }
Line 0 col 9 IdentifierName "foo" = string
Line 1 col 4 IdentifierName "y" = { foo: string; bar: string; }
Line 1 col 9 IdentifierName "foo" = string
Line 1 col 22 IdentifierName "bar" = string
Line 3 col 6 IdentifierName "Base" = Base
Line 4 col 0 IdentifierName "a" = { foo: string; }
Line 4 col 14 IdentifierName "x" = { foo: string; }
Line 5 col 0 IdentifierName "b" = (a: { foo: string; }) => void
Line 5 col 6 IdentifierName "a" = { foo: string; }
Line 5 col 16 IdentifierName "x" = { foo: string; }
Line 6 col 8 IdentifierName "c" = { foo: string; }
Line 6 col 21 IdentifierName "x" = { foo: string; }
Line 7 col 8 IdentifierName "c" = { foo: string; }
Line 7 col 10 IdentifierName "v" = { foo: string; }
Line 7 col 20 IdentifierName "x" = { foo: string; }
Line 8 col 0 IdentifierName "d" = (a: { foo: string; }) => void
Line 8 col 8 IdentifierName "a" = any
Line 8 col 18 IdentifierName "x" = { foo: string; }
Line 10 col 11 IdentifierName "r" = { foo: string; }
Line 10 col 21 IdentifierName "x" = { foo: string; }
Line 11 col 11 IdentifierName "s" = (a: { foo: string; }) => void
Line 11 col 13 IdentifierName "a" = { foo: string; }
Line 11 col 23 IdentifierName "x" = { foo: string; }
Line 12 col 15 IdentifierName "t" = { foo: string; }
Line 12 col 28 IdentifierName "x" = { foo: string; }
Line 13 col 15 IdentifierName "t" = { foo: string; }
Line 13 col 17 IdentifierName "v" = { foo: string; }
Line 13 col 27 IdentifierName "x" = { foo: string; }
Line 14 col 11 IdentifierName "u" = (a: { foo: string; }) => void
Line 14 col 15 IdentifierName "a" = { foo: string; }
Line 14 col 25 IdentifierName "x" = { foo: string; }
Line 16 col 16 IdentifierName "a" = { foo: string; }
Line 16 col 26 IdentifierName "x" = { foo: string; }
Line 19 col 6 IdentifierName "Derived" = Derived
Line 19 col 22 IdentifierName "Base" = Base
Line 20 col 0 IdentifierName "a" = { foo: string; bar: string; }
Line 20 col 14 IdentifierName "y" = { foo: string; bar: string; }
Line 21 col 0 IdentifierName "b" = (a: { foo: string; bar: string; }) => void
Line 21 col 6 IdentifierName "a" = { foo: string; bar: string; }
Line 21 col 16 IdentifierName "y" = { foo: string; bar: string; }
Line 22 col 8 IdentifierName "c" = { foo: string; bar: string; }
Line 22 col 21 IdentifierName "y" = { foo: string; bar: string; }
Line 23 col 8 IdentifierName "c" = { foo: string; bar: string; }
Line 23 col 10 IdentifierName "v" = { foo: string; bar: string; }
Line 23 col 20 IdentifierName "y" = { foo: string; bar: string; }
Line 24 col 0 IdentifierName "d" = (a: { foo: string; bar: string; }) => void
Line 24 col 8 IdentifierName "a" = any
Line 24 col 18 IdentifierName "y" = { foo: string; bar: string; }
Line 26 col 11 IdentifierName "r" = { foo: string; bar: string; }
Line 26 col 21 IdentifierName "y" = { foo: string; bar: string; }
Line 27 col 11 IdentifierName "s" = (a: { foo: string; bar: string; }) => void
Line 27 col 13 IdentifierName "a" = { foo: string; bar: string; }
Line 27 col 23 IdentifierName "y" = { foo: string; bar: string; }
Line 28 col 15 IdentifierName "t" = { foo: string; bar: string; }
Line 28 col 28 IdentifierName "y" = { foo: string; bar: string; }
Line 29 col 15 IdentifierName "t" = { foo: string; bar: string; }
Line 29 col 17 IdentifierName "a" = { foo: string; bar: string; }
Line 29 col 27 IdentifierName "y" = { foo: string; bar: string; }
Line 30 col 11 IdentifierName "u" = (a: { foo: string; bar: string; }) => void
Line 30 col 15 IdentifierName "a" = { foo: string; bar: string; }
Line 30 col 25 IdentifierName "y" = { foo: string; bar: string; }
Line 32 col 16 IdentifierName "a" = { foo: string; bar: string; }
Line 32 col 26 IdentifierName "y" = { foo: string; bar: string; }
Line 32 col 31 InvocationExpression "super(x)" = void
Line 32 col 37 IdentifierName "x" = { foo: string; }
Line 35 col 4 IdentifierName "d" = Derived
Line 35 col 7 IdentifierName "Derived" = Derived
Line 35 col 17 ObjectCreationExpression "new Derived(y)" = Derived
Line 35 col 21 IdentifierName "Derived" = typeof Derived
Line 35 col 29 IdentifierName "y" = { foo: string; bar: string; }
Line 36 col 4 IdentifierName "r1" = { foo: string; bar: string; }
Line 36 col 9 MemberAccessExpression "d.a" = { foo: string; bar: string; }
Line 36 col 9 IdentifierName "d" = Derived
Line 36 col 11 IdentifierName "a" = { foo: string; bar: string; }
Line 37 col 4 IdentifierName "r2" = void
Line 37 col 9 InvocationExpression "d.b(y)" = void
Line 37 col 9 MemberAccessExpression "d.b" = (a: { foo: string; bar: string; }) => void
Line 37 col 9 IdentifierName "d" = Derived
Line 37 col 11 IdentifierName "b" = (a: { foo: string; bar: string; }) => void
Line 37 col 13 IdentifierName "y" = { foo: string; bar: string; }
Line 38 col 4 IdentifierName "r3" = { foo: string; bar: string; }
Line 38 col 9 MemberAccessExpression "d.c" = { foo: string; bar: string; }
Line 38 col 9 IdentifierName "d" = Derived
Line 38 col 11 IdentifierName "c" = { foo: string; bar: string; }
Line 39 col 4 IdentifierName "r3a" = (a: { foo: string; bar: string; }) => void
Line 39 col 10 MemberAccessExpression "d.d" = (a: { foo: string; bar: string; }) => void
Line 39 col 10 IdentifierName "d" = Derived
Line 39 col 12 IdentifierName "d" = (a: { foo: string; bar: string; }) => void
Line 40 col 0 AssignmentExpression "d.c = y" = { foo: string; bar: string; }
Line 40 col 0 MemberAccessExpression "d.c" = { foo: string; bar: string; }
Line 40 col 0 IdentifierName "d" = Derived
Line 40 col 2 IdentifierName "c" = { foo: string; bar: string; }
Line 40 col 6 IdentifierName "y" = { foo: string; bar: string; }
Line 41 col 4 IdentifierName "r4" = { foo: string; bar: string; }
Line 41 col 9 MemberAccessExpression "Derived.r" = { foo: string; bar: string; }
Line 41 col 9 IdentifierName "Derived" = typeof Derived
Line 41 col 17 IdentifierName "r" = { foo: string; bar: string; }
Line 42 col 4 IdentifierName "r5" = void
Line 42 col 9 InvocationExpression "Derived.s(y)" = void
Line 42 col 9 MemberAccessExpression "Derived.s" = (a: { foo: string; bar: string; }) => void
Line 42 col 9 IdentifierName "Derived" = typeof Derived
Line 42 col 17 IdentifierName "s" = (a: { foo: string; bar: string; }) => void
Line 42 col 19 IdentifierName "y" = { foo: string; bar: string; }
Line 43 col 4 IdentifierName "r6" = { foo: string; bar: string; }
Line 43 col 9 MemberAccessExpression "Derived.t" = { foo: string; bar: string; }
Line 43 col 9 IdentifierName "Derived" = typeof Derived
Line 43 col 17 IdentifierName "t" = { foo: string; bar: string; }
Line 44 col 4 IdentifierName "r6a" = (a: { foo: string; bar: string; }) => void
Line 44 col 10 MemberAccessExpression "Derived.u" = (a: { foo: string; bar: string; }) => void
Line 44 col 10 IdentifierName "Derived" = typeof Derived
Line 44 col 18 IdentifierName "u" = (a: { foo: string; bar: string; }) => void
Line 45 col 0 AssignmentExpression "Derived.t = y" = { foo: string; bar: string; }
Line 45 col 0 MemberAccessExpression "Derived.t" = { foo: string; bar: string; }
Line 45 col 0 IdentifierName "Derived" = typeof Derived
Line 45 col 8 IdentifierName "t" = { foo: string; bar: string; }
Line 45 col 12 IdentifierName "y" = { foo: string; bar: string; }
Line 47 col 6 IdentifierName "Base2" = Base2
Line 48 col 5 IdentifierName "i" = string
Line 48 col 17 IdentifierName "Object" = Object
Line 49 col 5 IdentifierName "i" = number
Line 49 col 24 IdentifierName "x" = { foo: string; }
Line 52 col 6 IdentifierName "Derived2" = Derived2
Line 52 col 23 IdentifierName "Base2" = Base2
Line 53 col 5 IdentifierName "i" = string
Line 53 col 24 IdentifierName "x" = { foo: string; }
Line 54 col 5 IdentifierName "i" = number
Line 54 col 24 IdentifierName "y" = { foo: string; bar: string; }
Line 57 col 4 IdentifierName "d2" = Derived2
Line 57 col 8 IdentifierName "Derived2" = Derived2
Line 58 col 4 IdentifierName "r7" = { foo: string; }
Line 58 col 9 ElementAccessExpression "d2['']" = { foo: string; }
Line 58 col 9 IdentifierName "d2" = Derived2
Line 59 col 4 IdentifierName "r8" = { foo: string; bar: string; }
Line 59 col 9 ElementAccessExpression "d2[1]" = { foo: string; bar: string; }
Line 59 col 9 IdentifierName "d2" = Derived2