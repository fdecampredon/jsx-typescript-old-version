=== tests/cases/compiler/declFileGenericType2.ts ===

declare module templa.mvc {
>templa : templa
>mvc : templa.mvc

    interface IModel {
>IModel : IModel
    }
}
declare module templa.mvc {
>templa : templa
>mvc : templa.mvc

    interface IController<ModelType extends templa.mvc.IModel> {
>IController : IController<ModelType>
>ModelType : ModelType
>templa : templa
>mvc : mvc
>IModel : IModel
    }
}
declare module templa.mvc {
>templa : templa
>mvc : templa.mvc

    class AbstractController<ModelType extends templa.mvc.IModel> implements mvc.IController<ModelType> {
>AbstractController : AbstractController<ModelType>
>ModelType : ModelType
>templa : templa
>mvc : mvc
>IModel : IModel
>mvc : mvc
>IController : IController<ModelType>
>ModelType : ModelType
    }
}
declare module templa.mvc.composite {
>templa : templa
>mvc : templa.mvc
>composite : templa.mvc.composite

    interface ICompositeControllerModel extends mvc.IModel {
>ICompositeControllerModel : ICompositeControllerModel
>mvc : mvc
>IModel : IModel

        getControllers(): mvc.IController<mvc.IModel>[];
>getControllers : () => IController<IModel>[]
>mvc : mvc
>IController : IController<ModelType>
>mvc : mvc
>IModel : IModel
    }
}
module templa.dom.mvc {
>templa : templa
>dom : templa.dom
>mvc : templa.dom.mvc

    export interface IElementController<ModelType extends templa.mvc.IModel> extends templa.mvc.IController<ModelType> {
>IElementController : IElementController<ModelType>
>ModelType : ModelType
>templa : templa
>mvc : templa.mvc
>IModel : templa.mvc.IModel
>templa : templa
>mvc : templa.mvc
>IController : templa.mvc.IController<ModelType>
>ModelType : ModelType
    }
}
// Module
module templa.dom.mvc {
>templa : templa
>dom : templa.dom
>mvc : templa.dom.mvc

    export class AbstractElementController<ModelType extends templa.mvc.IModel> extends templa.mvc.AbstractController<ModelType> implements IElementController<ModelType> {
>AbstractElementController : AbstractElementController<ModelType>
>ModelType : ModelType
>templa : templa
>mvc : templa.mvc
>IModel : templa.mvc.IModel
>templa : templa
>mvc : templa.mvc
>AbstractController : templa.mvc.AbstractController<ModelType>
>ModelType : ModelType
>IElementController : IElementController<ModelType>
>ModelType : ModelType

        constructor() {
            super();
>super() : void
        }
    }
}
// Module
module templa.dom.mvc.composite {
>templa : templa
>dom : templa.dom
>mvc : templa.dom.mvc
>composite : templa.dom.mvc.composite

    export class AbstractCompositeElementController<ModelType extends templa.mvc.composite.ICompositeControllerModel> extends templa.dom.mvc.AbstractElementController<ModelType> {
>AbstractCompositeElementController : AbstractCompositeElementController<ModelType>
>ModelType : ModelType
>templa : templa
>mvc : templa.mvc
>composite : templa.mvc.composite
>ICompositeControllerModel : templa.mvc.composite.ICompositeControllerModel
>templa : templa
>dom : dom
>mvc : mvc
>AbstractElementController : AbstractElementController<ModelType>
>ModelType : ModelType

        public _controllers: templa.mvc.IController<templa.mvc.IModel>[];
>_controllers : templa.mvc.IController<templa.mvc.IModel>[]
>templa : templa
>mvc : templa.mvc
>IController : templa.mvc.IController<ModelType>
>templa : templa
>mvc : templa.mvc
>IModel : templa.mvc.IModel

        constructor() {
            super();
>super() : void

            this._controllers = [];
>this._controllers = [] : templa.mvc.IController<templa.mvc.IModel>[]
>this._controllers : templa.mvc.IController<templa.mvc.IModel>[]
>this : AbstractCompositeElementController<ModelType>
>_controllers : templa.mvc.IController<templa.mvc.IModel>[]
>[] : templa.mvc.IController<templa.mvc.IModel>[]
        }
    }
}

