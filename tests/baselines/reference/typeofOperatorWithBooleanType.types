=== tests/cases/compiler/typeofOperatorWithBooleanType.ts ===
Line 1 col 4 IdentifierName "BOOLEAN" = boolean
Line 3 col 9 IdentifierName "foo" = typeof foo
Line 5 col 6 IdentifierName "A" = A
Line 6 col 11 IdentifierName "a" = boolean
Line 7 col 11 IdentifierName "foo" = () => boolean
Line 9 col 7 IdentifierName "M" = M
Line 10 col 15 IdentifierName "n" = boolean
Line 13 col 4 IdentifierName "objA" = A
Line 13 col 11 ObjectCreationExpression "new A()" = A
Line 13 col 15 IdentifierName "A" = typeof A
Line 16 col 4 IdentifierName "ResultIsString1" = string
Line 16 col 22 TypeOfExpression "typeof BOOLEAN" = string
Line 16 col 29 IdentifierName "BOOLEAN" = boolean
Line 19 col 4 IdentifierName "ResultIsString2" = string
Line 19 col 22 TypeOfExpression "typeof true" = string
Line 20 col 4 IdentifierName "ResultIsString3" = string
Line 20 col 22 TypeOfExpression "typeof { x: true, y: false }" = string
Line 20 col 29 ObjectLiteralExpression "{ x: true, y: false }" = { x: boolean; y: boolean; }
Line 20 col 31 IdentifierName "x" = boolean
Line 20 col 40 IdentifierName "y" = boolean
Line 23 col 4 IdentifierName "ResultIsString4" = string
Line 23 col 22 TypeOfExpression "typeof objA.a" = string
Line 23 col 29 MemberAccessExpression "objA.a" = boolean
Line 23 col 29 IdentifierName "objA" = A
Line 23 col 34 IdentifierName "a" = boolean
Line 24 col 4 IdentifierName "ResultIsString5" = string
Line 24 col 22 TypeOfExpression "typeof M.n" = string
Line 24 col 29 MemberAccessExpression "M.n" = boolean
Line 24 col 29 IdentifierName "M" = typeof M
Line 24 col 31 IdentifierName "n" = boolean
Line 25 col 4 IdentifierName "ResultIsString6" = string
Line 25 col 22 TypeOfExpression "typeof foo()" = string
Line 25 col 29 InvocationExpression "foo()" = boolean
Line 25 col 29 IdentifierName "foo" = typeof foo
Line 26 col 4 IdentifierName "ResultIsString7" = string
Line 26 col 22 TypeOfExpression "typeof A.foo()" = string
Line 26 col 29 InvocationExpression "A.foo()" = boolean
Line 26 col 29 MemberAccessExpression "A.foo" = () => boolean
Line 26 col 29 IdentifierName "A" = typeof A
Line 26 col 31 IdentifierName "foo" = () => boolean
Line 29 col 4 IdentifierName "ResultIsString8" = string
Line 29 col 22 TypeOfExpression "typeof typeof BOOLEAN" = string
Line 29 col 29 TypeOfExpression "typeof BOOLEAN" = string
Line 29 col 36 IdentifierName "BOOLEAN" = boolean
Line 30 col 0 TypeOfExpression "// miss assignment operators
typeof true" = string
Line 33 col 0 TypeOfExpression "typeof BOOLEAN" = string
Line 33 col 7 IdentifierName "BOOLEAN" = boolean
Line 34 col 0 TypeOfExpression "typeof foo()" = string
Line 34 col 7 InvocationExpression "foo()" = boolean
Line 34 col 7 IdentifierName "foo" = typeof foo
Line 35 col 0 CommaExpression "typeof true, false" = boolean
Line 35 col 0 TypeOfExpression "typeof true" = string
Line 36 col 0 TypeOfExpression "typeof objA.a" = string
Line 36 col 7 MemberAccessExpression "objA.a" = boolean
Line 36 col 7 IdentifierName "objA" = A
Line 36 col 12 IdentifierName "a" = boolean
Line 37 col 0 TypeOfExpression "typeof M.n" = string
Line 37 col 7 MemberAccessExpression "M.n" = boolean
Line 37 col 7 IdentifierName "M" = typeof M
Line 37 col 9 IdentifierName "n" = boolean
Line 40 col 4 IdentifierName "z" = boolean
Line 41 col 4 IdentifierName "x" = boolean[]
Line 42 col 4 IdentifierName "r" = () => boolean
Line 43 col 3 TypeOfExpression "typeof BOOLEAN" = string
Line 43 col 10 IdentifierName "BOOLEAN" = boolean
Line 44 col 3 TypeOfExpression "typeof foo" = string
Line 44 col 10 IdentifierName "foo" = typeof foo
Line 45 col 4 IdentifierName "y" = { a: boolean; b: boolean; }
Line 45 col 8 ObjectLiteralExpression "{ a: true, b: false}" = { a: boolean; b: boolean; }
Line 45 col 10 IdentifierName "a" = boolean
Line 45 col 19 IdentifierName "b" = boolean
Line 46 col 3 TypeOfExpression "typeof y.a" = string
Line 46 col 10 MemberAccessExpression "y.a" = boolean
Line 46 col 10 IdentifierName "y" = { a: boolean; b: boolean; }
Line 46 col 12 IdentifierName "a" = boolean
Line 47 col 3 TypeOfExpression "typeof objA.a" = string
Line 47 col 10 MemberAccessExpression "objA.a" = boolean
Line 47 col 10 IdentifierName "objA" = A
Line 47 col 15 IdentifierName "a" = boolean
Line 48 col 3 TypeOfExpression "typeof A.foo" = string
Line 48 col 10 MemberAccessExpression "A.foo" = () => boolean
Line 48 col 10 IdentifierName "A" = typeof A
Line 48 col 12 IdentifierName "foo" = () => boolean
Line 49 col 3 TypeOfExpression "typeof M.n" = string
Line 49 col 10 MemberAccessExpression "M.n" = boolean
Line 49 col 10 IdentifierName "M" = typeof M
Line 49 col 12 IdentifierName "n" = boolean