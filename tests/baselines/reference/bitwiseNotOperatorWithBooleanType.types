=== tests/cases/compiler/bitwiseNotOperatorWithBooleanType.ts ===
Line 1 col 4 IdentifierName "BOOLEAN" = boolean
Line 3 col 9 IdentifierName "foo" = typeof foo
Line 5 col 6 IdentifierName "A" = A
Line 6 col 11 IdentifierName "a" = boolean
Line 7 col 11 IdentifierName "foo" = () => boolean
Line 9 col 7 IdentifierName "M" = M
Line 10 col 15 IdentifierName "n" = boolean
Line 13 col 4 IdentifierName "objA" = A
Line 13 col 11 ObjectCreationExpression "new A()" = A
Line 13 col 15 IdentifierName "A" = typeof A
Line 16 col 4 IdentifierName "ResultIsNumber1" = number
Line 16 col 22 BitwiseNotExpression "~BOOLEAN" = number
Line 16 col 23 IdentifierName "BOOLEAN" = boolean
Line 19 col 4 IdentifierName "ResultIsNumber2" = number
Line 19 col 22 BitwiseNotExpression "~true" = number
Line 20 col 4 IdentifierName "ResultIsNumber3" = number
Line 20 col 22 BitwiseNotExpression "~{ x: true, y: false }" = number
Line 20 col 23 ObjectLiteralExpression "{ x: true, y: false }" = { x: boolean; y: boolean; }
Line 20 col 25 IdentifierName "x" = boolean
Line 20 col 34 IdentifierName "y" = boolean
Line 23 col 4 IdentifierName "ResultIsNumber4" = number
Line 23 col 22 BitwiseNotExpression "~objA.a" = number
Line 23 col 23 MemberAccessExpression "objA.a" = boolean
Line 23 col 23 IdentifierName "objA" = A
Line 23 col 28 IdentifierName "a" = boolean
Line 24 col 4 IdentifierName "ResultIsNumber5" = number
Line 24 col 22 BitwiseNotExpression "~M.n" = number
Line 24 col 23 MemberAccessExpression "M.n" = boolean
Line 24 col 23 IdentifierName "M" = typeof M
Line 24 col 25 IdentifierName "n" = boolean
Line 25 col 4 IdentifierName "ResultIsNumber6" = number
Line 25 col 22 BitwiseNotExpression "~foo()" = number
Line 25 col 23 InvocationExpression "foo()" = boolean
Line 25 col 23 IdentifierName "foo" = typeof foo
Line 26 col 4 IdentifierName "ResultIsNumber7" = number
Line 26 col 22 BitwiseNotExpression "~A.foo()" = number
Line 26 col 23 InvocationExpression "A.foo()" = boolean
Line 26 col 23 MemberAccessExpression "A.foo" = () => boolean
Line 26 col 23 IdentifierName "A" = typeof A
Line 26 col 25 IdentifierName "foo" = () => boolean
Line 29 col 4 IdentifierName "ResultIsNumber8" = number
Line 29 col 22 BitwiseNotExpression "~~BOOLEAN" = number
Line 29 col 23 BitwiseNotExpression "~BOOLEAN" = number
Line 29 col 24 IdentifierName "BOOLEAN" = boolean
Line 30 col 0 BitwiseNotExpression "// miss assignment operators
~true" = number
Line 33 col 0 BitwiseNotExpression "~BOOLEAN" = number
Line 33 col 1 IdentifierName "BOOLEAN" = boolean
Line 34 col 0 BitwiseNotExpression "~foo()" = number
Line 34 col 1 InvocationExpression "foo()" = boolean
Line 34 col 1 IdentifierName "foo" = typeof foo
Line 35 col 0 CommaExpression "~true, false" = boolean
Line 35 col 0 BitwiseNotExpression "~true" = number
Line 36 col 0 BitwiseNotExpression "~objA.a" = number
Line 36 col 1 MemberAccessExpression "objA.a" = boolean
Line 36 col 1 IdentifierName "objA" = A
Line 36 col 6 IdentifierName "a" = boolean
Line 37 col 0 BitwiseNotExpression "~M.n" = number
Line 37 col 1 MemberAccessExpression "M.n" = boolean
Line 37 col 1 IdentifierName "M" = typeof M
Line 37 col 3 IdentifierName "n" = boolean