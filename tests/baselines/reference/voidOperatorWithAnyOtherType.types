=== tests/cases/compiler/voidOperatorWithAnyOtherType.ts ===
Line 2 col 4 IdentifierName "ANY" = any
Line 3 col 4 IdentifierName "ANY1" = any
Line 4 col 4 IdentifierName "ANY2" = any[]
Line 4 col 18 ArrayLiteralExpression "["", ""]" = any[]
Line 5 col 4 IdentifierName "obj" = () => {}
Line 6 col 4 IdentifierName "obj1" = { x: string; y: number; }
Line 6 col 11 ObjectLiteralExpression "{x:"",y:1}" = { x: string; y: number; }
Line 6 col 12 IdentifierName "x" = string
Line 6 col 17 IdentifierName "y" = number
Line 8 col 9 IdentifierName "foo" = typeof foo
Line 9 col 8 IdentifierName "a" = any
Line 10 col 11 IdentifierName "a" = any
Line 12 col 6 IdentifierName "A" = A
Line 13 col 11 IdentifierName "a" = any
Line 14 col 11 IdentifierName "foo" = () => any
Line 15 col 12 IdentifierName "a" = any
Line 16 col 15 IdentifierName "a" = any
Line 19 col 7 IdentifierName "M" = M
Line 20 col 15 IdentifierName "n" = any
Line 22 col 4 IdentifierName "objA" = A
Line 22 col 11 ObjectCreationExpression "new A()" = A
Line 22 col 15 IdentifierName "A" = typeof A
Line 25 col 4 IdentifierName "ResultIsAny1" = any
Line 25 col 19 VoidExpression "void ANY1" = any
Line 25 col 24 IdentifierName "ANY1" = any
Line 26 col 4 IdentifierName "ResultIsAny2" = any
Line 26 col 19 VoidExpression "void ANY2" = any
Line 26 col 24 IdentifierName "ANY2" = any[]
Line 27 col 4 IdentifierName "ResultIsAny3" = any
Line 27 col 19 VoidExpression "void A" = any
Line 27 col 24 IdentifierName "A" = typeof A
Line 28 col 4 IdentifierName "ResultIsAny4" = any
Line 28 col 19 VoidExpression "void M" = any
Line 28 col 24 IdentifierName "M" = typeof M
Line 29 col 4 IdentifierName "ResultIsAny5" = any
Line 29 col 19 VoidExpression "void obj" = any
Line 29 col 24 IdentifierName "obj" = () => {}
Line 30 col 4 IdentifierName "ResultIsAny6" = any
Line 30 col 19 VoidExpression "void obj1" = any
Line 30 col 24 IdentifierName "obj1" = { x: string; y: number; }
Line 33 col 4 IdentifierName "ResultIsAny7" = any
Line 33 col 19 VoidExpression "void undefined" = any
Line 33 col 24 IdentifierName "undefined" = any
Line 34 col 4 IdentifierName "ResultIsAny8" = any
Line 34 col 19 VoidExpression "void null" = any
Line 37 col 4 IdentifierName "ResultIsAny9" = any
Line 37 col 19 VoidExpression "void ANY2[0]" = any
Line 37 col 24 ElementAccessExpression "ANY2[0]" = any
Line 37 col 24 IdentifierName "ANY2" = any[]
Line 38 col 4 IdentifierName "ResultIsAny10" = any
Line 38 col 20 VoidExpression "void obj1.x" = any
Line 38 col 25 MemberAccessExpression "obj1.x" = string
Line 38 col 25 IdentifierName "obj1" = { x: string; y: number; }
Line 38 col 30 IdentifierName "x" = string
Line 39 col 4 IdentifierName "ResultIsAny11" = any
Line 39 col 20 VoidExpression "void obj1.y" = any
Line 39 col 25 MemberAccessExpression "obj1.y" = number
Line 39 col 25 IdentifierName "obj1" = { x: string; y: number; }
Line 39 col 30 IdentifierName "y" = number
Line 40 col 4 IdentifierName "ResultIsAny12" = any
Line 40 col 20 VoidExpression "void objA.a" = any
Line 40 col 25 MemberAccessExpression "objA.a" = any
Line 40 col 25 IdentifierName "objA" = A
Line 40 col 30 IdentifierName "a" = any
Line 41 col 4 IdentifierName "ResultIsAny13" = any
Line 41 col 20 VoidExpression "void M.n" = any
Line 41 col 25 MemberAccessExpression "M.n" = any
Line 41 col 25 IdentifierName "M" = typeof M
Line 41 col 27 IdentifierName "n" = any
Line 42 col 4 IdentifierName "ResultIsAny14" = any
Line 42 col 20 VoidExpression "void foo()" = any
Line 42 col 25 InvocationExpression "foo()" = any
Line 42 col 25 IdentifierName "foo" = typeof foo
Line 43 col 4 IdentifierName "ResultIsAny15" = any
Line 43 col 20 VoidExpression "void A.foo()" = any
Line 43 col 25 InvocationExpression "A.foo()" = any
Line 43 col 25 MemberAccessExpression "A.foo" = () => any
Line 43 col 25 IdentifierName "A" = typeof A
Line 43 col 27 IdentifierName "foo" = () => any
Line 44 col 4 IdentifierName "ResultIsAny16" = any
Line 44 col 20 VoidExpression "void (ANY + ANY1)" = any
Line 44 col 25 ParenthesizedExpression "(ANY + ANY1)" = any
Line 44 col 26 AddExpression "ANY + ANY1" = any
Line 44 col 26 IdentifierName "ANY" = any
Line 44 col 32 IdentifierName "ANY1" = any
Line 45 col 4 IdentifierName "ResultIsAny17" = any
Line 45 col 20 VoidExpression "void (null + undefined)" = any
Line 45 col 25 ParenthesizedExpression "(null + undefined)" = any
Line 45 col 26 AddExpression "null + undefined" = any
Line 45 col 33 IdentifierName "undefined" = any
Line 46 col 4 IdentifierName "ResultIsAny18" = any
Line 46 col 20 VoidExpression "void (null + null)" = any
Line 46 col 25 ParenthesizedExpression "(null + null)" = any
Line 46 col 26 AddExpression "null + null" = any
Line 47 col 4 IdentifierName "ResultIsAny19" = any
Line 47 col 20 VoidExpression "void (undefined + undefined)" = any
Line 47 col 25 ParenthesizedExpression "(undefined + undefined)" = any
Line 47 col 26 AddExpression "undefined + undefined" = any
Line 47 col 26 IdentifierName "undefined" = any
Line 47 col 38 IdentifierName "undefined" = any
Line 50 col 4 IdentifierName "ResultIsAny20" = any
Line 50 col 20 VoidExpression "void void ANY" = any
Line 50 col 25 VoidExpression "void ANY" = any
Line 50 col 30 IdentifierName "ANY" = any
Line 51 col 4 IdentifierName "ResultIsAny21" = any
Line 51 col 20 VoidExpression "void void void (ANY + ANY1)" = any
Line 51 col 25 VoidExpression "void void (ANY + ANY1)" = any
Line 51 col 30 VoidExpression "void (ANY + ANY1)" = any
Line 51 col 35 ParenthesizedExpression "(ANY + ANY1)" = any
Line 51 col 36 AddExpression "ANY + ANY1" = any
Line 51 col 36 IdentifierName "ANY" = any
Line 51 col 42 IdentifierName "ANY1" = any
Line 52 col 0 VoidExpression "// miss assignment operators
void ANY" = any
Line 54 col 5 IdentifierName "ANY" = any
Line 55 col 0 VoidExpression "void ANY1" = any
Line 55 col 5 IdentifierName "ANY1" = any
Line 56 col 0 VoidExpression "void ANY2[0]" = any
Line 56 col 5 ElementAccessExpression "ANY2[0]" = any
Line 56 col 5 IdentifierName "ANY2" = any[]
Line 57 col 0 CommaExpression "void ANY, ANY1" = any
Line 57 col 0 VoidExpression "void ANY" = any
Line 57 col 5 IdentifierName "ANY" = any
Line 57 col 10 IdentifierName "ANY1" = any
Line 58 col 0 VoidExpression "void objA.a" = any
Line 58 col 5 MemberAccessExpression "objA.a" = any
Line 58 col 5 IdentifierName "objA" = A
Line 58 col 10 IdentifierName "a" = any
Line 59 col 0 VoidExpression "void M.n" = any
Line 59 col 5 MemberAccessExpression "M.n" = any
Line 59 col 5 IdentifierName "M" = typeof M
Line 59 col 7 IdentifierName "n" = any