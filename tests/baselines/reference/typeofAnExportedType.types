=== tests/cases/compiler/typeofAnExportedType.ts ===
Line 0 col 11 IdentifierName "x" = number
Line 1 col 11 IdentifierName "r1" = number
Line 1 col 22 IdentifierName "x" = number
Line 2 col 11 IdentifierName "y" = { foo: string; }
Line 2 col 15 ObjectLiteralExpression "{ foo: '' }" = { foo: string; }
Line 2 col 17 IdentifierName "foo" = string
Line 3 col 11 IdentifierName "r2" = { foo: string; }
Line 3 col 22 IdentifierName "y" = { foo: string; }
Line 4 col 13 IdentifierName "C" = C
Line 5 col 0 IdentifierName "foo" = string
Line 7 col 11 IdentifierName "c" = C
Line 7 col 14 IdentifierName "C" = C
Line 8 col 4 IdentifierName "c2" = C
Line 8 col 8 IdentifierName "C" = C
Line 10 col 11 IdentifierName "r3" = { prototype: C; new(): C; }
Line 10 col 22 IdentifierName "C" = { prototype: C; new(): C; }
Line 11 col 11 IdentifierName "r4" = C
Line 11 col 22 IdentifierName "c" = C
Line 12 col 11 IdentifierName "r4b" = C
Line 12 col 23 IdentifierName "c2" = C
Line 14 col 17 IdentifierName "I" = I
Line 15 col 0 IdentifierName "foo" = string
Line 17 col 11 IdentifierName "i" = I
Line 17 col 14 IdentifierName "I" = I
Line 18 col 4 IdentifierName "i2" = I
Line 18 col 8 IdentifierName "I" = I
Line 19 col 11 IdentifierName "r5" = I
Line 19 col 22 IdentifierName "i" = I
Line 20 col 11 IdentifierName "r5" = I
Line 20 col 22 IdentifierName "i2" = I
Line 22 col 14 IdentifierName "M" = M
Line 23 col 15 IdentifierName "foo" = string
Line 24 col 17 IdentifierName "C" = M.C
Line 25 col 0 IdentifierName "foo" = string
Line 28 col 11 IdentifierName "r6" = { foo: string; C: { prototype: M.C; new(): M.C; }; }
Line 28 col 22 IdentifierName "M" = { foo: string; C: { prototype: M.C; new(): M.C; }; }
Line 29 col 11 IdentifierName "r7" = string
Line 29 col 22 IdentifierName "M" = { foo: string; C: { prototype: M.C; new(): M.C; }; }
Line 29 col 24 IdentifierName "foo" = string
Line 31 col 14 IdentifierName "Z" = { foo: string; C: { prototype: M.C; new(): M.C; }; }
Line 31 col 18 IdentifierName "M" = M
Line 32 col 11 IdentifierName "r8" = { foo: string; C: { prototype: M.C; new(): M.C; }; }
Line 32 col 22 IdentifierName "Z" = { foo: string; C: { prototype: M.C; new(): M.C; }; }
Line 33 col 11 IdentifierName "r9" = string
Line 33 col 22 IdentifierName "Z" = { foo: string; C: { prototype: M.C; new(): M.C; }; }
Line 33 col 24 IdentifierName "foo" = string
Line 35 col 12 IdentifierName "E" = E
Line 36 col 0 IdentifierName "A" = E
Line 38 col 11 IdentifierName "r10" = { A: E; [x: number]: string; }
Line 38 col 23 IdentifierName "E" = { A: E; [x: number]: string; }
Line 39 col 11 IdentifierName "r11" = E
Line 39 col 23 IdentifierName "E" = { A: E; [x: number]: string; }
Line 39 col 25 IdentifierName "A" = E
Line 41 col 11 IdentifierName "r12" = any
Line 41 col 23 IdentifierName "r12" = any
Line 43 col 16 IdentifierName "foo" = { y: number; C: { prototype: foo.C; new(): foo.C; }; (): void; }
Line 44 col 14 IdentifierName "foo" = foo
Line 45 col 15 IdentifierName "y" = number
Line 46 col 17 IdentifierName "C" = foo.C
Line 47 col 0 IdentifierName "foo" = string
Line 50 col 11 IdentifierName "r13" = { y: number; C: { prototype: foo.C; new(): foo.C; }; (): void; }
Line 50 col 23 IdentifierName "foo" = { y: number; C: { prototype: foo.C; new(): foo.C; }; (): void; }