=== tests/cases/compiler/objectTypesIdentityWithCallSignaturesDifferingParamCounts2.ts ===
// object types are identical structurally

interface I {
>I : I

    (x: string): string;
>x : string
}

interface I2<T> {
>I2 : I2<T>
>T : T

    (x: T): T;
>x : T
>T : T
>T : T
}

var a: { (x: string, y: string): string }
>a : (x: string, y: string) => string
>x : string
>y : string

function foo2(x: I);
>foo2 : typeof foo2
>x : I
>I : I

function foo2(x: I); // error
>foo2 : typeof foo2
>x : I
>I : I

function foo2(x: any) { }
>foo2 : typeof foo2
>x : any

function foo3(x: typeof a);
>foo3 : typeof foo3
>x : (x: string, y: string) => string
>a : (x: string, y: string) => string

function foo3(x: typeof a); // error
>foo3 : typeof foo3
>x : (x: string, y: string) => string
>a : (x: string, y: string) => string

function foo3(x: any) { }
>foo3 : typeof foo3
>x : any

function foo4(x: I2<string>);
>foo4 : typeof foo4
>x : I2<string>
>I2 : I2<T>

function foo4(x: I2<string>); // error
>foo4 : typeof foo4
>x : I2<string>
>I2 : I2<T>

function foo4(x: any) { }
>foo4 : typeof foo4
>x : any

function foo5(x: I2<string>);
>foo5 : typeof foo5
>x : I2<string>
>I2 : I2<T>

function foo5(x: I2<number>); // ok
>foo5 : typeof foo5
>x : I2<number>
>I2 : I2<T>

function foo5(x: any) { }
>foo5 : typeof foo5
>x : any

function foo13(x: I);
>foo13 : typeof foo13
>x : I
>I : I

function foo13(x: typeof a); // ok
>foo13 : typeof foo13
>x : (x: string, y: string) => string
>a : (x: string, y: string) => string

function foo13(x: any) { }
>foo13 : typeof foo13
>x : any

function foo14(x: I);
>foo14 : typeof foo14
>x : I
>I : I

function foo14(x: I2<string>); // error
>foo14 : typeof foo14
>x : I2<string>
>I2 : I2<T>

function foo14(x: any) { }
>foo14 : typeof foo14
>x : any

function foo14b(x: typeof a);
>foo14b : typeof foo14b
>x : (x: string, y: string) => string
>a : (x: string, y: string) => string

function foo14b(x: I2<string>); // ok
>foo14b : typeof foo14b
>x : I2<string>
>I2 : I2<T>

function foo14b(x: any) { }
>foo14b : typeof foo14b
>x : any

function foo15(x: I);
>foo15 : typeof foo15
>x : I
>I : I

function foo15(x: I2<number>); // ok
>foo15 : typeof foo15
>x : I2<number>
>I2 : I2<T>

function foo15(x: any) { }
>foo15 : typeof foo15
>x : any

