=== tests/cases/compiler/declarationEmit_nameConflicts_0.ts ===
import im = require('declarationEmit_nameConflicts_1');
>im : im

export module M {
>M : M

    export function f() { }
>f : typeof a

    export class C { }
>C : C

    export module N {
>N : c

        export function g() { };
>g : typeof g

        export interface I { }
>I : I
    }

    export import a = M.f;
>a : a
>M : M
>f : typeof a

    export import b = M.C;
>b : b
>M : M
>C : b

    export import c = N;
>c : c
>N : c

    export import d = im;
>d : d
>im : d
}

export module M.P {
>M : M
>P : M.P

    export function f() { }
>f : typeof im

    export class C { }
>C : C

    export module N {
>N : N

        export function g() { };
>g : typeof g

        export interface I { }
>I : I
    }
    export import im = M.P.f;
>im : im
>M : M
>P : P
>f : typeof im

    // Bug 887180: Invalid .d.ts when an aliased entity is referenced, and a different entity is closer in scope
    export var a = M.a; // emitted incorrectly as typeof f
>a : typeof f
>M.a : typeof f
>M : typeof M
>a : typeof f

    export var b = M.b; // ok
>b : typeof M.C
>M.b : typeof M.C
>M : typeof M
>b : typeof M.C

    export var c = M.c; // ok
>c : typeof M.N
>M.c : typeof M.N
>M : typeof M
>c : typeof M.N

    export var g = M.c.g; // ok
>g : typeof M.N.g
>M.c.g : typeof M.N.g
>M.c : typeof M.N
>M : typeof M
>c : typeof M.N
>g : typeof M.N.g

    export var d = M.d; // emitted incorrectly as typeof im
>d : typeof im
>M.d : typeof im
>M : typeof M
>d : typeof im
}

export module M.Q {
>M : M
>Q : M.Q

    export function f() { }
>f : typeof f

    export class C { }
>C : C

    export module N {
>N : N

        export function g() { };
>g : typeof g

        export interface I { }
>I : I
    }
    export interface b extends M.b { } // ok
>b : b
>M : M
>b : M.C

    export interface I extends M.c.I { } // ok
>I : I
>M : M
>c : M.c
>I : M.N.I

    export module c {
>c : c

        export interface I extends M.c.I { } // ok
>I : I
>M : M
>c : M.c
>I : M.N.I
    }
}
=== tests/cases/compiler/declarationEmit_nameConflicts_1.ts ===
function f() { }
>f : typeof f

export = f;
>f : typeof f

