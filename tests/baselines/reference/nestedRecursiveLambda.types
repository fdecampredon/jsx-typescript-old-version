=== tests/cases/compiler/nestedRecursiveLambda.ts ===
function f(a:any) {
>f : typeof f
>a : any

void (r =>(r => r));
>void (r =>(r => r)) : any
>(r =>(r => r)) : (r: any) => (r: any) => any
>r =>(r => r) : (r: any) => (r: any) => any
>r : any
>(r => r) : (r: any) => any
>r => r : (r: any) => any
>r : any
>r : any
}
f((r =>(r => r)));
>f((r =>(r => r))) : void
>f : typeof f
>(r =>(r => r)) : (r: any) => (r: any) => any
>r =>(r => r) : (r: any) => (r: any) => any
>r : any
>(r => r) : (r: any) => any
>r => r : (r: any) => any
>r : any
>r : any

void(r =>(r => r));
>void(r =>(r => r)) : any
>(r =>(r => r)) : (r: any) => (r: any) => any
>r =>(r => r) : (r: any) => (r: any) => any
>r : any
>(r => r) : (r: any) => any
>r => r : (r: any) => any
>r : any
>r : any

[(r =>(r => r))]
>[(r =>(r => r))] : { (r: any): (r: any) => any; }[]
>(r =>(r => r)) : (r: any) => (r: any) => any
>r =>(r => r) : (r: any) => (r: any) => any
>r : any
>(r => r) : (r: any) => any
>r => r : (r: any) => any
>r : any
>r : any

