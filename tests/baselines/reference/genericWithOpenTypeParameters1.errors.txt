==== tests/cases/compiler/genericWithOpenTypeParameters1.ts (4 errors) ====
    class B<T> {
       foo(x: T): T { return null; }
    }
    
    var x: B<number>;
    x.foo(1); // no error
    var f = <T>(x: B<T>) => { return x.foo(1); } // error
                                       ~~~
!!! error TS2082: Supplied parameters do not match any signature of call target:
!!! 	Could not apply type 'T' to argument 1 which is of type 'number'.
                                       ~~~
!!! error TS2087: Could not select overload for 'call' expression.
    var f2 = <T>(x: B<T>) => { return x.foo<T>(1); } // error
                                      ~~~~~~~~~~~
!!! error TS2087: Could not select overload for 'call' expression.
    var f3 = <T>(x: B<T>) => { return x.foo<number>(1); } // error
                                      ~~~~~~~~~~~~~~~~
!!! error TS2087: Could not select overload for 'call' expression.
    var f4 = (x: B<number>) => { return x.foo(1); } // no error
    