=== tests/cases/compiler/declFileObjectLiteralWithAccessors.ts ===
Line 1 col 14 IdentifierName "makePoint" = (x: number) => { b: number; x: number; }
Line 1 col 24 IdentifierName "x" = number
Line 2 col 11 ObjectLiteralExpression "{
        b: 10,
        get x() { return x; },
        set x(a: number) { this.b = a; }
    }" = { b: number; x: number; }
Line 3 col 0 IdentifierName "b" = number
Line 4 col 12 IdentifierName "x" = () => number
Line 4 col 25 IdentifierName "x" = number
Line 5 col 12 IdentifierName "x" = (a: number) => any
Line 5 col 14 IdentifierName "a" = number
Line 5 col 27 AssignmentExpression "this.b = a" = number
Line 5 col 27 MemberAccessExpression "this.b" = any
Line 5 col 27 ThisKeyword "this" = any
Line 5 col 32 IdentifierName "b" = any
Line 5 col 36 IdentifierName "a" = number
Line 8 col 9 IdentifierName "point" = { b: number; x: number; }
Line 8 col 17 InvocationExpression "makePoint(2)" = { b: number; x: number; }
Line 8 col 17 IdentifierName "makePoint" = (x: number) => { b: number; x: number; }
Line 9 col 9 IdentifierName "x" = number
Line 9 col 13 MemberAccessExpression "point.x" = number
Line 9 col 13 IdentifierName "point" = { b: number; x: number; }
Line 9 col 19 IdentifierName "x" = number
Line 10 col 0 AssignmentExpression "point./*3*/x = 30" = number
Line 10 col 0 MemberAccessExpression "point./*3*/x" = number
Line 10 col 0 IdentifierName "point" = { b: number; x: number; }
Line 10 col 11 IdentifierName "x" = number