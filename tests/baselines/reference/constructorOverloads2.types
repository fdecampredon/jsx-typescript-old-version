=== tests/cases/compiler/constructorOverloads2.ts ===
Line 0 col 6 IdentifierName "FooBase" = FooBase
Line 1 col 16 IdentifierName "s" = string
Line 2 col 16 IdentifierName "n" = number
Line 3 col 16 IdentifierName "x" = any
Line 5 col 0 IdentifierName "bar1" = () => void
Line 8 col 6 IdentifierName "Foo" = Foo
Line 8 col 18 IdentifierName "FooBase" = FooBase
Line 9 col 16 IdentifierName "s" = string
Line 10 col 16 IdentifierName "n" = number
Line 11 col 16 IdentifierName "a" = any
Line 12 col 16 IdentifierName "x" = any
Line 12 col 24 IdentifierName "y" = any
Line 13 col 0 InvocationExpression "super(x)" = void
Line 13 col 14 IdentifierName "x" = any
Line 15 col 0 IdentifierName "bar1" = () => void
Line 18 col 4 IdentifierName "f1" = Foo
Line 18 col 9 ObjectCreationExpression "new Foo("hey")" = Foo
Line 18 col 13 IdentifierName "Foo" = typeof Foo
Line 19 col 4 IdentifierName "f2" = Foo
Line 19 col 9 ObjectCreationExpression "new Foo(0)" = Foo
Line 19 col 13 IdentifierName "Foo" = typeof Foo
Line 20 col 4 IdentifierName "f3" = Foo
Line 20 col 9 ObjectCreationExpression "new Foo(f1)" = Foo
Line 20 col 13 IdentifierName "Foo" = typeof Foo
Line 20 col 17 IdentifierName "f1" = Foo
Line 21 col 4 IdentifierName "f4" = Foo
Line 21 col 9 ObjectCreationExpression "new Foo([f1,f2,f3])" = Foo
Line 21 col 13 IdentifierName "Foo" = typeof Foo
Line 21 col 17 ArrayLiteralExpression "[f1,f2,f3]" = Foo[]
Line 21 col 18 IdentifierName "f1" = Foo
Line 21 col 21 IdentifierName "f2" = Foo
Line 21 col 24 IdentifierName "f3" = Foo
Line 22 col 0 InvocationExpression "f1.bar1()" = void
Line 22 col 0 MemberAccessExpression "f1.bar1" = () => void
Line 22 col 0 IdentifierName "f1" = Foo
Line 23 col 3 IdentifierName "bar1" = () => void