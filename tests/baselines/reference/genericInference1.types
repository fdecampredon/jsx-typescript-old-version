=== tests/cases/compiler/genericInference1.ts ===
Line 0 col 0 InvocationExpression "['a', 'b', 'c'].map(x => x.length)" = number[]
Line 0 col 0 MemberAccessExpression "['a', 'b', 'c'].map" = <U>(callbackfn: (value: string, index: number, array: string[]) => U, thisArg?: any) => U[]
Line 0 col 0 ArrayLiteralExpression "['a', 'b', 'c']" = string[]
Line 0 col 16 IdentifierName "map" = <U>(callbackfn: (value: string, index: number, array: string[]) => U, thisArg?: any) => U[]
Line 0 col 20 SimpleArrowFunctionExpression "x => x.length" = (x: string) => number
Line 0 col 20 IdentifierName "x" = string
Line 0 col 25 MemberAccessExpression "x.length" = number
Line 0 col 25 IdentifierName "x" = string
Line 0 col 27 IdentifierName "length" = number