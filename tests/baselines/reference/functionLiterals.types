=== tests/cases/compiler/functionLiterals.ts ===
Line 2 col 4 IdentifierName "b" = { func1(x: number): number; func2: (x: number) => number; func3: (x: number) => number; }
Line 3 col 0 IdentifierName "func1" = (x: number) => number
Line 3 col 10 IdentifierName "x" = number
Line 4 col 0 IdentifierName "func2" = (x: number) => number
Line 4 col 12 IdentifierName "x" = number
Line 5 col 0 IdentifierName "func3" = (x: number) => number
Line 5 col 14 IdentifierName "x" = number
Line 7 col 0 AssignmentExpression "// no errors
b.func1 = b.func2" = (x: number) => number
Line 7 col 0 MemberAccessExpression "// no errors
b.func1" = (x: number) => number
Line 7 col 0 IdentifierName "// no errors
b" = { func1(x: number): number; func2: (x: number) => number; func3: (x: number) => number; }
Line 9 col 2 IdentifierName "func1" = (x: number) => number
Line 9 col 10 MemberAccessExpression "b.func2" = (x: number) => number
Line 9 col 10 IdentifierName "b" = { func1(x: number): number; func2: (x: number) => number; func3: (x: number) => number; }
Line 9 col 12 IdentifierName "func2" = (x: number) => number
Line 10 col 0 AssignmentExpression "b.func1 = b.func3" = (x: number) => number
Line 10 col 0 MemberAccessExpression "b.func1" = (x: number) => number
Line 10 col 0 IdentifierName "b" = { func1(x: number): number; func2: (x: number) => number; func3: (x: number) => number; }
Line 10 col 2 IdentifierName "func1" = (x: number) => number
Line 10 col 10 MemberAccessExpression "b.func3" = (x: number) => number
Line 10 col 10 IdentifierName "b" = { func1(x: number): number; func2: (x: number) => number; func3: (x: number) => number; }
Line 10 col 12 IdentifierName "func3" = (x: number) => number
Line 11 col 0 AssignmentExpression "b.func2 = b.func1" = (x: number) => number
Line 11 col 0 MemberAccessExpression "b.func2" = (x: number) => number
Line 11 col 0 IdentifierName "b" = { func1(x: number): number; func2: (x: number) => number; func3: (x: number) => number; }
Line 11 col 2 IdentifierName "func2" = (x: number) => number
Line 11 col 10 MemberAccessExpression "b.func1" = (x: number) => number
Line 11 col 10 IdentifierName "b" = { func1(x: number): number; func2: (x: number) => number; func3: (x: number) => number; }
Line 11 col 12 IdentifierName "func1" = (x: number) => number
Line 12 col 0 AssignmentExpression "b.func2 = b.func3" = (x: number) => number
Line 12 col 0 MemberAccessExpression "b.func2" = (x: number) => number
Line 12 col 0 IdentifierName "b" = { func1(x: number): number; func2: (x: number) => number; func3: (x: number) => number; }
Line 12 col 2 IdentifierName "func2" = (x: number) => number
Line 12 col 10 MemberAccessExpression "b.func3" = (x: number) => number
Line 12 col 10 IdentifierName "b" = { func1(x: number): number; func2: (x: number) => number; func3: (x: number) => number; }
Line 12 col 12 IdentifierName "func3" = (x: number) => number
Line 13 col 0 AssignmentExpression "b.func3 = b.func1" = (x: number) => number
Line 13 col 0 MemberAccessExpression "b.func3" = (x: number) => number
Line 13 col 0 IdentifierName "b" = { func1(x: number): number; func2: (x: number) => number; func3: (x: number) => number; }
Line 13 col 2 IdentifierName "func3" = (x: number) => number
Line 13 col 10 MemberAccessExpression "b.func1" = (x: number) => number
Line 13 col 10 IdentifierName "b" = { func1(x: number): number; func2: (x: number) => number; func3: (x: number) => number; }
Line 13 col 12 IdentifierName "func1" = (x: number) => number
Line 14 col 0 AssignmentExpression "b.func3 = b.func2" = (x: number) => number
Line 14 col 0 MemberAccessExpression "b.func3" = (x: number) => number
Line 14 col 0 IdentifierName "b" = { func1(x: number): number; func2: (x: number) => number; func3: (x: number) => number; }
Line 14 col 2 IdentifierName "func3" = (x: number) => number
Line 14 col 10 MemberAccessExpression "b.func2" = (x: number) => number
Line 14 col 10 IdentifierName "b" = { func1(x: number): number; func2: (x: number) => number; func3: (x: number) => number; }
Line 14 col 12 IdentifierName "func2" = (x: number) => number
Line 16 col 4 IdentifierName "c" = { func4(x: number): number; func4(s: string): string; func5: { (x: number): number; (s: string): string; }; }
Line 17 col 0 IdentifierName "func4" = { (x: number): number; (s: string): string; }
Line 17 col 10 IdentifierName "x" = number
Line 18 col 0 IdentifierName "func4" = { (x: number): number; (s: string): string; }
Line 18 col 10 IdentifierName "s" = string
Line 19 col 0 IdentifierName "func5" = { (x: number): number; (s: string): string; }
Line 20 col 9 IdentifierName "x" = number
Line 21 col 9 IdentifierName "s" = string
Line 24 col 0 AssignmentExpression "// no errors
c.func4 = c.func5" = { (x: number): number; (s: string): string; }
Line 24 col 0 MemberAccessExpression "// no errors
c.func4" = { (x: number): number; (s: string): string; }
Line 24 col 0 IdentifierName "// no errors
c" = { func4(x: number): number; func4(s: string): string; func5: { (x: number): number; (s: string): string; }; }
Line 26 col 2 IdentifierName "func4" = { (x: number): number; (s: string): string; }
Line 26 col 10 MemberAccessExpression "c.func5" = { (x: number): number; (s: string): string; }
Line 26 col 10 IdentifierName "c" = { func4(x: number): number; func4(s: string): string; func5: { (x: number): number; (s: string): string; }; }
Line 26 col 12 IdentifierName "func5" = { (x: number): number; (s: string): string; }
Line 27 col 0 AssignmentExpression "c.func5 = c.func4" = { (x: number): number; (s: string): string; }
Line 27 col 0 MemberAccessExpression "c.func5" = { (x: number): number; (s: string): string; }
Line 27 col 0 IdentifierName "c" = { func4(x: number): number; func4(s: string): string; func5: { (x: number): number; (s: string): string; }; }
Line 27 col 2 IdentifierName "func5" = { (x: number): number; (s: string): string; }
Line 27 col 10 MemberAccessExpression "c.func4" = { (x: number): number; (s: string): string; }
Line 27 col 10 IdentifierName "c" = { func4(x: number): number; func4(s: string): string; func5: { (x: number): number; (s: string): string; }; }
Line 27 col 12 IdentifierName "func4" = { (x: number): number; (s: string): string; }
Line 30 col 4 IdentifierName "b2" = { func1<T>(x: T): number; func2: <T>(x: T) => number; func3: <T>(x: T) => number; }
Line 31 col 0 IdentifierName "func1" = <T>(x: T) => number
Line 31 col 10 IdentifierName "T" = T
Line 31 col 13 IdentifierName "x" = T
Line 31 col 16 IdentifierName "T" = T
Line 32 col 0 IdentifierName "func2" = <T>(x: T) => number
Line 32 col 12 IdentifierName "T" = T
Line 32 col 15 IdentifierName "x" = T
Line 32 col 18 IdentifierName "T" = T
Line 33 col 0 IdentifierName "func3" = <T>(x: T) => number
Line 33 col 14 IdentifierName "T" = T
Line 33 col 17 IdentifierName "x" = T
Line 33 col 20 IdentifierName "T" = T
Line 35 col 0 AssignmentExpression "// no errors
b2.func1 = b2.func2" = <T>(x: T) => number
Line 35 col 0 MemberAccessExpression "// no errors
b2.func1" = <T>(x: T) => number
Line 35 col 0 IdentifierName "// no errors
b2" = { func1<T>(x: T): number; func2: <T>(x: T) => number; func3: <T>(x: T) => number; }
Line 37 col 3 IdentifierName "func1" = <T>(x: T) => number
Line 37 col 11 MemberAccessExpression "b2.func2" = <T>(x: T) => number
Line 37 col 11 IdentifierName "b2" = { func1<T>(x: T): number; func2: <T>(x: T) => number; func3: <T>(x: T) => number; }
Line 37 col 14 IdentifierName "func2" = <T>(x: T) => number
Line 38 col 0 AssignmentExpression "b2.func1 = b2.func3" = <T>(x: T) => number
Line 38 col 0 MemberAccessExpression "b2.func1" = <T>(x: T) => number
Line 38 col 0 IdentifierName "b2" = { func1<T>(x: T): number; func2: <T>(x: T) => number; func3: <T>(x: T) => number; }
Line 38 col 3 IdentifierName "func1" = <T>(x: T) => number
Line 38 col 11 MemberAccessExpression "b2.func3" = <T>(x: T) => number
Line 38 col 11 IdentifierName "b2" = { func1<T>(x: T): number; func2: <T>(x: T) => number; func3: <T>(x: T) => number; }
Line 38 col 14 IdentifierName "func3" = <T>(x: T) => number
Line 39 col 0 AssignmentExpression "b2.func2 = b2.func1" = <T>(x: T) => number
Line 39 col 0 MemberAccessExpression "b2.func2" = <T>(x: T) => number
Line 39 col 0 IdentifierName "b2" = { func1<T>(x: T): number; func2: <T>(x: T) => number; func3: <T>(x: T) => number; }
Line 39 col 3 IdentifierName "func2" = <T>(x: T) => number
Line 39 col 11 MemberAccessExpression "b2.func1" = <T>(x: T) => number
Line 39 col 11 IdentifierName "b2" = { func1<T>(x: T): number; func2: <T>(x: T) => number; func3: <T>(x: T) => number; }
Line 39 col 14 IdentifierName "func1" = <T>(x: T) => number
Line 40 col 0 AssignmentExpression "b2.func2 = b2.func3" = <T>(x: T) => number
Line 40 col 0 MemberAccessExpression "b2.func2" = <T>(x: T) => number
Line 40 col 0 IdentifierName "b2" = { func1<T>(x: T): number; func2: <T>(x: T) => number; func3: <T>(x: T) => number; }
Line 40 col 3 IdentifierName "func2" = <T>(x: T) => number
Line 40 col 11 MemberAccessExpression "b2.func3" = <T>(x: T) => number
Line 40 col 11 IdentifierName "b2" = { func1<T>(x: T): number; func2: <T>(x: T) => number; func3: <T>(x: T) => number; }
Line 40 col 14 IdentifierName "func3" = <T>(x: T) => number
Line 41 col 0 AssignmentExpression "b2.func3 = b2.func1" = <T>(x: T) => number
Line 41 col 0 MemberAccessExpression "b2.func3" = <T>(x: T) => number
Line 41 col 0 IdentifierName "b2" = { func1<T>(x: T): number; func2: <T>(x: T) => number; func3: <T>(x: T) => number; }
Line 41 col 3 IdentifierName "func3" = <T>(x: T) => number
Line 41 col 11 MemberAccessExpression "b2.func1" = <T>(x: T) => number
Line 41 col 11 IdentifierName "b2" = { func1<T>(x: T): number; func2: <T>(x: T) => number; func3: <T>(x: T) => number; }
Line 41 col 14 IdentifierName "func1" = <T>(x: T) => number
Line 42 col 0 AssignmentExpression "b2.func3 = b2.func2" = <T>(x: T) => number
Line 42 col 0 MemberAccessExpression "b2.func3" = <T>(x: T) => number
Line 42 col 0 IdentifierName "b2" = { func1<T>(x: T): number; func2: <T>(x: T) => number; func3: <T>(x: T) => number; }
Line 42 col 3 IdentifierName "func3" = <T>(x: T) => number
Line 42 col 11 MemberAccessExpression "b2.func2" = <T>(x: T) => number
Line 42 col 11 IdentifierName "b2" = { func1<T>(x: T): number; func2: <T>(x: T) => number; func3: <T>(x: T) => number; }
Line 42 col 14 IdentifierName "func2" = <T>(x: T) => number
Line 44 col 4 IdentifierName "c2" = { func4<T>(x: T): number; func4<T>(s: T): string; func5: { <T>(x: T): number; <T>(s: T): string; }; }
Line 45 col 0 IdentifierName "func4" = { <T>(x: T): number; <T>(s: T): string; }
Line 45 col 10 IdentifierName "T" = T
Line 45 col 13 IdentifierName "x" = T
Line 45 col 16 IdentifierName "T" = T
Line 46 col 0 IdentifierName "func4" = { <T>(x: T): number; <T>(s: T): string; }
Line 46 col 10 IdentifierName "T" = T
Line 46 col 13 IdentifierName "s" = T
Line 46 col 16 IdentifierName "T" = T
Line 47 col 0 IdentifierName "func5" = { <T>(x: T): number; <T>(s: T): string; }
Line 48 col 9 IdentifierName "T" = T
Line 48 col 12 IdentifierName "x" = T
Line 48 col 15 IdentifierName "T" = T
Line 49 col 9 IdentifierName "T" = T
Line 49 col 12 IdentifierName "s" = T
Line 49 col 15 IdentifierName "T" = T
Line 52 col 0 AssignmentExpression "// no errors
c2.func4 = c2.func5" = { <T>(x: T): number; <T>(s: T): string; }
Line 52 col 0 MemberAccessExpression "// no errors
c2.func4" = { <T>(x: T): number; <T>(s: T): string; }
Line 52 col 0 IdentifierName "// no errors
c2" = { func4<T>(x: T): number; func4<T>(s: T): string; func5: { <T>(x: T): number; <T>(s: T): string; }; }
Line 54 col 3 IdentifierName "func4" = { <T>(x: T): number; <T>(s: T): string; }
Line 54 col 11 MemberAccessExpression "c2.func5" = { <T>(x: T): number; <T>(s: T): string; }
Line 54 col 11 IdentifierName "c2" = { func4<T>(x: T): number; func4<T>(s: T): string; func5: { <T>(x: T): number; <T>(s: T): string; }; }
Line 54 col 14 IdentifierName "func5" = { <T>(x: T): number; <T>(s: T): string; }
Line 55 col 0 AssignmentExpression "c2.func5 = c2.func4" = { <T>(x: T): number; <T>(s: T): string; }
Line 55 col 0 MemberAccessExpression "c2.func5" = { <T>(x: T): number; <T>(s: T): string; }
Line 55 col 0 IdentifierName "c2" = { func4<T>(x: T): number; func4<T>(s: T): string; func5: { <T>(x: T): number; <T>(s: T): string; }; }
Line 55 col 3 IdentifierName "func5" = { <T>(x: T): number; <T>(s: T): string; }
Line 55 col 11 MemberAccessExpression "c2.func4" = { <T>(x: T): number; <T>(s: T): string; }
Line 55 col 11 IdentifierName "c2" = { func4<T>(x: T): number; func4<T>(s: T): string; func5: { <T>(x: T): number; <T>(s: T): string; }; }
Line 55 col 14 IdentifierName "func4" = { <T>(x: T): number; <T>(s: T): string; }