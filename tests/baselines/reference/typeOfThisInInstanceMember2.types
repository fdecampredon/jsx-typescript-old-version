=== tests/cases/compiler/typeOfThisInInstanceMember2.ts ===
Line 0 col 6 IdentifierName "C" = C<T>
Line 0 col 8 IdentifierName "T" = T
Line 1 col 0 IdentifierName "x" = C<T>
Line 1 col 8 ThisKeyword "this" = C<T>
Line 2 col 0 IdentifierName "foo" = () => C<T>
Line 3 col 15 ThisKeyword "this" = C<T>
Line 5 col 16 IdentifierName "x" = T
Line 5 col 19 IdentifierName "T" = T
Line 6 col 12 IdentifierName "t" = C<T>
Line 6 col 16 ThisKeyword "this" = C<T>
Line 7 col 0 MemberAccessExpression "t.x" = C<T>
Line 7 col 0 IdentifierName "t" = C<T>
Line 7 col 10 IdentifierName "x" = C<T>
Line 8 col 0 MemberAccessExpression "t.y" = C<T>
Line 8 col 0 IdentifierName "t" = C<T>
Line 8 col 10 IdentifierName "y" = C<T>
Line 9 col 0 MemberAccessExpression "t.z" = T
Line 9 col 0 IdentifierName "t" = C<T>
Line 9 col 10 IdentifierName "z" = T
Line 10 col 12 IdentifierName "r" = C<T>
Line 10 col 16 InvocationExpression "t.foo()" = C<T>
Line 10 col 16 MemberAccessExpression "t.foo" = () => C<T>
Line 10 col 16 IdentifierName "t" = C<T>
Line 10 col 18 IdentifierName "foo" = () => C<T>
Line 13 col 8 IdentifierName "y" = C<T>
Line 14 col 15 ThisKeyword "this" = C<T>
Line 16 col 0 IdentifierName "z" = T
Line 17 col 7 IdentifierName "T" = T
Line 20 col 4 IdentifierName "c" = C<string>
Line 20 col 7 IdentifierName "C" = C<T>
Line 22 col 4 IdentifierName "r" = C<string>
Line 22 col 8 MemberAccessExpression "c.x" = C<string>
Line 22 col 8 IdentifierName "c" = C<string>
Line 22 col 10 IdentifierName "x" = C<string>
Line 23 col 4 IdentifierName "ra" = C<string>
Line 23 col 9 MemberAccessExpression "c.x.x.x" = C<string>
Line 23 col 9 MemberAccessExpression "c.x.x" = C<string>
Line 23 col 9 MemberAccessExpression "c.x" = C<string>
Line 23 col 9 IdentifierName "c" = C<string>
Line 23 col 11 IdentifierName "x" = C<string>
Line 23 col 13 IdentifierName "x" = C<string>
Line 23 col 15 IdentifierName "x" = C<string>
Line 24 col 4 IdentifierName "r2" = C<string>
Line 24 col 9 MemberAccessExpression "c.y" = C<string>
Line 24 col 9 IdentifierName "c" = C<string>
Line 24 col 11 IdentifierName "y" = C<string>
Line 25 col 4 IdentifierName "r3" = C<string>
Line 25 col 9 InvocationExpression "c.foo()" = C<string>
Line 25 col 9 MemberAccessExpression "c.foo" = () => C<string>
Line 25 col 9 IdentifierName "c" = C<string>
Line 25 col 11 IdentifierName "foo" = () => C<string>
Line 26 col 4 IdentifierName "r4" = string
Line 26 col 9 MemberAccessExpression "c.z" = string
Line 26 col 9 IdentifierName "c" = C<string>
Line 26 col 11 IdentifierName "z" = string
Line 27 col 4 IdentifierName "rs" = C<string>[]
Line 27 col 9 ArrayLiteralExpression "[r, r2, r3]" = C<string>[]
Line 27 col 10 IdentifierName "r" = C<string>
Line 27 col 13 IdentifierName "r2" = C<string>
Line 27 col 17 IdentifierName "r3" = C<string>
Line 28 col 0 InvocationExpression "rs.forEach(x => {
    x.foo;
    x.x;
    x.y;
    x.z;
})" = void
Line 28 col 0 MemberAccessExpression "rs.forEach" = (callbackfn: (value: C<string>, index: number, array: C<string>[]) => void, thisArg?: any) => void
Line 28 col 0 IdentifierName "rs" = C<string>[]
Line 29 col 3 IdentifierName "forEach" = (callbackfn: (value: C<string>, index: number, array: C<string>[]) => void, thisArg?: any) => void
Line 29 col 11 SimpleArrowFunctionExpression "x => {
    x.foo;
    x.x;
    x.y;
    x.z;
}" = (x: C<string>) => void
Line 29 col 11 IdentifierName "x" = C<string>
Line 30 col 0 MemberAccessExpression "x.foo" = () => C<string>
Line 30 col 0 IdentifierName "x" = C<string>
Line 30 col 6 IdentifierName "foo" = () => C<string>
Line 31 col 0 MemberAccessExpression "x.x" = C<string>
Line 31 col 0 IdentifierName "x" = C<string>
Line 31 col 6 IdentifierName "x" = C<string>
Line 32 col 0 MemberAccessExpression "x.y" = C<string>
Line 32 col 0 IdentifierName "x" = C<string>
Line 32 col 6 IdentifierName "y" = C<string>
Line 33 col 0 MemberAccessExpression "x.z" = string
Line 33 col 0 IdentifierName "x" = C<string>
Line 33 col 6 IdentifierName "z" = string